{"ast":null,"code":"import React,{useState,useRef}from'react';import{Map,MapMarker,CustomOverlayMap}from\"react-kakao-maps-sdk\";import styles from'./jejuMap.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function JejuMap(_ref){let{spots,filteredSpots,selectedSpot,onSelectSpot,categories,onCategoryChange}=_ref;const[mapCenter,setMapCenter]=useState({lat:33.36,lng:126.55});const[hoveredSpot,setHoveredSpot]=useState(null);const hoverTimeoutRef=useRef(null);const[isBouncing,setIsBouncing]=useState(null);// 새로운 상태\nconst selectSpot=spot=>{onSelectSpot(spot);setMapCenter({lat:spot.LATITUDE,lng:spot.LONGITUDE});setHoveredSpot(null);// Reset overlay visibility when a new spot is selected\nsetIsBouncing(spot.CONTENTS_ID);// 선택한 스팟에 대해 바운스 효과 적용\nsetTimeout(()=>setIsBouncing(null),500);// 0.5초 후에 바운스 효과 제거\n};const handleMouseOver=spot=>{clearTimeout(hoverTimeoutRef.current);setHoveredSpot(spot);};const handleMouseOut=()=>{hoverTimeoutRef.current=setTimeout(()=>{setHoveredSpot(null);},100);};return/*#__PURE__*/_jsxs(\"div\",{id:styles.mainJ2,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.mapSpace,children:/*#__PURE__*/_jsx(Map,{center:{lat:(selectedSpot===null||selectedSpot===void 0?void 0:selectedSpot.LATITUDE)||mapCenter.lat,lng:(selectedSpot===null||selectedSpot===void 0?void 0:selectedSpot.LONGITUDE)||mapCenter.lng},level:9,style:{width:\"100%\",height:\"100%\"},children:filteredSpots.map(spot=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(MapMarker,{position:{lat:spot.LATITUDE,lng:spot.LONGITUDE},onClick:()=>selectSpot(spot),onMouseOver:()=>handleMouseOver(spot),onMouseOut:handleMouseOut,image:{src:'/img/관광지.png',size:{width:50,height:50}}}),hoveredSpot===spot&&/*#__PURE__*/_jsx(CustomOverlayMap,{position:{lat:spot.LATITUDE,lng:spot.LONGITUDE},yAnchor:1.2// 오버레이 내부의 마우스 이벤트를 무시합니다.\n// style={{ pointerEvents: \"none\" }}\n,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.overlayWrapSmall,children:[/*#__PURE__*/_jsx(\"img\",{src:spot.THUMBNAIL_PATH,alt:\"thumbnail\",className:styles.overlayImageSmall}),/*#__PURE__*/_jsx(\"h4\",{className:styles.overlayTitleSmall,children:spot.TITLE}),/*#__PURE__*/_jsx(\"p\",{className:styles.overlayAddressSmall,children:spot.ROAD_ADDRESS}),/*#__PURE__*/_jsx(\"p\",{className:styles.overlayPhoneSmall,children:spot.PHONE_NO}),/*#__PURE__*/_jsx(\"p\",{className:styles.overlayIntroductionSmall,children:spot.INTRODUCTION})]})})]},spot.CONTENTS_ID))})}),/*#__PURE__*/_jsx(\"div\",{className:styles.categoryButtons,children:Object.keys(categories).map(category=>/*#__PURE__*/_jsx(\"button\",{className:styles.categoryButton,onClick:()=>onCategoryChange(categories[category].tags),style:{backgroundImage:\"url(\".concat(categories[category].imageUrl,\")\")},children:category},category))})]});}export default JejuMap;","map":{"version":3,"names":["React","useState","useRef","Map","MapMarker","CustomOverlayMap","styles","jsx","_jsx","jsxs","_jsxs","JejuMap","_ref","spots","filteredSpots","selectedSpot","onSelectSpot","categories","onCategoryChange","mapCenter","setMapCenter","lat","lng","hoveredSpot","setHoveredSpot","hoverTimeoutRef","isBouncing","setIsBouncing","selectSpot","spot","LATITUDE","LONGITUDE","CONTENTS_ID","setTimeout","handleMouseOver","clearTimeout","current","handleMouseOut","id","mainJ2","children","className","mapSpace","center","level","style","width","height","map","Fragment","position","onClick","onMouseOver","onMouseOut","image","src","size","yAnchor","overlayWrapSmall","THUMBNAIL_PATH","alt","overlayImageSmall","overlayTitleSmall","TITLE","overlayAddressSmall","ROAD_ADDRESS","overlayPhoneSmall","PHONE_NO","overlayIntroductionSmall","INTRODUCTION","categoryButtons","Object","keys","category","categoryButton","tags","backgroundImage","concat","imageUrl"],"sources":["C:/UHB/rest_area/src/kako_map/jejuMap.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\r\nimport styles from './jejuMap.module.css';\r\n\r\nfunction JejuMap({ spots, filteredSpots, selectedSpot, onSelectSpot, categories, onCategoryChange }) {\r\n    const [mapCenter, setMapCenter] = useState({ lat: 33.36, lng: 126.55 });\r\n    const [hoveredSpot, setHoveredSpot] = useState(null);\r\n    const hoverTimeoutRef = useRef(null);\r\n    const [isBouncing, setIsBouncing] = useState(null); // 새로운 상태\r\n\r\n    const selectSpot = (spot) => {\r\n        onSelectSpot(spot);\r\n        setMapCenter({ lat: spot.LATITUDE, lng: spot.LONGITUDE });\r\n        setHoveredSpot(null);  // Reset overlay visibility when a new spot is selected\r\n        setIsBouncing(spot.CONTENTS_ID); // 선택한 스팟에 대해 바운스 효과 적용\r\n        setTimeout(() => setIsBouncing(null), 500); // 0.5초 후에 바운스 효과 제거\r\n    };\r\n\r\n    const handleMouseOver = (spot) => {\r\n        clearTimeout(hoverTimeoutRef.current);\r\n        setHoveredSpot(spot);\r\n    };\r\n\r\n    const handleMouseOut = () => {\r\n        hoverTimeoutRef.current = setTimeout(() => {\r\n            setHoveredSpot(null);\r\n        }, 100);\r\n    };\r\n\r\n    return (\r\n        <div id={styles.mainJ2}>\r\n            <div className={styles.mapSpace}>\r\n                <Map\r\n                    center={{ lat: selectedSpot?.LATITUDE || mapCenter.lat, lng: selectedSpot?.LONGITUDE || mapCenter.lng }}\r\n                    level={9}\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                >\r\n                    {filteredSpots.map(spot => (\r\n                        <React.Fragment key={spot.CONTENTS_ID}>\r\n                            <MapMarker\r\n                                position={{ lat: spot.LATITUDE, lng: spot.LONGITUDE }}\r\n                                onClick={() => selectSpot(spot)}\r\n                                onMouseOver={() => handleMouseOver(spot)}\r\n                                onMouseOut={handleMouseOut}\r\n                                image={{\r\n                                    src: '/img/관광지.png',\r\n                                    size: { width: 50, height: 50 }\r\n                                }}\r\n                            />\r\n                            {hoveredSpot === spot && (  <CustomOverlayMap\r\n                                    position={{ lat: spot.LATITUDE, lng: spot.LONGITUDE }}\r\n                                    yAnchor={1.2}\r\n                                    // 오버레이 내부의 마우스 이벤트를 무시합니다.\r\n                                    // style={{ pointerEvents: \"none\" }}\r\n                                >\r\n                                    <div className={styles.overlayWrapSmall}>\r\n                                        <img src={spot.THUMBNAIL_PATH} alt=\"thumbnail\" className={styles.overlayImageSmall} />\r\n                                        <h4 className={styles.overlayTitleSmall}>{spot.TITLE}</h4>\r\n                                        <p className={styles.overlayAddressSmall}>{spot.ROAD_ADDRESS}</p>\r\n                                        <p className={styles.overlayPhoneSmall}>{spot.PHONE_NO}</p>\r\n                                        <p className={styles.overlayIntroductionSmall}>{spot.INTRODUCTION}</p>\r\n                                    </div>\r\n                                </CustomOverlayMap>\r\n                            )}\r\n                        </React.Fragment>\r\n                    ))}\r\n                </Map>\r\n            </div>\r\n            <div className={styles.categoryButtons}>\r\n                {Object.keys(categories).map(category => (\r\n                    <button\r\n                        key={category}\r\n                        className={styles.categoryButton}\r\n                        onClick={() => onCategoryChange(categories[category].tags)}\r\n                        style={{ backgroundImage: `url(${categories[category].imageUrl})` }}\r\n                    >\r\n                        {category}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JejuMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}