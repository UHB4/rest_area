{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Chart as ChartJS,ArcElement,Tooltip,Legend}from\"chart.js\";import{Doughnut}from\"react-chartjs-2\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";function NearbyGasChart(_ref){let{data}=_ref;const[stations,setStations]=useState([]);useEffect(()=>{if(data){setStations(data);}},[data]);ChartJS.register(ArcElement,Tooltip,Legend);let labels=[];if(stations.length>0){labels=stations.map((station,index)=>{return\"\".concat(index+1,\"\\uC21C\\uC704 - \").concat(station.name);});}// console.log(labels)\nlet price=[];if(stations.length>0){price=stations.map(station=>\"\".concat(station.price,\"\\uC6D0\"));}// console.log(price)\nconst combinedData=labels.map((label,index)=>\"\".concat(label,\" : \").concat(price[index]));const chartData={labels:combinedData,datasets:[{// label: '가격',\ndata:price.map(price=>parseInt(price)),// 가격 데이터를 사용하여 데이터 생성\nbackgroundColor:labels.map((_,index)=>\"hsl(\".concat(60+index*10,\", 80%, \").concat(65-index*3,\"%)\")),borderColor:Array.from({length:labels.length},()=>'green'),borderWidth:1}]};const legendTitle={display:true,text:'내 주변 주유소 휘발유 가격비교',padding:20,// 제목과 범례 사이의 간격 조절\nfont:{size:16,// 폰트 크기 설정\nweight:'bold'// 폰트 굵기 설정\n}};const navigate=useNavigate();const handleChartClick=(event,elements)=>{if(!elements||elements.length===0){return;}if(elements.length>0){// const clickedElementIndex = elements[0]._index;\n// const clickedData = chartData.labels[clickedElementIndex];\nnavigate(\"/map\");}};const options={plugins:{tooltip:{bodyFont:{size:15},callbacks:{title:function(){return'';},label:function(context){return\"\".concat(context.label.split(\" : \")[0],\": \").concat(context.label.split(\" : \")[1]);// return `${context.parsed.y}원`;\n}}},legend:{position:'top',title:legendTitle,labels:{boxHeight:17.5,maxHeight:105// filter: (legendItem, data) => {\n//     return data.datasets.length > 5 ? data.datasets.indexOf(legendItem.dataset) < 5 : true;\n// }\n}}},onClick:handleChartClick};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',maxWidth:'400px',margin:'auto'},children:/*#__PURE__*/_jsx(Doughnut,{data:chartData,options:options,width:400,height:460})})})});}export default NearbyGasChart;","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","useNavigate","jsx","_jsx","NearbyGasChart","_ref","data","stations","setStations","register","labels","length","map","station","index","concat","name","price","combinedData","label","chartData","datasets","parseInt","backgroundColor","_","borderColor","Array","from","borderWidth","legendTitle","display","text","padding","font","size","weight","navigate","handleChartClick","event","elements","options","plugins","tooltip","bodyFont","callbacks","title","context","split","legend","position","boxHeight","maxHeight","onClick","className","children","style","width","maxWidth","margin","height"],"sources":["C:/UHB/rest_area/src/routes/Chart/NearbyGasChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nfunction NearbyGasChart({ data }) {\r\n    const [stations, setStations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setStations(data);\r\n        }\r\n    }, [data]);\r\n\r\n    ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n    let labels = [];\r\n\r\n    if (stations.length > 0) {\r\n        labels = stations.map((station, index) => {\r\n            return `${index + 1}순위 - ${station.name}`;\r\n        });\r\n    }\r\n    // console.log(labels)\r\n    let price = [];\r\n    if (stations.length > 0) {\r\n        price = stations.map((station) => `${station.price}원`);\r\n    }\r\n\r\n\r\n    // console.log(price)\r\n    const combinedData = labels.map((label, index) => (`${label} : ${price[index]}`));\r\n\r\n    const chartData = {\r\n\r\n        labels: combinedData,\r\n        datasets: [\r\n            {\r\n                // label: '가격',\r\n                data: price.map((price) => parseInt(price)), // 가격 데이터를 사용하여 데이터 생성\r\n                backgroundColor: labels.map((_, index) => `hsl(${60 + index * 10}, 80%, ${65 - index * 3}%)`),\r\n                borderColor: Array.from({ length: labels.length }, () => 'green'),\r\n                borderWidth: 1,\r\n            }\r\n        ]\r\n    };\r\n    const legendTitle = {\r\n        display: true,\r\n        text: '내 주변 주유소 휘발유 가격비교',\r\n        padding: 20, // 제목과 범례 사이의 간격 조절\r\n        font: {\r\n            size: 16, // 폰트 크기 설정\r\n            weight: 'bold', // 폰트 굵기 설정\r\n        }\r\n    };\r\n    const navigate = useNavigate();\r\n    const handleChartClick = (event, elements) => {\r\n        if (!elements || elements.length === 0) {\r\n            return;\r\n        }\r\n        if (elements.length > 0) {\r\n            // const clickedElementIndex = elements[0]._index;\r\n            // const clickedData = chartData.labels[clickedElementIndex];\r\n            navigate(`/map`);\r\n        }\r\n    };\r\n    const options = {\r\n        plugins: {\r\n            tooltip: {\r\n                bodyFont: {\r\n                    size: 15,\r\n                },\r\n                callbacks: {\r\n                    title: function () {\r\n                        return '';\r\n                    },\r\n                    label: function (context) {\r\n                        return `${context.label.split(\" : \")[0]}: ${context.label.split(\" : \")[1]}`;\r\n                        // return `${context.parsed.y}원`;\r\n\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                position: 'top',\r\n                title: legendTitle,\r\n                labels:\r\n                    {\r\n                        boxHeight: 17.5,\r\n                        maxHeight: 105,\r\n                        // filter: (legendItem, data) => {\r\n                        //     return data.datasets.length > 5 ? data.datasets.indexOf(legendItem.dataset) < 5 : true;\r\n                        // }\r\n\r\n                    }\r\n\r\n            },\r\n        },\r\n\r\n        onClick: handleChartClick,\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"App\">\r\n                <div style={{width: '100%', maxWidth: '400px', margin: 'auto'}}>\r\n                    <Doughnut data={chartData} options={options} width={400} height={460} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NearbyGasChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,KAAK,GAAI,CAAAC,OAAO,CAAEC,UAAU,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CACxE,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,OAAQC,WAAW,KAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAC7C,QAAS,CAAAC,cAAcA,CAAAC,IAAA,CAAW,IAAV,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC5B,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACZ,GAAIY,IAAI,CAAE,CACNE,WAAW,CAACF,IAAI,CAAC,CACrB,CACJ,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CAEVV,OAAO,CAACa,QAAQ,CAACZ,UAAU,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAE7C,GAAI,CAAAW,MAAM,CAAG,EAAE,CAEf,GAAIH,QAAQ,CAACI,MAAM,CAAG,CAAC,CAAE,CACrBD,MAAM,CAAGH,QAAQ,CAACK,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,GAAK,CACtC,SAAAC,MAAA,CAAUD,KAAK,CAAG,CAAC,oBAAAC,MAAA,CAAQF,OAAO,CAACG,IAAI,EAC3C,CAAC,CAAC,CACN,CACA;AACA,GAAI,CAAAC,KAAK,CAAG,EAAE,CACd,GAAIV,QAAQ,CAACI,MAAM,CAAG,CAAC,CAAE,CACrBM,KAAK,CAAGV,QAAQ,CAACK,GAAG,CAAEC,OAAO,KAAAE,MAAA,CAAQF,OAAO,CAACI,KAAK,UAAG,CAAC,CAC1D,CAGA;AACA,KAAM,CAAAC,YAAY,CAAGR,MAAM,CAACE,GAAG,CAAC,CAACO,KAAK,CAAEL,KAAK,MAAAC,MAAA,CAASI,KAAK,QAAAJ,MAAA,CAAME,KAAK,CAACH,KAAK,CAAC,CAAG,CAAC,CAEjF,KAAM,CAAAM,SAAS,CAAG,CAEdV,MAAM,CAAEQ,YAAY,CACpBG,QAAQ,CAAE,CACN,CACI;AACAf,IAAI,CAAEW,KAAK,CAACL,GAAG,CAAEK,KAAK,EAAKK,QAAQ,CAACL,KAAK,CAAC,CAAC,CAAE;AAC7CM,eAAe,CAAEb,MAAM,CAACE,GAAG,CAAC,CAACY,CAAC,CAAEV,KAAK,UAAAC,MAAA,CAAY,EAAE,CAAGD,KAAK,CAAG,EAAE,YAAAC,MAAA,CAAU,EAAE,CAAGD,KAAK,CAAG,CAAC,MAAI,CAAC,CAC7FW,WAAW,CAAEC,KAAK,CAACC,IAAI,CAAC,CAAEhB,MAAM,CAAED,MAAM,CAACC,MAAO,CAAC,CAAE,IAAM,OAAO,CAAC,CACjEiB,WAAW,CAAE,CACjB,CAAC,CAET,CAAC,CACD,KAAM,CAAAC,WAAW,CAAG,CAChBC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,mBAAmB,CACzBC,OAAO,CAAE,EAAE,CAAE;AACbC,IAAI,CAAE,CACFC,IAAI,CAAE,EAAE,CAAE;AACVC,MAAM,CAAE,MAAQ;AACpB,CACJ,CAAC,CACD,KAAM,CAAAC,QAAQ,CAAGnC,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAoC,gBAAgB,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,CAC1C,GAAI,CAACA,QAAQ,EAAIA,QAAQ,CAAC5B,MAAM,GAAK,CAAC,CAAE,CACpC,OACJ,CACA,GAAI4B,QAAQ,CAAC5B,MAAM,CAAG,CAAC,CAAE,CACrB;AACA;AACAyB,QAAQ,OAAO,CAAC,CACpB,CACJ,CAAC,CACD,KAAM,CAAAI,OAAO,CAAG,CACZC,OAAO,CAAE,CACLC,OAAO,CAAE,CACLC,QAAQ,CAAE,CACNT,IAAI,CAAE,EACV,CAAC,CACDU,SAAS,CAAE,CACPC,KAAK,CAAE,QAAAA,CAAA,CAAY,CACf,MAAO,EAAE,CACb,CAAC,CACD1B,KAAK,CAAE,QAAAA,CAAU2B,OAAO,CAAE,CACtB,SAAA/B,MAAA,CAAU+B,OAAO,CAAC3B,KAAK,CAAC4B,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAAhC,MAAA,CAAK+B,OAAO,CAAC3B,KAAK,CAAC4B,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzE;AAEJ,CACJ,CACJ,CAAC,CACDC,MAAM,CAAE,CACJC,QAAQ,CAAE,KAAK,CACfJ,KAAK,CAAEhB,WAAW,CAClBnB,MAAM,CACF,CACIwC,SAAS,CAAE,IAAI,CACfC,SAAS,CAAE,GACX;AACA;AACA;AAEJ,CAER,CACJ,CAAC,CAEDC,OAAO,CAAEf,gBACb,CAAC,CAED,mBACIlC,IAAA,QAAKkD,SAAS,CAAC,KAAK,CAAAC,QAAA,cAChBnD,IAAA,QAAKkD,SAAS,CAAC,KAAK,CAAAC,QAAA,cAChBnD,IAAA,QAAKoD,KAAK,CAAE,CAACC,KAAK,CAAE,MAAM,CAAEC,QAAQ,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAM,CAAE,CAAAJ,QAAA,cAC3DnD,IAAA,CAACH,QAAQ,EAACM,IAAI,CAAEc,SAAU,CAACoB,OAAO,CAAEA,OAAQ,CAACgB,KAAK,CAAE,GAAI,CAACG,MAAM,CAAE,GAAI,CAAE,CAAC,CACvE,CAAC,CACL,CAAC,CACL,CAAC,CAEd,CAEA,cAAe,CAAAvD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}