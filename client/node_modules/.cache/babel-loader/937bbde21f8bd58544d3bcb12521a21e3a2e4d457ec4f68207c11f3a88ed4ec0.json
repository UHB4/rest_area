{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\kako_map\\\\gas_station.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Map, MapMarker, MapInfoWindow } from \"react-kakao-maps-sdk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GasStation() {\n  _s();\n  const [state, setState] = useState({\n    center: {\n      lat: 33.450701,\n      lng: 126.570667\n    },\n    stations: [],\n    errMsg: null,\n    isLoading: true,\n    selectedStation: null\n  });\n  useEffect(() => {\n    const fetchStations = position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      axios.post('http://localhost:5000/get-stations', {\n        latitude,\n        longitude\n      }).then(response => {\n        setState(prev => ({\n          ...prev,\n          center: {\n            lat: latitude,\n            lng: longitude\n          },\n          stations: response.data,\n          isLoading: false\n        }));\n      }).catch(error => {\n        setState(prev => ({\n          ...prev,\n          errMsg: '주유소 정보를 가져오는데 실패했습니다.',\n          isLoading: false\n        }));\n      });\n    };\n    navigator.geolocation.getCurrentPosition(fetchStations, err => {\n      setState(prev => ({\n        ...prev,\n        errMsg: err.message,\n        isLoading: false\n      }));\n    });\n  }, []);\n  const onMarkerClick = station => {\n    setState(prev => ({\n      ...prev,\n      selectedStation: station\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Map, {\n    center: state.center,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    level: 3,\n    children: [/*#__PURE__*/_jsxDEV(MapMarker, {\n      position: state.center\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), !state.isLoading && state.stations.map(station => /*#__PURE__*/_jsxDEV(MapMarker, {\n      position: {\n        lat: station.latitude,\n        lng: station.longitude\n      },\n      image: {\n        src: \"img/fuel.png\",\n        // 실제 마커 이미지 경로로 대체\n        size: {\n          width: 24,\n          height: 35\n        }\n      },\n      onClick: () => onMarkerClick(station),\n      children: state.selectedStation && state.selectedStation.name === station.name && /*#__PURE__*/_jsxDEV(MapInfoWindow, {\n        position: {\n          lat: station.latitude,\n          lng: station.longitude\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '15px',\n            border: '1px solid #ccc',\n            borderRadius: '5px',\n            backgroundColor: '#fff',\n            width: '5px',\n            fontSize: '12px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: station.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `path/to/brand-icons/${station.brand}.png`,\n              alt: station.brand,\n              style: {\n                width: '24px',\n                height: '24px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '10px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uAC00\\uACA9:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 40\n              }, this), \" \", station.price, \"\\uC6D0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uAC70\\uB9AC:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 40\n              }, this), \" \", station.distance, \"m\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)\n    }, station.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(GasStation, \"+zXlwemAFx+qwh4irmfpaEDm60c=\");\n_c = GasStation;\nexport default GasStation;\nvar _c;\n$RefreshReg$(_c, \"GasStation\");","map":{"version":3,"names":["React","useState","useEffect","axios","Map","MapMarker","MapInfoWindow","jsxDEV","_jsxDEV","GasStation","_s","state","setState","center","lat","lng","stations","errMsg","isLoading","selectedStation","fetchStations","position","latitude","longitude","coords","post","then","response","prev","data","catch","error","navigator","geolocation","getCurrentPosition","err","message","onMarkerClick","station","style","width","height","level","children","fileName","_jsxFileName","lineNumber","columnNumber","map","image","src","size","onClick","name","padding","border","borderRadius","backgroundColor","fontSize","textAlign","display","justifyContent","marginBottom","fontWeight","brand","alt","margin","price","distance","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/kako_map/gas_station.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Map, MapMarker, MapInfoWindow } from \"react-kakao-maps-sdk\";\r\n\r\nfunction GasStation() {\r\n    const [state, setState] = useState({\r\n        center: { lat: 33.450701, lng: 126.570667 },\r\n        stations: [],\r\n        errMsg: null,\r\n        isLoading: true,\r\n        selectedStation: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchStations = (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            axios.post('http://localhost:5000/get-stations', { latitude, longitude })\r\n                .then(response => {\r\n                    setState(prev => ({\r\n                        ...prev,\r\n                        center: { lat: latitude, lng: longitude },\r\n                        stations: response.data,\r\n                        isLoading: false\r\n                    }));\r\n                })\r\n                .catch(error => {\r\n                    setState(prev => ({\r\n                        ...prev,\r\n                        errMsg: '주유소 정보를 가져오는데 실패했습니다.',\r\n                        isLoading: false\r\n                    }));\r\n                });\r\n        };\r\n\r\n        navigator.geolocation.getCurrentPosition(fetchStations, (err) => {\r\n            setState(prev => ({ ...prev, errMsg: err.message, isLoading: false }));\r\n        });\r\n    }, []);\r\n\r\n    const onMarkerClick = (station) => {\r\n        setState(prev => ({ ...prev, selectedStation: station }));\r\n    };\r\n\r\n    return (\r\n        <Map center={state.center} style={{ width: \"100%\", height: \"100%\" }} level={3}>\r\n            <MapMarker position={state.center} />\r\n            {!state.isLoading && state.stations.map(station => (\r\n                <MapMarker\r\n                    key={station.name}\r\n                    position={{ lat: station.latitude, lng: station.longitude }}\r\n                    image={{\r\n                        src: \"img/fuel.png\", // 실제 마커 이미지 경로로 대체\r\n                        size: { width: 24, height: 35 },\r\n                    }}\r\n                    onClick={() => onMarkerClick(station)}\r\n                >\r\n                    {state.selectedStation && state.selectedStation.name === station.name && (\r\n                        <MapInfoWindow position={{ lat: station.latitude, lng: station.longitude }}>\r\n                            <div style={{\r\n                                padding: '15px',\r\n                                border: '1px solid #ccc',\r\n                                borderRadius: '5px',\r\n                                backgroundColor: '#fff',\r\n                                width: '5px',\r\n                                fontSize: '12px',\r\n                                textAlign: 'center',\r\n                            }}>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\r\n                                    <span style={{ fontWeight: 'bold' }}>{station.name}</span>\r\n                                    <img\r\n                                        src={`path/to/brand-icons/${station.brand}.png`}\r\n                                        alt={station.brand}\r\n                                        style={{ width: '24px', height: '24px' }}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ margin: '10px 0' }}>\r\n                                    <p><strong>가격:</strong> {station.price}원</p>\r\n                                    <p><strong>거리:</strong> {station.distance}m</p>\r\n                                </div>\r\n                            </div>\r\n                        </MapInfoWindow>\r\n\r\n                    )}\r\n                </MapMarker>\r\n            ))}\r\n        </Map>\r\n    );\r\n}\r\n\r\nexport default GasStation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}