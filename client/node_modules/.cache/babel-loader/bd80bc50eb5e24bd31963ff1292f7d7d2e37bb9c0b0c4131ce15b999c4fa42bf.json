{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\client\\\\src\\\\chatbot\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './chat.css';\nimport { FaMicrophone } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport Stationinfo from './Stationinfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [fuelStations] = useState([]);\n  const [chargingStations] = useState([]);\n  const [isListening, setIsListening] = useState(false);\n  const Chat = ({\n    stations\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: stations.map(station => /*#__PURE__*/_jsxDEV(Stationinfo, {\n        name: station.name,\n        address: station.address,\n        distance: station.distance\n      }, station.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  };\n  useEffect(() => {\n    const initialMessage = {\n      id: Date.now(),\n      text: '안녕하세요! 여러분 주변에 최저가 주유소, 전기차 충전소 위치 등을 알려주고, 고속도로의 휴게소 정보를 알려드립니다:)',\n      sender: 'bot'\n    };\n    setMessages([initialMessage]);\n    speak(initialMessage.text);\n    const chatContainer = document.querySelector('.chat-container');\n    chatContainer.scrollTop = chatContainer.scrollHeight;\n  }, []);\n  useEffect(() => {\n    const chatContainer = document.querySelector('.chat-container');\n    chatContainer.scrollTop = chatContainer.scrollHeight;\n  }, [messages]);\n  const speak = text => {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'ko-KR';\n    synth.speak(utterance);\n  };\n  const handleSpeech = () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = 'ko-KR';\n    recognition.start();\n    recognition.onresult = event => {\n      const speechResult = event.results[0][0].transcript;\n      console.log(`Recognized: ${speechResult}`);\n      handleMessage(speechResult);\n      setIsListening(false);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n      setIsListening(false);\n    };\n  };\n  const fetchChargingStations = async (latitude, longitude) => {\n    try {\n      const response = await axios.post('http://localhost:5000/location', {\n        latitude: latitude,\n        longitude: longitude\n      });\n      const formattedStations = response.data.stations.map(station => `${station['Station Name']} - 현 위치로부터 ${formatChargingStationDistance(station.Distance)} 떨어짐`).join('\\n');\n      const resultsMessage = {\n        id: Date.now(),\n        text: `전기차 충전소 정보:\\n${formattedStations}`,\n        sender: 'bot'\n      };\n      setMessages(messages => [...messages, resultsMessage]);\n      speak(resultsMessage.text);\n    } catch (error) {\n      console.error(\"Error fetching stations:\", error);\n    }\n  };\n  const fetchFuelPrices = async (latitude, longitude, type) => {\n    try {\n      const response = await axios({\n        method: 'post',\n        url: 'http://localhost:5000/get_gas_stations22',\n        data: {\n          latitude,\n          longitude,\n          type\n        }\n      });\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(response.data.data, \"application/xml\");\n      const oilNodes = xmlDoc.getElementsByTagName(\"OIL\");\n      const stations = Array.from(oilNodes).map(node => ({\n        id: node.getElementsByTagName(\"UNI_ID\")[0].textContent,\n        name: node.getElementsByTagName(\"OS_NM\")[0].textContent,\n        price: node.getElementsByTagName(\"PRICE\")[0].textContent,\n        distance: node.getElementsByTagName(\"DISTANCE\")[0].textContent\n      })).sort((a, b) => parseFloat(a.price) - parseFloat(b.price)).slice(0, 10);\n      const formattedStations = stations.map(station => `${station.name} - ${station.price}원 - 현 위치로부터 ${formatFuelStationDistance(station.distance)} 떨어짐`).join('\\n');\n      const resultsMessage = {\n        id: Date.now(),\n        text: `주유소 정보:\\n${formattedStations}`,\n        sender: 'bot'\n      };\n      setMessages(messages => [...messages, resultsMessage]);\n      speak(resultsMessage.text);\n    } catch (error) {\n      console.error(\"Error fetching stations:\", error);\n    }\n  };\n  const formatFuelStationDistance = distance => {\n    const distanceInMeters = parseFloat(distance);\n    return `${(distanceInMeters / 1000).toFixed(2)}km`;\n  };\n  const formatChargingStationDistance = distance => {\n    const distanceInMeters = parseFloat(distance);\n    return `${distanceInMeters.toFixed(2)}km`;\n  };\n  const handleMessage = message => {\n    setMessages(messages => [...messages, {\n      id: Date.now(),\n      text: message,\n      sender: 'user'\n    }]);\n    speak(message);\n    if (message.includes('주유소')) {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          fetchFuelPrices(latitude, longitude, 'fuel');\n        }, handleGeolocationError);\n      } else {\n        const botResponse = {\n          id: Date.now(),\n          text: \"Geolocation이 지원되지 않는 브라우저입니다.\",\n          sender: 'bot'\n        };\n        setMessages(messages => [...messages, botResponse]);\n        speak(botResponse.text);\n      }\n    } else if (message.includes('전기차')) {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          fetchChargingStations(latitude, longitude);\n        }, handleGeolocationError);\n      } else {\n        const botResponse = {\n          id: Date.now(),\n          text: \"Geolocation이 지원되지 않는 브라우저입니다.\",\n          sender: 'bot'\n        };\n        setMessages(messages => [...messages, botResponse]);\n        speak(botResponse.text);\n      }\n    }\n    if (message.includes('고속도로 휴게소 정보 보러가기')) {\n      const RestareaUrl = \"http://localhost:3000/restArea\";\n      const botResponse = {\n        id: Date.now(),\n        text: `고속도로 휴게소 정보를 확인하러 가려면 여기를 클릭하세요.`,\n        sender: 'bot',\n        url: RestareaUrl // URL을 메시지 객체에 추가\n      };\n      setMessages(messages => [...messages, botResponse]);\n      speak(\"고속도로 휴게소 정보 페이지 링크를 보냈습니다.\");\n    }\n    if (message.includes('로그인 페이지로 이동하기')) {\n      const loginUrl = \"http://localhost:3000/login\";\n      const botResponse = {\n        id: Date.now(),\n        text: `로그인 페이지로 이동하려면 여기를 클릭하세요.`,\n        sender: 'bot',\n        url: loginUrl\n      };\n      setMessages(messages => [...messages, botResponse]);\n      speak(\"로그인 페이지 링크를 보냈습니다.\");\n    }\n    if (message.includes('통계 차트 보러가기')) {\n      const statsUrl = \"http://localhost:3000/sub\";\n      const botResponse = {\n        id: Date.now(),\n        text: `통계 차트 페이지로 이동하려면 여기를 클릭하세요.`,\n        sender: 'bot',\n        url: statsUrl\n      };\n      setMessages(messages => [...messages, botResponse]);\n      speak(\"통계 차트 페이지 링크를 보냈습니다.\");\n    }\n  };\n  const handleGeolocationError = error => {\n    let errorMessage = '';\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        errorMessage = \"위치 정보 접근이 거부되었습니다.\";\n        break;\n      case error.POSITION_UNAVAILABLE:\n        errorMessage = \"위치 정보를 사용할 수 없습니다.\";\n        break;\n      case error.TIMEOUT:\n        errorMessage = \"위치 정보를 가져오는 요청이 시간 초과되었습니다.\";\n        break;\n      default:\n        errorMessage = \"알 수 없는 오류가 발생했습니다.\";\n        break;\n    }\n    const botResponse = {\n      id: Date.now(),\n      text: errorMessage,\n      sender: 'bot'\n    };\n    setMessages(messages => [...messages, botResponse]);\n    speak(botResponse.text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.url ? /*#__PURE__*/_jsxDEV(Link, {\n          to: msg.url,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }, this) : msg.text\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stations-list\",\n      children: /*#__PURE__*/_jsxDEV(Chat, {\n        stations: fuelStations,\n        type: \"fuel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stations-list\",\n      children: /*#__PURE__*/_jsxDEV(Chat, {\n        stations: chargingStations,\n        type: \"charge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMessage('내 주변 최저가 주유소 찾기'),\n        children: \"\\uB0B4 \\uC8FC\\uBCC0 \\uCD5C\\uC800\\uAC00 \\uC8FC\\uC720\\uC18C \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMessage('내 주변 전기차 충전소 찾기'),\n        children: \"\\uB0B4 \\uC8FC\\uBCC0 \\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMessage('고속도로 휴게소 정보 확인하러 가기'),\n        children: \"\\uACE0\\uC18D\\uB3C4\\uB85C \\uD734\\uAC8C\\uC18C \\uC815\\uBCF4 \\uD655\\uC778\\uD558\\uB7EC \\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMessage('로그인 페이지로 이동하기'),\n        children: \"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMessage('통계 차트 보러가기'),\n        children: \"\\uD1B5\\uACC4 \\uCC28\\uD2B8 \\uBCF4\\uB7EC\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"voice-button\",\n          onClick: handleSpeech,\n          disabled: isListening,\n          children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), isListening ? \"듣는 중...\" : \"음성인식\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tooltiptext\",\n          children: [\"\\uC74C\\uC131\\uC778\\uC2DD \\uBC84\\uD2BC\\uC744 \\uB204\\uB974\\uACE0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 37\n          }, this), \" \\uC8FC\\uC720\\uC18C! or \\uC804\\uAE30\\uCC28! \\uB77C\\uACE0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 58\n          }, this), \" \\uC74C\\uC131\\uC73C\\uB85C \\uB9D0\\uC500\\uD558\\uC2DC\\uBA74 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 75\n          }, this), \"\\uADF8\\uC5D0 \\uB9DE\\uB294 \\uC815\\uBCF4\\uAC00 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 96\n          }, this), \"(\\uC8FC\\uC720\\uC18C\\uB294 \\uBC18\\uACBD 5KM \\uB0B4\\uC5D0 \\uC788\\uB294 \\uCD5C\\uC800\\uAC00 \\uC8FC\\uC720\\uC18C\\uAC00,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 53\n          }, this), \" \\uC804\\uAE30\\uCC28\\uB294 \\uBC18\\uACBD 5KM \\uB0B4\\uC5D0 \\uC788\\uB294 \\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C\\uAC00 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"cBG5ZsGII4PHaU0ywdw5xrAySG4=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","FaMicrophone","Link","Stationinfo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","fuelStations","chargingStations","isListening","setIsListening","Chat","stations","children","map","station","name","address","distance","id","fileName","_jsxFileName","lineNumber","columnNumber","initialMessage","Date","now","text","sender","speak","chatContainer","document","querySelector","scrollTop","scrollHeight","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","handleSpeech","recognition","webkitSpeechRecognition","start","onresult","event","speechResult","results","transcript","console","log","handleMessage","onend","onerror","error","fetchChargingStations","latitude","longitude","response","post","formattedStations","data","formatChargingStationDistance","Distance","join","resultsMessage","fetchFuelPrices","type","method","url","parser","DOMParser","xmlDoc","parseFromString","oilNodes","getElementsByTagName","Array","from","node","textContent","price","sort","a","b","parseFloat","slice","formatFuelStationDistance","distanceInMeters","toFixed","message","includes","navigator","geolocation","getCurrentPosition","position","coords","handleGeolocationError","botResponse","RestareaUrl","loginUrl","statsUrl","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","className","msg","to","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/client/src/chatbot/chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './chat.css';\r\nimport { FaMicrophone } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport Stationinfo from './Stationinfo';\r\n\r\n\r\nfunction Chatbot() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [fuelStations] = useState([]);\r\n    const [chargingStations] = useState([]);\r\n    const [isListening, setIsListening] = useState(false);\r\n\r\n    const Chat = ({ stations }) => {\r\n        return (\r\n            <div>\r\n                {stations.map(station => (\r\n                    <Stationinfo\r\n                        key={station.id}\r\n                        name={station.name}\r\n                        address={station.address}\r\n                        distance={station.distance}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        const initialMessage = {\r\n            id: Date.now(),\r\n            text: '안녕하세요! 여러분 주변에 최저가 주유소, 전기차 충전소 위치 등을 알려주고, 고속도로의 휴게소 정보를 알려드립니다:)',\r\n            sender: 'bot'\r\n        };\r\n        setMessages([initialMessage]);\r\n        speak(initialMessage.text);\r\n\r\n        const chatContainer = document.querySelector('.chat-container');\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const chatContainer = document.querySelector('.chat-container');\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }, [messages]);\r\n\r\n    const speak = (text) => {\r\n        const synth = window.speechSynthesis;\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        utterance.lang = 'ko-KR';\r\n        synth.speak(utterance);\r\n    };\r\n\r\n    const handleSpeech = () => {\r\n        const recognition = new window.webkitSpeechRecognition();\r\n        recognition.lang = 'ko-KR';\r\n        recognition.start();\r\n\r\n        recognition.onresult = (event) => {\r\n            const speechResult = event.results[0][0].transcript;\r\n            console.log(`Recognized: ${speechResult}`);\r\n            handleMessage(speechResult);\r\n            setIsListening(false);\r\n        };\r\n\r\n        recognition.onend = () => {\r\n            setIsListening(false);\r\n        };\r\n\r\n        recognition.onerror = (event) => {\r\n            console.error(\"Speech recognition error\", event.error);\r\n            setIsListening(false);\r\n        };\r\n    };\r\n\r\n    const fetchChargingStations = async (latitude, longitude) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/location', {\r\n                latitude: latitude,\r\n                longitude: longitude\r\n            });\r\n            const formattedStations = response.data.stations.map(station => `${station['Station Name']} - 현 위치로부터 ${formatChargingStationDistance(station.Distance)} 떨어짐`).join('\\n');\r\n            const resultsMessage = {\r\n                id: Date.now(),\r\n                text: `전기차 충전소 정보:\\n${formattedStations}`,\r\n                sender: 'bot'\r\n            };\r\n            setMessages(messages => [...messages, resultsMessage]);\r\n            speak(resultsMessage.text);\r\n        } catch (error) {\r\n            console.error(\"Error fetching stations:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchFuelPrices = async (latitude, longitude, type) => {\r\n        try {\r\n            const response = await axios({\r\n                method: 'post',\r\n                url: 'http://localhost:5000/get_gas_stations22',\r\n                data: { latitude, longitude, type }\r\n            });\r\n\r\n            const parser = new DOMParser();\r\n            const xmlDoc = parser.parseFromString(response.data.data, \"application/xml\");\r\n            const oilNodes = xmlDoc.getElementsByTagName(\"OIL\");\r\n\r\n            const stations = Array.from(oilNodes).map(node => ({\r\n                id: node.getElementsByTagName(\"UNI_ID\")[0].textContent,\r\n                name: node.getElementsByTagName(\"OS_NM\")[0].textContent,\r\n                price: node.getElementsByTagName(\"PRICE\")[0].textContent,\r\n                distance: node.getElementsByTagName(\"DISTANCE\")[0].textContent\r\n            })).sort((a, b) => parseFloat(a.price) - parseFloat(b.price)).slice(0, 10);\r\n\r\n            const formattedStations = stations.map(station => `${station.name} - ${station.price}원 - 현 위치로부터 ${formatFuelStationDistance(station.distance)} 떨어짐`).join('\\n');\r\n            const resultsMessage = {\r\n                id: Date.now(),\r\n                text: `주유소 정보:\\n${formattedStations}`,\r\n                sender: 'bot'\r\n            };\r\n            setMessages(messages => [...messages, resultsMessage]);\r\n            speak(resultsMessage.text);\r\n        } catch (error) {\r\n            console.error(\"Error fetching stations:\", error);\r\n        }\r\n    };\r\n\r\n    const formatFuelStationDistance = (distance) => {\r\n        const distanceInMeters = parseFloat(distance);\r\n        return `${(distanceInMeters / 1000).toFixed(2)}km`;\r\n    };\r\n\r\n    const formatChargingStationDistance = (distance) => {\r\n        const distanceInMeters = parseFloat(distance);\r\n        return `${distanceInMeters.toFixed(2)}km`;\r\n    };\r\n\r\n    const handleMessage = (message) => {\r\n        setMessages(messages => [...messages, {id: Date.now(), text: message, sender: 'user'}]);\r\n        speak(message);\r\n\r\n        if (message.includes('주유소')) {\r\n            if (\"geolocation\" in navigator) {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    const {latitude, longitude} = position.coords;\r\n                    fetchFuelPrices(latitude, longitude, 'fuel');\r\n                }, handleGeolocationError);\r\n            } else {\r\n                const botResponse = {id: Date.now(), text: \"Geolocation이 지원되지 않는 브라우저입니다.\", sender: 'bot'};\r\n                setMessages(messages => [...messages, botResponse]);\r\n                speak(botResponse.text);\r\n            }\r\n        } else if (message.includes('전기차')) {\r\n            if (\"geolocation\" in navigator) {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    const {latitude, longitude} = position.coords;\r\n                    fetchChargingStations(latitude, longitude);\r\n                }, handleGeolocationError);\r\n            } else {\r\n                const botResponse = {id: Date.now(), text: \"Geolocation이 지원되지 않는 브라우저입니다.\", sender: 'bot'};\r\n                setMessages(messages => [...messages, botResponse]);\r\n                speak(botResponse.text);\r\n            }\r\n        }\r\n        if (message.includes('고속도로 휴게소 정보 보러가기')) {\r\n            const RestareaUrl = \"http://localhost:3000/restArea\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `고속도로 휴게소 정보를 확인하러 가려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: RestareaUrl // URL을 메시지 객체에 추가\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"고속도로 휴게소 정보 페이지 링크를 보냈습니다.\");\r\n        }\r\n        if (message.includes('로그인 페이지로 이동하기')) {\r\n            const loginUrl = \"http://localhost:3000/login\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `로그인 페이지로 이동하려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: loginUrl\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"로그인 페이지 링크를 보냈습니다.\");\r\n        }\r\n        if (message.includes('통계 차트 보러가기')) {\r\n            const statsUrl = \"http://localhost:3000/sub\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `통계 차트 페이지로 이동하려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: statsUrl\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"통계 차트 페이지 링크를 보냈습니다.\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleGeolocationError = (error) => {\r\n        let errorMessage = '';\r\n        switch(error.code) {\r\n            case error.PERMISSION_DENIED:\r\n                errorMessage = \"위치 정보 접근이 거부되었습니다.\";\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n                errorMessage = \"위치 정보를 사용할 수 없습니다.\";\r\n                break;\r\n            case error.TIMEOUT:\r\n                errorMessage = \"위치 정보를 가져오는 요청이 시간 초과되었습니다.\";\r\n                break;\r\n            default:\r\n                errorMessage = \"알 수 없는 오류가 발생했습니다.\";\r\n                break;\r\n        }\r\n        const botResponse = {\r\n            id: Date.now(),\r\n            text: errorMessage,\r\n            sender: 'bot'\r\n        };\r\n        setMessages(messages => [...messages, botResponse]);\r\n        speak(botResponse.text);\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat_app\">\r\n            <div className=\"chat-container\">\r\n                {messages.map(msg => (\r\n                    <div key={msg.id} className={`message ${msg.sender}`}>\r\n                        {msg.url ? (\r\n                            <Link to={msg.url}>{msg.text}</Link>\r\n                        ) : (\r\n                            msg.text\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"stations-list\">\r\n                <Chat stations={fuelStations} type=\"fuel\"/>\r\n            </div>\r\n            <div className=\"stations-list\">\r\n                <Chat stations={chargingStations} type=\"charge\"/>\r\n            </div>\r\n\r\n            <div className=\"user-input\">\r\n                <button onClick={() => handleMessage('내 주변 최저가 주유소 찾기')}>내 주변 최저가 주유소 찾기</button>\r\n                <button onClick={() => handleMessage('내 주변 전기차 충전소 찾기')}>내 주변 전기차 충전소 찾기</button>\r\n                <button onClick={() => handleMessage('고속도로 휴게소 정보 확인하러 가기')}>고속도로 휴게소 정보 확인하러 가기</button>\r\n                <button onClick={() => handleMessage('로그인 페이지로 이동하기')}>로그인 페이지로 이동하기</button>\r\n                <button onClick={() => handleMessage('통계 차트 보러가기')}>통계 차트 보러가기</button>\r\n                <div className=\"tooltip\">\r\n                    <button className=\"voice-button\" onClick={handleSpeech} disabled={isListening}>\r\n                        <FaMicrophone/>\r\n                        {isListening ? \"듣는 중...\" : \"음성인식\"}\r\n                    </button>\r\n                    <span className=\"tooltiptext\">\r\n                        음성인식 버튼을 누르고<br/> 주유소! or 전기차! 라고<br/> 음성으로 말씀하시면 <br/>그에 맞는 정보가 표시됩니다.<br/>\r\n                        (주유소는 반경 5KM 내에 있는 최저가 주유소가,<br/> 전기차는 반경 5KM 내에 있는 전기차 충전소가 표시됩니다.)\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}