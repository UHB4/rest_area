{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\Project\\\\2_WebProject\\\\3_React\\\\blog\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 반복문으로 같은 html 반복생성하는 법\n  // 그 전에 map()함수에대해서 알아보자.모든 어레이 자료뒤에다가 붙일수있음.map함수를 쓸때는 콜백함수를 넣어야함.소괄호안에들어가는 함수를 콜백함수라함. function\n  // map함수의 기능은 array자료 갯수만큼 함수안의 코드를 실행해줌.\n  // 함수의 파라미터는 array안에 있던 자료임.코드가 반복실행되면서 1이되고 2가되고 3이된다.\n  // [1,2,3].map(function (a){\n  //     console.log(a)\n  // })\n\n  // return에 뭐적으면 array로 담아줌\n  [1, 2, 3].map(function (a) {\n    return '1233211';\n  });\n  let post = '강남 우동 맛집';\n  let [title, settitle] = useState(['남자 코트 추천', '강남 우동맛집', '파이썬독학']);\n  let [like, setlike] = useState(0);\n  let [modal, setModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uBE14\\uB85C\\uADF8\\uC784 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let copy = [...title];\n        copy[0] = '여자코트 추천';\n        settitle(copy);\n      },\n      children: \" \\uC218\\uC815\\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [title[0], \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setlike(like + 1);\n          },\n          children: \"\\uD83D\\uDC4D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 32\n        }, this), like]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: () => {\n          setModal(!modal);\n        },\n        children: title[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), modal == true ? /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }, this) : null, [1, 2, 3].map(function () {\n      {/*} 실제글이 100개면 어쩔거임? 때ㅜㅁㄴ에 실제 블로그 글 갯수만큼 html생성하는 방법을 알아보자./*/}\n      return;\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: title[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"2\\uC6D4 17\\uC77C \\uBC1C\\uD589\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"TPTkVGjzQRm8HAi+5XmyC1XnUNI=\");\n_c = App;\nfunction Modal() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Modal;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","map","a","post","title","settitle","like","setlike","modal","setModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","copy","Modal","_c","_c2","$RefreshReg$"],"sources":["C:/UHB/Project/2_WebProject/3_React/blog/src/App.js"],"sourcesContent":["/* eslint-disable */\nimport './App.css';\nimport {useState} from \"react\";\n\n\nfunction App() {\n\n    // 반복문으로 같은 html 반복생성하는 법\n    // 그 전에 map()함수에대해서 알아보자.모든 어레이 자료뒤에다가 붙일수있음.map함수를 쓸때는 콜백함수를 넣어야함.소괄호안에들어가는 함수를 콜백함수라함. function\n    // map함수의 기능은 array자료 갯수만큼 함수안의 코드를 실행해줌.\n    // 함수의 파라미터는 array안에 있던 자료임.코드가 반복실행되면서 1이되고 2가되고 3이된다.\n    // [1,2,3].map(function (a){\n    //     console.log(a)\n    // })\n\n    // return에 뭐적으면 array로 담아줌\n        [1,2,3].map(function (a){\n        return '1233211'\n    })\n\n    let post = '강남 우동 맛집';\n    let [title, settitle] = useState(['남자 코트 추천', '강남 우동맛집', '파이썬독학'])\n    let [like, setlike] = useState(0);\n    let [modal, setModal] = useState(false);\n\n    return (\n        <div className=\"App\">\n            <div className='black-nav'>\n                <h4>블로그임 </h4>\n            </div>\n\n            <button onClick={() => {\n                let copy = [...title];\n                copy[0] = '여자코트 추천';\n                settitle(copy)\n            }}> 수정버튼\n            </button>\n\n\n            <div className=\"list\">\n                <h4>{title[0]} <span onClick={() => {\n                    setlike(like + 1)\n                }}>👍</span>{like}</h4>\n                <p>2월 17일 발행</p>\n            </div>\n            <div className=\"list\">\n                <h4>{title[1]}</h4>\n                <p>2월 17일 발행</p>\n            </div>\n            <div className=\"list\">\n                <h4 onClick={()=>{setModal(!modal )}}>{title[2]}</h4>\n                <p>2월 17일 발행</p>\n            </div>\n            {\n                modal == true ? <Modal></Modal> : null\n            }\n\n            {/*{*/}\n            {/* [1,2,3].map(function (){*/}\n            {/*     return <div>안녕</div>*/}\n            {/* })*/}\n            {/*}                                   /!*map()으로 같은 html반복생성하는 법*!/*/}\n\n            {\n                [1,2,3].map(function () {     {/*} 실제글이 100개면 어쩔거임? 때ㅜㅁㄴ에 실제 블로그 글 갯수만큼 html생성하는 방법을 알아보자./*/}\n                    return\n                    <div className=\"list\">\n                        <h4>{title[1]}</h4>\n                        <p>2월 17일 발행</p>\n                    </div>\n                })\n            }\n\n        </div>\n\n    );\n}\n\n\nfunction Modal() {\n    return (\n        <div className=\"modal\">\n        <h4>제목</h4>\n            <p>날짜</p>\n            <p>상세내용</p>\n        </div>\n    )\n}\n\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}