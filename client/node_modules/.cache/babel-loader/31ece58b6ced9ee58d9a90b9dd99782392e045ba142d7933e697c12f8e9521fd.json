{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\routes\\\\Statistics.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport styles from './statistics.module.css';\nimport axios from \"axios\";\nimport NationalGasPricesChart from './NationalGasPricesChart.js';\nimport NearbyGasChart from './NearbyGasChart.js';\nimport EV_ChargingSlots from './EV_ChargingSlots.js';\nimport Chart7 from \"./Chart7\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Statistics() {\n  _s();\n  const [locationData, setLocationData] = useState(null);\n  const fetchLocationAndData = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      axios.post('http://localhost:5000/api/gas-stations', {\n        latitude,\n        longitude\n      }).then(response => {\n        setLocationData(response.data);\n        console.log('Data fetched:', response.data);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    }, error => {\n      console.error('Error getting location:', error);\n    });\n  };\n\n  // useEffect를 사용하여 컴포넌트 마운트 시 fetchLocationAndData 함수 호출\n  useEffect(() => {\n    fetchLocationAndData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.statistics,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box1,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.smallbox1,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              axios.get('http://localhost:5000/oill')\n              // 응답을 then의 콜백함수로 받을수 있다.\n              // 받은 데이터는 인자를 임의로 작명하여 확인 가능\n              .then(response => {\n                // console.log(response)  // 전체 데이터\n                // console.log(response.data) // 실 데이터\n                // [[배열 요소1], [배열요소2]] ==> 하나의 배열로 병합\n                // concat등의 메소드 활용가능\n                let shoesCopy = response.data;\n                // 추가 작업\n                console.log(shoesCopy);\n                // return setOilPrice(shoesCopy[0].PRICE)\n                // 리턴값을 set변수  를 바꿔서  useState를 이용할수있께 해야함\n              })\n              // 응답에 실패한 경우, 예외처리 코드 정의\n              .catch(() => {\n                console.log('실패함');\n              });\n            },\n            children: \" (OpenApi\\uC790\\uB8CC) \\uD30C\\uC774\\uCC38 oill \\uB370\\uC774\\uD130 \\uD0A4\\uBA74 \\uCF58\\uC194\\uC5D0 \\uB370\\uC774\\uD130\\uAC00 \\uD55C\\uAE00\\uB85C \\uCC0D\\uD798\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.chartContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.smallbox2,\n            children: /*#__PURE__*/_jsxDEV(NationalGasPricesChart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.smallbox3,\n            children: /*#__PURE__*/_jsxDEV(EV_ChargingSlots, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.smallbox2,\n            children: /*#__PURE__*/_jsxDEV(Chart7, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.smallbox3,\n            children: /*#__PURE__*/_jsxDEV(NearbyGasChart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Statistics, \"JYF7+WzDVHSio/zktKgu2f+Vnnk=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","useState","styles","axios","NationalGasPricesChart","NearbyGasChart","EV_ChargingSlots","Chart7","jsxDEV","_jsxDEV","Fragment","_Fragment","Statistics","_s","locationData","setLocationData","fetchLocationAndData","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","post","then","response","data","console","log","catch","error","useEffect","children","className","statistics","box1","smallbox1","onClick","get","shoesCopy","fileName","_jsxFileName","lineNumber","columnNumber","box2","chartContainer","smallbox2","smallbox3","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/routes/Statistics.js"],"sourcesContent":["import {React, useState} from 'react';\r\nimport styles from './statistics.module.css'\r\nimport axios from \"axios\";\r\nimport NationalGasPricesChart from './NationalGasPricesChart.js';\r\nimport NearbyGasChart from './NearbyGasChart.js';\r\nimport EV_ChargingSlots from './EV_ChargingSlots.js'\r\nimport Chart7 from \"./Chart7\";\r\n\r\n\r\nfunction Statistics() {\r\n    const [locationData, setLocationData] = useState(null);\r\n\r\n    const fetchLocationAndData = () => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const { latitude, longitude } = position.coords;\r\n            axios.post('http://localhost:5000/api/gas-stations', {\r\n                latitude,\r\n                longitude\r\n            })\r\n                .then(response => {\r\n                    setLocationData(response.data);\r\n                    console.log('Data fetched:', response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching data:', error);\r\n                });\r\n        }, error => {\r\n            console.error('Error getting location:', error);\r\n        });\r\n    };\r\n\r\n    // useEffect를 사용하여 컴포넌트 마운트 시 fetchLocationAndData 함수 호출\r\n    useEffect(() => {\r\n        fetchLocationAndData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.statistics}>\r\n                <div className={styles.box1}>\r\n                    <div className={styles.smallbox1}>\r\n                        <button onClick={\r\n                            () => {\r\n                                axios.get('http://localhost:5000/oill')\r\n                                    // 응답을 then의 콜백함수로 받을수 있다.\r\n                                    // 받은 데이터는 인자를 임의로 작명하여 확인 가능\r\n                                    .then((response) => {\r\n                                        // console.log(response)  // 전체 데이터\r\n                                        // console.log(response.data) // 실 데이터\r\n                                        // [[배열 요소1], [배열요소2]] ==> 하나의 배열로 병합\r\n                                        // concat등의 메소드 활용가능\r\n                                        let shoesCopy = response.data\r\n                                        // 추가 작업\r\n                                        console.log(shoesCopy)\r\n                                        // return setOilPrice(shoesCopy[0].PRICE)\r\n                                        // 리턴값을 set변수  를 바꿔서  useState를 이용할수있께 해야함\r\n\r\n                                    })\r\n                                    // 응답에 실패한 경우, 예외처리 코드 정의\r\n                                    .catch(() => {\r\n                                        console.log('실패함');\r\n                                    })\r\n                            }\r\n                        }> (OpenApi자료) 파이참 oill 데이터 키면 콘솔에 데이터가 한글로 찍힘\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.box2}>\r\n                    <div className={styles.chartContainer}>\r\n                        <div className={styles.smallbox2}>\r\n                            <NationalGasPricesChart/>\r\n                        </div>\r\n                        <div className={styles.smallbox3}>\r\n                            <EV_ChargingSlots/>\r\n                        </div>\r\n                        <div className={styles.smallbox2}>\r\n                            <Chart7/>\r\n                        </div>\r\n                        <div className={styles.smallbox3}>\r\n                            <NearbyGasChart/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Statistics\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}