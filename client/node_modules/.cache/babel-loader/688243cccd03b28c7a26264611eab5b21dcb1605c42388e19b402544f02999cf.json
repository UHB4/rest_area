{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\client\\\\src\\\\kako_map\\\\map_info.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { Map, MapTypeControl } from \"react-kakao-maps-sdk\";\nimport useKakaoLoader from \"./useKakaoLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapInfo() {\n  _s();\n  /* global kakao */\n  useKakaoLoader();\n  const mapRef = useRef(null);\n  const [info, setInfo] = useState(\"\");\n  const getInfo = () => {\n    const map = mapRef.current;\n    if (!map) return;\n    const center = map.getCenter();\n\n    // 지도의 현재 레벨을 얻어옵니다\n    const level = map.getLevel();\n\n    // 지도타입을 얻어옵니다\n    const mapTypeId = map.getMapTypeId();\n\n    // 지도의 현재 영역을 얻어옵니다\n    const bounds = map.getBounds();\n\n    // 영역의 남서쪽 좌표를 얻어옵니다\n    const swLatLng = bounds.getSouthWest();\n\n    // 영역의 북동쪽 좌표를 얻어옵니다\n    const neLatLng = bounds.getNorthEast();\n    let message = \"지도 중심좌표는 위도 \" + center.getLat() + \", <br>\";\n    message += \"경도 \" + center.getLng() + \" 이고 <br>\";\n    message += \"지도 레벨은 \" + level + \" 입니다 <br> <br>\";\n    message += \"지도 타입은 \" + mapTypeId + \" 이고 <br> \";\n    message += \"지도의 남서쪽 좌표는 \" + swLatLng.getLat() + \", \" + swLatLng.getLng() + \" 이고 <br>\";\n    message += \"북동쪽 좌표는 \" + neLatLng.getLat() + \", \" + neLatLng.getLng() + \" 입니다\";\n    setInfo(message);\n  };\n  return /*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n  , {\n    center: {\n      lat: 33.450701,\n      lng: 126.570667\n    },\n    style: {\n      // 지도의 크기\n      width: \"100%\",\n      height: \"75%\"\n    },\n    level: 3 // 지도의 확대 레벨\n    ,\n    ref: mapRef,\n    children: [/*#__PURE__*/_jsxDEV(MapTypeControl, {\n      position: \"TOPRIGHT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getInfoBtn\",\n      onClick: getInfo,\n      children: \"\\uB9F5\\uC815\\uBCF4 \\uAC00\\uC838\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"info\",\n      dangerouslySetInnerHTML: {\n        __html: info\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(MapInfo, \"msmKklh8nSIXtiIA7916vqWocCA=\", false, function () {\n  return [useKakaoLoader];\n});\n_c = MapInfo;\nvar _c;\n$RefreshReg$(_c, \"MapInfo\");","map":{"version":3,"names":["React","useRef","useState","Map","MapTypeControl","useKakaoLoader","jsxDEV","_jsxDEV","MapInfo","_s","mapRef","info","setInfo","getInfo","map","current","center","getCenter","level","getLevel","mapTypeId","getMapTypeId","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","message","getLat","getLng","lat","lng","style","width","height","ref","children","position","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/client/src/kako_map/map_info.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Map, MapTypeControl } from \"react-kakao-maps-sdk\";\r\nimport useKakaoLoader from \"./useKakaoLoader\";\r\n\r\nexport default function MapInfo() {\r\n    /* global kakao */\r\n    useKakaoLoader();\r\n    const mapRef = useRef(null);\r\n    const [info, setInfo] = useState(\"\");\r\n\r\n    const getInfo = () => {\r\n        const map = mapRef.current;\r\n        if (!map) return;\r\n\r\n        const center = map.getCenter();\r\n\r\n        // 지도의 현재 레벨을 얻어옵니다\r\n        const level = map.getLevel();\r\n\r\n        // 지도타입을 얻어옵니다\r\n        const mapTypeId = map.getMapTypeId();\r\n\r\n        // 지도의 현재 영역을 얻어옵니다\r\n        const bounds = map.getBounds();\r\n\r\n        // 영역의 남서쪽 좌표를 얻어옵니다\r\n        const swLatLng = bounds.getSouthWest();\r\n\r\n        // 영역의 북동쪽 좌표를 얻어옵니다\r\n        const neLatLng = bounds.getNorthEast();\r\n\r\n        let message = \"지도 중심좌표는 위도 \" + center.getLat() + \", <br>\";\r\n        message += \"경도 \" + center.getLng() + \" 이고 <br>\";\r\n        message += \"지도 레벨은 \" + level + \" 입니다 <br> <br>\";\r\n        message += \"지도 타입은 \" + mapTypeId + \" 이고 <br> \";\r\n        message +=\r\n            \"지도의 남서쪽 좌표는 \" +\r\n            swLatLng.getLat() +\r\n            \", \" +\r\n            swLatLng.getLng() +\r\n            \" 이고 <br>\";\r\n        message +=\r\n            \"북동쪽 좌표는 \" +\r\n            neLatLng.getLat() +\r\n            \", \" +\r\n            neLatLng.getLng() +\r\n            \" 입니다\";\r\n        setInfo(message);\r\n    };\r\n\r\n    return (\r\n        <Map // 지도를 표시할 Container\r\n            center={{ lat: 33.450701, lng: 126.570667 }}\r\n            style={{\r\n                // 지도의 크기\r\n                width: \"100%\",\r\n                height: \"75%\",\r\n            }}\r\n            level={3} // 지도의 확대 레벨\r\n            ref={mapRef}\r\n        >\r\n            <MapTypeControl position={\"TOPRIGHT\"} />\r\n            <button id=\"getInfoBtn\" onClick={getInfo}>\r\n                맵정보 가져오기\r\n            </button>\r\n            <p\r\n                id=\"info\"\r\n                dangerouslySetInnerHTML={{\r\n                    __html: info,\r\n                }}\r\n            />\r\n        </Map>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}