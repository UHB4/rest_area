{"ast":null,"code":"import{React,useState}from'react';import styles from'./login.module.css';// CSS 파일을 import 합니다.\nimport axios from'axios';import{Link,useNavigate}from'react-router-dom';////////////////////////////////////////////////////////////////////////////////////////////////////\n// function Login() {\n//     const handleSubmit = (event) => {\n//         event.preventDefault(); // 폼 기본 동작 방지\n//         // 로그인 처리 로직 작성\n//     };\n//     return (\n//         <div>\n//             <header>\n//                 {/*<img src=\"images/header.png\" alt=\"Header Image\" />*/}\n//             </header>\n//             <form id=\"loginForm\" onSubmit={handleSubmit}>\n//                 <label htmlFor=\"username\">Username:</label>\n//                 <input type=\"text\" id=\"username\" name=\"username\" required />\n//                 <label htmlFor=\"password\">Password:</label>\n//                 <input type=\"password\" id=\"password\" name=\"password\" required />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//         </div>\n//     );\n// }\n// export default Login;\n////////////////////////////////////////////////////////////////////////////////////////////////////\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function Login(props){const[username,setUsername]=useState('');const[password,setPassword]=useState('');const navigate=useNavigate();// useNavigate 훅 사용\nconst handleSubmit=async event=>{event.preventDefault();// 폼 기본 동작 방지\ntry{// Axios를 사용하여 POST 요청을 보냅니다.\nconst response=await axios.post('http://localhost:3001/login1111',{username:username,password:password}).then(res=>{//post 요청을 보낸후에 then 을 통해서 서버에서 res로 보낸 데이터를 받아올수있습니다.\nconsole.log(res);// console.log('로그인 결과 : '+res.data.isLoginSucceed)\n//원빈님 방식으로\nconsole.log('로그인 성공결과 : '+res.data.loggedIn);console.log('로그인 결과 : '+res.data.loginId);if(res.data.loggedIn){//현재 컴퍼넌트 안보이게 state 조정\nprops.setIsLoggedIn(true);props.setLoginId(res.data.loginId);props.setUserName(res.data.userName);props.setUserRealName(res.data.userRealName);}else{// 로그인 실패사유 보이겠금\n}});// 서버로부터의 응답 처리\nnavigate('/board');console.log('console위치 catch 전 : '+username);}catch(error){// 오류 처리\nconsole.error('오류 발생:',error);console.log('console위치  catch 후 : '+username);}};return/*#__PURE__*/_jsx(\"div\",{children:props.isLoggedIn==true?/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.\",props.userRealName]}):/*#__PURE__*/_jsxs(\"form\",{id:\"loginForm\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",name:\"username\",value:username,onChange:e=>setUsername(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleSubmit,children:\"Login\"})]})});}export default Login;","map":{"version":3,"names":["React","useState","styles","axios","Link","useNavigate","jsxs","_jsxs","jsx","_jsx","Login","props","username","setUsername","password","setPassword","navigate","handleSubmit","event","preventDefault","response","post","then","res","console","log","data","loggedIn","loginId","setIsLoggedIn","setLoginId","setUserName","userName","setUserRealName","userRealName","error","children","isLoggedIn","id","htmlFor","type","name","value","onChange","e","target","required","onClick"],"sources":["C:/UHB/rest_area/src/board/Login.js"],"sourcesContent":["import {React,useState} from 'react';\r\nimport styles from './login.module.css'; // CSS 파일을 import 합니다.\r\nimport axios from 'axios'\r\nimport { Link, useNavigate   } from 'react-router-dom';\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// function Login() {\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault(); // 폼 기본 동작 방지\r\n//         // 로그인 처리 로직 작성\r\n//     };\r\n//     return (\r\n//         <div>\r\n//             <header>\r\n//                 {/*<img src=\"images/header.png\" alt=\"Header Image\" />*/}\r\n//             </header>\r\n//             <form id=\"loginForm\" onSubmit={handleSubmit}>\r\n//                 <label htmlFor=\"username\">Username:</label>\r\n//                 <input type=\"text\" id=\"username\" name=\"username\" required />\r\n//                 <label htmlFor=\"password\">Password:</label>\r\n//                 <input type=\"password\" id=\"password\" name=\"password\" required />\r\n//                 <button type=\"submit\">Login</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n// export default Login;\r\n////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction Login(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate(); // useNavigate 훅 사용\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault(); // 폼 기본 동작 방지\r\n\r\n        try {\r\n            // Axios를 사용하여 POST 요청을 보냅니다.\r\n            const response = await axios.post('http://localhost:3001/login1111', {\r\n                username: username,\r\n                password: password\r\n            }).then(res=>{\r\n                //post 요청을 보낸후에 then 을 통해서 서버에서 res로 보낸 데이터를 받아올수있습니다.\r\n                console.log(res)\r\n                // console.log('로그인 결과 : '+res.data.isLoginSucceed)\r\n                //원빈님 방식으로\r\n                console.log('로그인 성공결과 : '+res.data.loggedIn)\r\n                console.log('로그인 결과 : '+res.data.loginId)\r\n\r\n                if (res.data.loggedIn){\r\n                    //현재 컴퍼넌트 안보이게 state 조정\r\n                    props.setIsLoggedIn(true);\r\n                    props.setLoginId(res.data.loginId);\r\n                    props.setUserName(res.data.userName);\r\n                    props.setUserRealName(res.data.userRealName);\r\n\r\n                }else {\r\n                    // 로그인 실패사유 보이겠금\r\n                }\r\n            });\r\n\r\n            // 서버로부터의 응답 처리\r\n            navigate('/board');\r\n            console.log('console위치 catch 전 : '+ username)\r\n\r\n        } catch (error) {\r\n            // 오류 처리\r\n            console.error('오류 발생:', error);\r\n            console.log('console위치  catch 후 : '+ username)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/*<hr/>*/}\r\n            {props.isLoggedIn == true ? <div>반갑습니다.{props.userRealName}</div> :\r\n\r\n                <form id=\"loginForm\">\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button type=\"button\" onClick={handleSubmit}>Login</button>\r\n                </form>\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}