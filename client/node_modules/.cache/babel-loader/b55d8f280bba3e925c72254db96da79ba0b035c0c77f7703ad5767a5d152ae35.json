{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\kako_map\\\\restAreaDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Map, MapMarker } from \"react-kakao-maps-sdk\";\nimport Modal from '../Modal/Modal';\nimport styles from './restAreaDetail.module.css';\nimport RestAreaModalContent from '../kako_map/RestAreaModalContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RestAreaDetail({\n  selectedRoute\n}) {\n  _s();\n  const [position, setPosition] = useState({\n    lat: 36.5,\n    lng: 127.5\n  });\n  const [zoomLevel, setZoomLevel] = useState(12);\n  const [restAreas, setRestAreas] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedRestArea, setSelectedRestArea] = useState(null);\n  const [isOpen, setIsOpen] = useState(false); // Hover\n\n  useEffect(() => {\n    if (selectedRoute) {\n      axios.get(`http://localhost:5000/restareas?route=${selectedRoute}`).then(response => {\n        setRestAreas(response.data);\n        if (response.data.length > 0) {\n          const firstArea = response.data[0];\n          setPosition({\n            lat: firstArea.위도,\n            lng: firstArea.경도\n          });\n        }\n      }).catch(error => console.error('Error fetching data: ', error));\n      setZoomLevel(12); // Zoom level\n    }\n  }, [selectedRoute]);\n  const normalizeName = name => {\n    return name.replace(/휴게소|주유소|정류장|터미널/g, '').trim();\n  };\n  const handleMarkerClick = area => {\n    const normalizedAreaName = normalizeName(area.휴게소명);\n    Promise.all([axios.get(`http://localhost:5000/restbrands?routeNm=${selectedRoute}`), axios.get(`http://localhost:5000/fuelprices?routeNm=${selectedRoute}`), axios.get(`http://localhost:5000/facilities?routeNm=${selectedRoute}`), axios.get(`http://localhost:5000/bestfoods?routeNm=${selectedRoute}`)]).then(([brandResponse, fuelResponse, facilityResponse, bestFoodResponse]) => {\n      const brandData = brandResponse.data.list;\n      const fuelData = fuelResponse.data.list;\n      const facilityData = facilityResponse.data;\n      const bestFoodData = bestFoodResponse.data.list;\n      const facility = facilityData.list.find(f => normalizeName(f.serviceAreaName) === normalizedAreaName);\n      const brand = brandData.find(b => normalizeName(b.stdRestNm) === normalizedAreaName);\n      const fuel = fuelData.find(f => normalizeName(f.serviceAreaName) === normalizedAreaName);\n      const bestFoods = bestFoodData.filter(f => normalizeName(f.stdRestNm) === normalizedAreaName);\n      const updatedArea = {\n        ...area,\n        convenience: facility ? facility.convenience : '정보 없음',\n        brandInfo: brand ? {\n          brdName: brand.brdName,\n          stime: brand.stime,\n          etime: brand.etime,\n          brdDesc: brand.brdDesc,\n          lsttmAltrDttm: brand.lsttmAltrDttm\n        } : null,\n        fuelPrices: fuel ? {\n          diselPrice: fuel.diselPrice.replace('원', ''),\n          gasolinePrice: fuel.gasolinePrice.replace('원', ''),\n          lpgPrice: fuel.lpgPrice.replace('원', ''),\n          telNo: fuel.telNo\n        } : null,\n        bestFoods: bestFoods.map(food => ({\n          foodNm: food.foodNm,\n          foodCost: food.foodCost,\n          lsttmAltrDttm: food.lsttmAltrDttm\n        }))\n      };\n      setSelectedRestArea(updatedArea);\n      setModalOpen(true);\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      center: position,\n      level: zoomLevel,\n      style: {\n        width: \"100%\",\n        height: \"900px\"\n      },\n      children: restAreas.map((area, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: {\n          lat: area.위도,\n          lng: area.경도\n        },\n        onClick: () => handleMarkerClick(area),\n        onMouseOver: () => setIsOpen(area),\n        onMouseOut: () => setIsOpen(null),\n        image: {\n          src: \"https://images.emojiterra.com/google/noto-emoji/unicode-15.1/color/512px/1f53b.png\",\n          size: {\n            width: 30,\n            height: 35\n          }\n        },\n        children: isOpen === area && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 17,\n            color: '#000000',\n            backgroundColor: '#fffefe',\n            padding: '5px',\n            borderRadius: '5px',\n            textAlign: 'center'\n          },\n          children: area.휴게소명\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), selectedRestArea && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(RestAreaModalContent, {\n        area: selectedRestArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(RestAreaDetail, \"OIhljstkq6mxRF94N2gx8WP5dQc=\");\n_c = RestAreaDetail;\nexport default RestAreaDetail;\nvar _c;\n$RefreshReg$(_c, \"RestAreaDetail\");","map":{"version":3,"names":["React","useState","useEffect","axios","Map","MapMarker","Modal","styles","RestAreaModalContent","jsxDEV","_jsxDEV","RestAreaDetail","selectedRoute","_s","position","setPosition","lat","lng","zoomLevel","setZoomLevel","restAreas","setRestAreas","modalOpen","setModalOpen","selectedRestArea","setSelectedRestArea","isOpen","setIsOpen","get","then","response","data","length","firstArea","위도","경도","catch","error","console","normalizeName","name","replace","trim","handleMarkerClick","area","normalizedAreaName","휴게소명","Promise","all","brandResponse","fuelResponse","facilityResponse","bestFoodResponse","brandData","list","fuelData","facilityData","bestFoodData","facility","find","f","serviceAreaName","brand","b","stdRestNm","fuel","bestFoods","filter","updatedArea","convenience","brandInfo","brdName","stime","etime","brdDesc","lsttmAltrDttm","fuelPrices","diselPrice","gasolinePrice","lpgPrice","telNo","map","food","foodNm","foodCost","children","center","level","style","width","height","index","onClick","onMouseOver","onMouseOut","image","src","size","fontSize","color","backgroundColor","padding","borderRadius","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/kako_map/restAreaDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Map, MapMarker } from \"react-kakao-maps-sdk\";\r\nimport Modal from '../Modal/Modal';\r\nimport styles from './restAreaDetail.module.css';\r\nimport RestAreaModalContent from '../kako_map/RestAreaModalContent';\r\n\r\nfunction RestAreaDetail({ selectedRoute }) {\r\n    const [position, setPosition] = useState({ lat: 36.5, lng: 127.5 });\r\n    const [zoomLevel, setZoomLevel] = useState(12);\r\n    const [restAreas, setRestAreas] = useState([]);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [selectedRestArea, setSelectedRestArea] = useState(null);\r\n    const [isOpen, setIsOpen] = useState(false); // Hover\r\n\r\n    useEffect(() => {\r\n        if (selectedRoute) {\r\n            axios.get(`http://localhost:5000/restareas?route=${selectedRoute}`)\r\n                .then(response => {\r\n                    setRestAreas(response.data);\r\n                    if (response.data.length > 0) {\r\n                        const firstArea = response.data[0];\r\n                        setPosition({ lat: firstArea.위도, lng: firstArea.경도 });\r\n                    }\r\n                })\r\n                .catch(error => console.error('Error fetching data: ', error));\r\n            setZoomLevel(12); // Zoom level\r\n        }\r\n    }, [selectedRoute]);\r\n\r\n    const normalizeName = (name) => {\r\n        return name.replace(/휴게소|주유소|정류장|터미널/g, '').trim();\r\n    };\r\n\r\n    const handleMarkerClick = (area) => {\r\n        const normalizedAreaName = normalizeName(area.휴게소명);\r\n\r\n        Promise.all([\r\n            axios.get(`http://localhost:5000/restbrands?routeNm=${selectedRoute}`),\r\n            axios.get(`http://localhost:5000/fuelprices?routeNm=${selectedRoute}`),\r\n            axios.get(`http://localhost:5000/facilities?routeNm=${selectedRoute}`),\r\n            axios.get(`http://localhost:5000/bestfoods?routeNm=${selectedRoute}`)\r\n        ]).then(([brandResponse, fuelResponse, facilityResponse, bestFoodResponse]) => {\r\n            const brandData = brandResponse.data.list;\r\n            const fuelData = fuelResponse.data.list;\r\n            const facilityData = facilityResponse.data;\r\n            const bestFoodData = bestFoodResponse.data.list;\r\n\r\n            const facility = facilityData.list.find(f => normalizeName(f.serviceAreaName) === normalizedAreaName);\r\n            const brand = brandData.find(b => normalizeName(b.stdRestNm) === normalizedAreaName);\r\n            const fuel = fuelData.find(f => normalizeName(f.serviceAreaName) === normalizedAreaName);\r\n            const bestFoods = bestFoodData.filter(f => normalizeName(f.stdRestNm) === normalizedAreaName);\r\n\r\n            const updatedArea = {\r\n                ...area,\r\n                convenience: facility ? facility.convenience : '정보 없음',\r\n                brandInfo: brand ? {\r\n                    brdName: brand.brdName,\r\n                    stime: brand.stime,\r\n                    etime: brand.etime,\r\n                    brdDesc: brand.brdDesc,\r\n                    lsttmAltrDttm: brand.lsttmAltrDttm\r\n                } : null,\r\n                fuelPrices: fuel ? {\r\n                    diselPrice: fuel.diselPrice.replace('원', ''),\r\n                    gasolinePrice: fuel.gasolinePrice.replace('원', ''),\r\n                    lpgPrice: fuel.lpgPrice.replace('원', ''),\r\n                    telNo: fuel.telNo\r\n                } : null,\r\n                bestFoods: bestFoods.map(food => ({\r\n                    foodNm: food.foodNm,\r\n                    foodCost: food.foodCost,\r\n                    lsttmAltrDttm: food.lsttmAltrDttm\r\n                }))\r\n            };\r\n\r\n            setSelectedRestArea(updatedArea);\r\n            setModalOpen(true);\r\n        }).catch(error => {\r\n            console.error('Error fetching data: ', error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Map center={position} level={zoomLevel} style={{ width: \"100%\", height: \"900px\" }}>\r\n                {restAreas.map((area, index) => (\r\n                    <MapMarker\r\n                        key={index}\r\n                        position={{ lat: area.위도, lng: area.경도 }}\r\n                        onClick={() => handleMarkerClick(area)}\r\n                        onMouseOver={() => setIsOpen(area)}\r\n                        onMouseOut={() => setIsOpen(null)}\r\n                        image={{\r\n                            src: \"https://images.emojiterra.com/google/noto-emoji/unicode-15.1/color/512px/1f53b.png\",\r\n                            size: {\r\n                                width: 30,\r\n                                height: 35,\r\n                            },\r\n                        }}\r\n                    >\r\n                        {isOpen === area && (\r\n                            <div style={{ fontSize: 17, color: '#000000', backgroundColor: '#fffefe', padding: '5px', borderRadius: '5px', textAlign: 'center' }}>\r\n                                {area.휴게소명}\r\n                            </div>\r\n                        )}\r\n                    </MapMarker>\r\n                ))}\r\n            </Map>\r\n            {selectedRestArea && (\r\n                <Modal isOpen={modalOpen} onClose={() => setModalOpen(false)}>\r\n                    <RestAreaModalContent area={selectedRestArea} />\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RestAreaDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}