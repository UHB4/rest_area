{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\kako_map\\\\my_location.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction My_Location() {\n  _s();\n  const [state, setState] = useState({\n    center: {\n      lat: 33.450701,\n      lng: 126.570667\n    },\n    locations: [],\n    errMsg: null,\n    isLoading: true,\n    showOverlayId: null // 현재 활성화된 팝업의 ID\n  });\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const newPos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setState(prev => ({\n          ...prev,\n          center: newPos,\n          isLoading: false\n        }));\n        fetchStations(newPos.lat, newPos.lng);\n      }, err => {\n        setState(prev => ({\n          ...prev,\n          errMsg: err.message,\n          isLoading: false\n        }));\n      });\n    } else {\n      setState(prev => ({\n        ...prev,\n        errMsg: \"Geolocation을 사용할 수 없어요.\",\n        isLoading: false\n      }));\n    }\n  }, []);\n  const fetchStations = (latitude, longitude) => {\n    axios.post('http://localhost:5000/find-stations', {\n      latitude,\n      longitude\n    }).then(response => {\n      setState(prev => ({\n        ...prev,\n        locations: response.data.dbData,\n        isLoading: false\n      }));\n    }).catch(error => {\n      console.error('Error fetching stations:', error);\n      setState(prev => ({\n        ...prev,\n        errMsg: '충전소 정보를 가져오는데 실패했습니다.',\n        isLoading: false\n      }));\n    });\n  };\n  const getMarkerImage = stat => {\n    switch (stat) {\n      case '2':\n        return '/img/green_marker.png';\n      // 충전 대기\n      case '3':\n        return '/img/orange_marker.png';\n      // 충전 중\n      default:\n        return '/img/default_elec.png';\n      // 기타 상태\n    }\n  };\n  const toggleOverlay = statId => {\n    setState(prev => ({\n      ...prev,\n      showOverlayId: prev.showOverlayId === statId ? null : statId\n    }));\n  };\n\n  // 스타일 정의\n  const customOverlayStyle = {\n    padding: \"10px\",\n    background: \"#fff\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    fontSize: \"14px\",\n    maxWidth: \"200px\",\n    // 팝업창의 최대 너비 설정\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\"\n  };\n  const closeButtonStyle = {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    cursor: \"pointer\",\n    border: \"none\",\n    background: \"none\",\n    fontSize: \"16px\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      center: state.center,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      level: 3,\n      children: [!state.isLoading && /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: state.center,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"5px\",\n            color: \"#000\"\n          },\n          children: state.errMsg ? state.errMsg : \"현재 위치\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), state.locations.map(loc => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(MapMarker, {\n          position: {\n            lat: loc.lat,\n            lng: loc.lng\n          },\n          image: {\n            src: getMarkerImage(loc.stat),\n            size: {\n              width: 40,\n              height: 40\n            }\n          },\n          onClick: () => toggleOverlay(loc.statId),\n          children: state.showOverlayId === loc.statId && /*#__PURE__*/_jsxDEV(CustomOverlayMap, {\n            position: {\n              lat: loc.lat,\n              lng: loc.lng\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: customOverlayStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleOverlay(null),\n                style: closeButtonStyle,\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: loc.statNm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 70\n              }, this), loc.addr, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 51\n              }, this), \"Distance: \", loc.distance.toFixed(2), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, loc.statId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(My_Location, \"bmw2Kfg7sSupe/Wdj5vcqYtlYjo=\");\n_c = My_Location;\nexport default My_Location;\nvar _c;\n$RefreshReg$(_c, \"My_Location\");","map":{"version":3,"names":["React","useState","useEffect","axios","Map","MapMarker","CustomOverlayMap","jsxDEV","_jsxDEV","Fragment","_Fragment","My_Location","_s","state","setState","center","lat","lng","locations","errMsg","isLoading","showOverlayId","navigator","geolocation","getCurrentPosition","position","newPos","coords","latitude","longitude","prev","fetchStations","err","message","post","then","response","data","dbData","catch","error","console","getMarkerImage","stat","toggleOverlay","statId","customOverlayStyle","padding","background","border","borderRadius","fontSize","maxWidth","overflow","whiteSpace","textOverflow","closeButtonStyle","top","right","cursor","children","style","width","height","level","color","fileName","_jsxFileName","lineNumber","columnNumber","map","loc","image","src","size","onClick","statNm","addr","distance","toFixed","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/kako_map/my_location.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\r\n\r\nfunction My_Location() {\r\n    const [state, setState] = useState({\r\n        center: { lat: 33.450701, lng: 126.570667 },\r\n        locations: [],\r\n        errMsg: null,\r\n        isLoading: true,\r\n        showOverlayId: null // 현재 활성화된 팝업의 ID\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const newPos = { lat: position.coords.latitude, lng: position.coords.longitude };\r\n                    setState(prev => ({ ...prev, center: newPos, isLoading: false }));\r\n                    fetchStations(newPos.lat, newPos.lng);\r\n                },\r\n                (err) => {\r\n                    setState(prev => ({ ...prev, errMsg: err.message, isLoading: false }));\r\n                }\r\n            );\r\n        } else {\r\n            setState(prev => ({ ...prev, errMsg: \"Geolocation을 사용할 수 없어요.\", isLoading: false }));\r\n        }\r\n    }, []);\r\n\r\n    const fetchStations = (latitude, longitude) => {\r\n        axios.post('http://localhost:5000/find-stations', { latitude, longitude })\r\n            .then(response => {\r\n                setState(prev => ({ ...prev, locations: response.data.dbData, isLoading: false }));\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching stations:', error);\r\n                setState(prev => ({ ...prev, errMsg: '충전소 정보를 가져오는데 실패했습니다.', isLoading: false }));\r\n            });\r\n    };\r\n\r\n    const getMarkerImage = (stat) => {\r\n        switch (stat) {\r\n            case '2': return '/img/green_marker.png'; // 충전 대기\r\n            case '3': return '/img/orange_marker.png'; // 충전 중\r\n            default: return '/img/default_elec.png'; // 기타 상태\r\n        }\r\n    };\r\n\r\n    const toggleOverlay = (statId) => {\r\n        setState(prev => ({\r\n            ...prev,\r\n            showOverlayId: prev.showOverlayId === statId ? null : statId\r\n        }));\r\n    };\r\n\r\n    // 스타일 정의\r\n    const customOverlayStyle = {\r\n        padding: \"10px\",\r\n        background: \"#fff\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"8px\",\r\n        fontSize: \"14px\",\r\n        maxWidth: \"200px\", // 팝업창의 최대 너비 설정\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        textOverflow: \"ellipsis\"\r\n    };\r\n\r\n    const closeButtonStyle = {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        cursor: \"pointer\",\r\n        border: \"none\",\r\n        background: \"none\",\r\n        fontSize: \"16px\"\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Map center={state.center} style={{ width: \"100%\", height: \"100%\" }} level={3}>\r\n                {!state.isLoading && (\r\n                    <MapMarker position={state.center}>\r\n                        <div style={{ padding: \"5px\", color: \"#000\" }}>\r\n                            {state.errMsg ? state.errMsg : \"현재 위치\"}\r\n                        </div>\r\n                    </MapMarker>\r\n                )}\r\n                {state.locations.map(loc => (\r\n                    <React.Fragment key={loc.statId}>\r\n                        <MapMarker\r\n                            position={{ lat: loc.lat, lng: loc.lng }}\r\n                            image={{\r\n                                src: getMarkerImage(loc.stat),\r\n                                size: { width: 40, height: 40 }\r\n                            }}\r\n                            onClick={() => toggleOverlay(loc.statId)}\r\n                        >\r\n                            {state.showOverlayId === loc.statId && (\r\n                                <CustomOverlayMap position={{ lat: loc.lat, lng: loc.lng }}>\r\n                                    <div style={customOverlayStyle}>\r\n                                        <button onClick={() => toggleOverlay(null)} style={closeButtonStyle}>X</button>\r\n                                        <strong>{loc.statNm}</strong><br />\r\n                                        {loc.addr}<br />\r\n                                        Distance: {loc.distance.toFixed(2)} km\r\n                                    </div>\r\n                                </CustomOverlayMap>\r\n                            )}\r\n                        </MapMarker>\r\n                    </React.Fragment>\r\n                ))}\r\n            </Map>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default My_Location;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}