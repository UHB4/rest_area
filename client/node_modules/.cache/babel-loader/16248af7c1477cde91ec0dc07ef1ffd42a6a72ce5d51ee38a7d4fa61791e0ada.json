{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\kako_map\\\\map_type.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Map, MapTypeId } from \"react-kakao-maps-sdk\";\nimport useKakaoLoader from \"./useKakaoLoader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChangeOverlay2() {\n  _s();\n  useKakaoLoader();\n  const [overlayMapTypeId, setOverlayMapTypeId] = useState({\n    TRAFFIC: false,\n    BICYCLE: false,\n    TERRAIN: false,\n    USE_DISTRICT: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n    , {\n      id: \"map\",\n      center: {\n        // 지도의 중심좌표\n        lat: 37.57319,\n        lng: 126.96658\n      },\n      style: {\n        width: \"100%\",\n        height: \"90%\"\n      },\n      level: 7,\n      children: [overlayMapTypeId.TRAFFIC && /*#__PURE__*/_jsxDEV(MapTypeId, {\n        type: \"TRAFFIC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 46\n      }, this), overlayMapTypeId.BICYCLE && /*#__PURE__*/_jsxDEV(MapTypeId, {\n        type: \"BICYCLE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 46\n      }, this), overlayMapTypeId.TERRAIN && /*#__PURE__*/_jsxDEV(MapTypeId, {\n        type: \"TERRAIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 46\n      }, this), overlayMapTypeId.USE_DISTRICT && /*#__PURE__*/_jsxDEV(MapTypeId, {\n        type: \"USE_DISTRICT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"chkUseDistrict\",\n        onChange: e => setOverlayMapTypeId(p => ({\n          ...p,\n          USE_DISTRICT: e.target.checked\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), \" 지적편집도 정보 보기 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"chkTerrain\",\n        onChange: e => setOverlayMapTypeId(p => ({\n          ...p,\n          TERRAIN: e.target.checked\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), \" 지형정보 보기 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"chkTraffic\",\n        onChange: e => setOverlayMapTypeId(p => ({\n          ...p,\n          TRAFFIC: e.target.checked\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), \" 교통정보 보기 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"chkBicycle\",\n        onChange: e => setOverlayMapTypeId(p => ({\n          ...p,\n          BICYCLE: e.target.checked\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), \" 자전거도로 정보 보기 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChangeOverlay2, \"7H227pGbs/VhfxrQZ7tx2QRX3r4=\", false, function () {\n  return [useKakaoLoader];\n});\n_c = ChangeOverlay2;\nvar _c;\n$RefreshReg$(_c, \"ChangeOverlay2\");","map":{"version":3,"names":["useState","Map","MapTypeId","useKakaoLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","ChangeOverlay2","_s","overlayMapTypeId","setOverlayMapTypeId","TRAFFIC","BICYCLE","TERRAIN","USE_DISTRICT","children","id","center","lat","lng","style","width","height","level","type","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","p","target","checked","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/kako_map/map_type.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { Map, MapTypeId } from \"react-kakao-maps-sdk\"\r\nimport useKakaoLoader from \"./useKakaoLoader\"\r\n\r\nexport default function ChangeOverlay2() {\r\n    useKakaoLoader()\r\n    const [overlayMapTypeId, setOverlayMapTypeId] = useState({\r\n        TRAFFIC: false,\r\n        BICYCLE: false,\r\n        TERRAIN: false,\r\n        USE_DISTRICT: false,\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Map // 지도를 표시할 Container\r\n                id=\"map\"\r\n                center={{\r\n                    // 지도의 중심좌표\r\n                    lat: 37.57319,\r\n                    lng: 126.96658,\r\n                }}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"90%\",\r\n                }}\r\n                level={7}\r\n            >\r\n                {overlayMapTypeId.TRAFFIC && <MapTypeId type={\"TRAFFIC\"} />}\r\n                {overlayMapTypeId.BICYCLE && <MapTypeId type={\"BICYCLE\"} />}\r\n                {overlayMapTypeId.TERRAIN && <MapTypeId type={\"TERRAIN\"} />}\r\n                {overlayMapTypeId.USE_DISTRICT && <MapTypeId type={\"USE_DISTRICT\"} />}\r\n            </Map>\r\n            <p>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"chkUseDistrict\"\r\n                    onChange={(e) =>\r\n                        setOverlayMapTypeId((p) => ({\r\n                            ...p,\r\n                            USE_DISTRICT: e.target.checked,\r\n                        }))\r\n                    }\r\n                />\r\n                {\" 지적편집도 정보 보기 \"}\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"chkTerrain\"\r\n                    onChange={(e) =>\r\n                        setOverlayMapTypeId((p) => ({ ...p, TERRAIN: e.target.checked }))\r\n                    }\r\n                />\r\n                {\" 지형정보 보기 \"}\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"chkTraffic\"\r\n                    onChange={(e) =>\r\n                        setOverlayMapTypeId((p) => ({ ...p, TRAFFIC: e.target.checked }))\r\n                    }\r\n                />\r\n                {\" 교통정보 보기 \"}\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"chkBicycle\"\r\n                    onChange={(e) =>\r\n                        setOverlayMapTypeId((p) => ({\r\n                            ...p,\r\n                            BICYCLE: e.target.checked,\r\n                        }))\r\n                    }\r\n                />\r\n                {\" 자전거도로 정보 보기 \"}\r\n            </p>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}