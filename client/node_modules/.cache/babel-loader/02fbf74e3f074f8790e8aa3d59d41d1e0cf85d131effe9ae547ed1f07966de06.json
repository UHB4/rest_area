{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\kako_map\\\\elec_station.js\",\n  _s = $RefreshSig$();\n// React와 여러 필요한 모듈들을 가져옴\nimport React, { useState, useEffect } from 'react';\nimport { Map, MapMarker, CustomOverlayMap, Circle } from \"react-kakao-maps-sdk\";\nimport './elec_station.css';\n\n// 날짜 및 시간을 보기 좋게 포맷하는 함수 정의\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatDateTime(dateTimeStr) {\n  // 날짜와 시간 정보를 부분적으로 추출\n  const year = dateTimeStr.substring(0, 4);\n  const month = dateTimeStr.substring(4, 6);\n  const day = dateTimeStr.substring(6, 8);\n  const hour = dateTimeStr.substring(8, 10);\n  const minute = dateTimeStr.substring(10, 12);\n  const second = dateTimeStr.substring(12, 14);\n\n  // 추출된 정보를 기반으로 문자열을 조합하여 반환\n  return `${year}년 ${month}월 ${day}일 ${hour}시 ${minute}분 ${second}초`;\n}\n\n// 충전소 정보를 표시하는 팝업 컴포넌트\nfunction ElecStationPopup({\n  station,\n  onClose\n}) {\n  // 팝업을 표시할 스테이션이 없으면 아무 것도 렌더링하지 않음\n  if (!station) return null;\n\n  // 팝업 스타일을 지정\n  const popupStyle = {\n    position: 'absolute',\n    bottom: '150px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    width: '300px',\n    height: '200px',\n    padding: '15px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    backgroundColor: '#fff',\n    fontSize: '12px',\n    textAlign: 'center',\n    zIndex: 100\n  };\n\n  // 킬로미터 값을 소수점 둘째자리까지 포맷\n  function ToTwoDecimal(kilometers) {\n    return kilometers.toFixed(2);\n  }\n\n  // 팝업에 표시될 날짜를 포맷\n  const formattedDate = formatDateTime(station.lastUpdated);\n  // 거리 정보를 포맷\n  const distanceKm = ToTwoDecimal(station.distance);\n\n  // 팝업 컴포넌트의 JSX를 반환\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: popupStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          margin: '0px 60px',\n          fontSize: '20px'\n        },\n        children: station.stationName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC8FC\\uC18C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this), \" \", station.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uCD1D \\uCDA9\\uC804\\uAE30 \\uC218:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }, this), \" \", station.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uCDA9\\uC804 \\uAC00\\uB2A5:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 20\n        }, this), \" \", station.available]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC0C1\\uD0DC \\uAC31\\uC2E0 \\uC77C\\uC2DC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this), \" \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uAC70\\uB9AC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this), \" \", distanceKm, \"km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      style: {\n        width: '100px',\n        cursor: 'pointer',\n        backgroundColor: '#f00',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        padding: '5px 10px',\n        margin: '5px 0'\n      },\n      children: \"\\uB2EB\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n// 반경에 따른 지도의 줌 레벨을 결정하는 함수\n_c = ElecStationPopup;\nfunction getZoomLevel(radius) {\n  switch (parseInt(radius, 10)) {\n    case 1:\n      return 4;\n    case 3:\n      return 6;\n    case 5:\n      return 7;\n    default:\n      return 3;\n  }\n}\nfunction getZoomLevelForMobile(radius) {\n  switch (parseInt(radius, 10)) {\n    case 1:\n      return 5;\n    case 3:\n      return 7;\n    case 5:\n      return 8;\n    default:\n      return 5;\n  }\n}\n\n// 전기차 충전소 위치를 지도에 표시하는 컴포넌트\nfunction Elec_station({\n  locations,\n  radius\n}) {\n  _s();\n  const [state, setState] = useState({\n    center: {\n      lat: 37.5665,\n      lng: 126.9780\n    },\n    zoomLevel: getZoomLevel(radius),\n    selectedStation: null,\n    chargersInfo: {},\n    userLocation: null,\n    radius: radius,\n    isLoading: false\n  });\n  useEffect(() => {\n    setState(prev => ({\n      ...prev,\n      isLoading: true\n    }));\n    const chargersInfo = locations.reduce((acc, station) => {\n      if (!acc[station.statId]) {\n        acc[station.statId] = {\n          total: 0,\n          available: 0,\n          stationName: station.statNm,\n          address: station.addr,\n          lastUpdated: station.statUpdDt,\n          distance: station.distance\n        };\n      }\n      acc[station.statId].total += 1;\n      if (station.stat === \"2\") {\n        acc[station.statId].available += 1;\n      }\n      return acc;\n    }, {});\n    setState(prev => ({\n      ...prev,\n      chargersInfo,\n      isLoading: false\n    }));\n  }, [locations]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setState(prev => ({\n        ...prev,\n        userLocation: {\n          lat: latitude,\n          lng: longitude\n        },\n        center: {\n          lat: latitude,\n          lng: longitude\n        }\n      }));\n    }, error => {\n      console.error(\"Geolocation error:\", error);\n    }, {\n      enableHighAccuracy: true\n    });\n  }, []);\n  useEffect(() => {\n    const handleResize = () => {\n      const isMobile = window.matchMedia(\"(max-width: 480px)\").matches;\n      const zoomLevel = isMobile ? getZoomLevelForMobile(radius) : getZoomLevel(radius);\n      setState(prev => ({\n        ...prev,\n        zoomLevel,\n        radius: radius * 1000\n      }));\n    };\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [radius]);\n  const onMarkerClick = statId => {\n    setState(prev => ({\n      ...prev,\n      selectedStation: prev.chargersInfo[statId]\n    }));\n  };\n  const closeInfoWindow = () => {\n    setState(prev => ({\n      ...prev,\n      selectedStation: null\n    }));\n  };\n  const loadingOverlayStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n    fontSize: '24px',\n    zIndex: 1000\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [state.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loadingOverlayStyle,\n      children: \"\\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapContainer\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        center: state.center,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        level: state.zoomLevel,\n        children: [state.userLocation && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MapMarker, {\n            position: state.userLocation,\n            image: {\n              src: '/img/my_location.png',\n              size: {\n                width: 24,\n                height: 35\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CustomOverlayMap, {\n            position: state.userLocation,\n            yAnchor: 2.0,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '5px',\n                borderRadius: '1px',\n                height: '20px',\n                fontWeight: 'bold'\n              },\n              children: \"\\uB0B4 \\uC704\\uCE58\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            center: state.userLocation,\n            radius: state.radius,\n            strokeWeight: 2,\n            strokeColor: '#75B8FA',\n            strokeOpacity: 0.7,\n            fillColor: '#e5effc',\n            fillOpacity: 0.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), locations.map(station => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MapMarker, {\n            position: {\n              lat: parseFloat(station.lat),\n              lng: parseFloat(station.lng)\n            },\n            image: {\n              className: station.stat === \"2\" ? 'pulsemarker' : '',\n              src: station.stat === \"2\" ? '/img/live.png' : '/img/elc.png',\n              size: {\n                width: 24,\n                height: 35\n              }\n            },\n            onClick: () => onMarkerClick(station.statId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)\n        }, `${station.statId}-${station.chgerId}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this)), state.selectedStation && /*#__PURE__*/_jsxDEV(ElecStationPopup, {\n          station: state.selectedStation,\n          onClose: closeInfoWindow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Elec_station, \"rlogHlLvJ4NvmD0liY2cP8le0/w=\");\n_c2 = Elec_station;\nexport default Elec_station;\nvar _c, _c2;\n$RefreshReg$(_c, \"ElecStationPopup\");\n$RefreshReg$(_c2, \"Elec_station\");","map":{"version":3,"names":["React","useState","useEffect","Map","MapMarker","CustomOverlayMap","Circle","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDateTime","dateTimeStr","year","substring","month","day","hour","minute","second","ElecStationPopup","station","onClose","popupStyle","position","bottom","left","transform","width","height","padding","border","borderRadius","backgroundColor","fontSize","textAlign","zIndex","ToTwoDecimal","kilometers","toFixed","formattedDate","lastUpdated","distanceKm","distance","style","children","display","justifyContent","marginBottom","fontWeight","margin","stationName","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","address","total","available","onClick","cursor","color","_c","getZoomLevel","radius","parseInt","getZoomLevelForMobile","Elec_station","locations","_s","state","setState","center","lat","lng","zoomLevel","selectedStation","chargersInfo","userLocation","isLoading","prev","reduce","acc","statId","statNm","addr","statUpdDt","stat","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","error","console","enableHighAccuracy","handleResize","isMobile","window","matchMedia","matches","addEventListener","removeEventListener","onMarkerClick","closeInfoWindow","loadingOverlayStyle","top","alignItems","className","level","image","src","size","yAnchor","strokeWeight","strokeColor","strokeOpacity","fillColor","fillOpacity","map","parseFloat","chgerId","_c2","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/kako_map/elec_station.js"],"sourcesContent":["// React와 여러 필요한 모듈들을 가져옴\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Map, MapMarker, CustomOverlayMap, Circle } from \"react-kakao-maps-sdk\";\r\n\r\nimport './elec_station.css'\r\n\r\n// 날짜 및 시간을 보기 좋게 포맷하는 함수 정의\r\nfunction formatDateTime(dateTimeStr) {\r\n    // 날짜와 시간 정보를 부분적으로 추출\r\n    const year = dateTimeStr.substring(0, 4);\r\n    const month = dateTimeStr.substring(4, 6);\r\n    const day = dateTimeStr.substring(6, 8);\r\n    const hour = dateTimeStr.substring(8, 10);\r\n    const minute = dateTimeStr.substring(10, 12);\r\n    const second = dateTimeStr.substring(12, 14);\r\n\r\n    // 추출된 정보를 기반으로 문자열을 조합하여 반환\r\n    return `${year}년 ${month}월 ${day}일 ${hour}시 ${minute}분 ${second}초`;\r\n}\r\n\r\n// 충전소 정보를 표시하는 팝업 컴포넌트\r\nfunction ElecStationPopup({ station, onClose }) {\r\n    // 팝업을 표시할 스테이션이 없으면 아무 것도 렌더링하지 않음\r\n    if (!station) return null;\r\n\r\n    // 팝업 스타일을 지정\r\n    const popupStyle = {\r\n        position: 'absolute',\r\n        bottom: '150px',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        width: '300px',\r\n        height: '200px',\r\n        padding: '15px',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '5px',\r\n        backgroundColor: '#fff',\r\n        fontSize: '12px',\r\n        textAlign: 'center',\r\n        zIndex: 100,\r\n    };\r\n\r\n    // 킬로미터 값을 소수점 둘째자리까지 포맷\r\n    function ToTwoDecimal(kilometers) {\r\n        return kilometers.toFixed(2);\r\n    }\r\n\r\n    // 팝업에 표시될 날짜를 포맷\r\n    const formattedDate = formatDateTime(station.lastUpdated);\r\n    // 거리 정보를 포맷\r\n    const distanceKm = ToTwoDecimal(station.distance);\r\n\r\n    // 팝업 컴포넌트의 JSX를 반환\r\n    return (\r\n        <div style={popupStyle}>\r\n            <div style={{display: 'flex', justifyContent: 'space-between', marginBottom: '10px'}}>\r\n                <span style={{fontWeight: 'bold', margin: '0px 60px', fontSize: '20px'}}>{station.stationName}</span>\r\n            </div>\r\n            <div style={{marginTop: '20px'}}>\r\n                <p><strong>주소:</strong> {station.address}</p>\r\n                <p><strong>총 충전기 수:</strong> {station.total}</p>\r\n                <p><strong>충전 가능:</strong> {station.available}</p>\r\n                <p><strong>상태 갱신 일시:</strong> {formattedDate}</p>\r\n                <p><strong>거리:</strong> {distanceKm}km</p>\r\n            </div>\r\n            <button onClick={onClose} style={{\r\n                width:'100px',\r\n                cursor: 'pointer',\r\n                backgroundColor: '#f00',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '5px',\r\n                padding: '5px 10px',\r\n                margin: '5px 0'\r\n            }}>\r\n                닫기\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\n// 반경에 따른 지도의 줌 레벨을 결정하는 함수\r\nfunction getZoomLevel(radius) {\r\n    switch (parseInt(radius, 10)) {\r\n        case 1: return 4;\r\n        case 3: return 6;\r\n        case 5: return 7;\r\n        default: return 3;\r\n    }\r\n}\r\n\r\nfunction getZoomLevelForMobile(radius) {\r\n    switch (parseInt(radius, 10)) {\r\n        case 1: return 5;\r\n        case 3: return 7;\r\n        case 5: return 8;\r\n        default: return 5;\r\n    }\r\n}\r\n\r\n// 전기차 충전소 위치를 지도에 표시하는 컴포넌트\r\nfunction Elec_station({ locations, radius }) {\r\n    const [state, setState] = useState({\r\n        center: { lat: 37.5665, lng: 126.9780 },\r\n        zoomLevel: getZoomLevel(radius),\r\n        selectedStation: null,\r\n        chargersInfo: {},\r\n        userLocation: null,\r\n        radius: radius,\r\n        isLoading: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        setState(prev => ({ ...prev, isLoading: true }));\r\n        const chargersInfo = locations.reduce((acc, station) => {\r\n            if (!acc[station.statId]) {\r\n                acc[station.statId] = {\r\n                    total: 0,\r\n                    available: 0,\r\n                    stationName: station.statNm,\r\n                    address: station.addr,\r\n                    lastUpdated: station.statUpdDt,\r\n                    distance: station.distance\r\n                };\r\n            }\r\n            acc[station.statId].total += 1;\r\n            if (station.stat === \"2\") {\r\n                acc[station.statId].available += 1;\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        setState(prev => ({ ...prev, chargersInfo, isLoading: false }));\r\n    }, [locations]);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    userLocation: { lat: latitude, lng: longitude },\r\n                    center: { lat: latitude, lng: longitude }\r\n                }));\r\n            },\r\n            (error) => {\r\n                console.error(\"Geolocation error:\", error);\r\n            },\r\n            { enableHighAccuracy: true }\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const isMobile = window.matchMedia(\"(max-width: 480px)\").matches;\r\n            const zoomLevel = isMobile ? getZoomLevelForMobile(radius) : getZoomLevel(radius);\r\n            setState(prev => ({\r\n                ...prev,\r\n                zoomLevel,\r\n                radius: radius * 1000\r\n            }));\r\n        };\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, [radius]);\r\n\r\n    const onMarkerClick = (statId) => {\r\n        setState(prev => ({\r\n            ...prev,\r\n            selectedStation: prev.chargersInfo[statId]\r\n        }));\r\n    };\r\n\r\n    const closeInfoWindow = () => {\r\n        setState(prev => ({\r\n            ...prev,\r\n            selectedStation: null\r\n        }));\r\n    };\r\n\r\n    const loadingOverlayStyle = {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: 'white',\r\n        fontSize: '24px',\r\n        zIndex: 1000\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {state.isLoading && (\r\n                <div style={loadingOverlayStyle}>\r\n                    불러오는 중...\r\n                </div>\r\n            )}\r\n            <div className=\"mapContainer\">\r\n                <Map center={state.center} style={{ width: \"100%\", height: \"100%\" }} level={state.zoomLevel}>\r\n                    {state.userLocation && (\r\n                        <>\r\n                            <MapMarker\r\n                                position={state.userLocation}\r\n                                image={{ src: '/img/my_location.png', size: { width: 24, height: 35 } }}\r\n                            />\r\n                            <CustomOverlayMap position={state.userLocation} yAnchor={2.0}>\r\n                                <div style={{ padding: '5px', borderRadius: '1px', height: '20px', fontWeight: 'bold' }}>\r\n                                    내 위치\r\n                                </div>\r\n                            </CustomOverlayMap>\r\n                            <Circle\r\n                                center={state.userLocation}\r\n                                radius={state.radius}\r\n                                strokeWeight={2}\r\n                                strokeColor={'#75B8FA'}\r\n                                strokeOpacity={0.7}\r\n                                fillColor={'#e5effc'}\r\n                                fillOpacity={0.5}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {locations.map((station) => (\r\n                        <React.Fragment key={`${station.statId}-${station.chgerId}`}>\r\n                            <MapMarker\r\n                                position={{ lat: parseFloat(station.lat), lng: parseFloat(station.lng) }}\r\n                                image={{\r\n                                    className: station.stat === \"2\" ? 'pulsemarker' : '',\r\n                                    src: station.stat === \"2\" ? '/img/live.png' : '/img/elc.png',\r\n                                    size: { width: 24, height: 35 }\r\n                                }}\r\n                                onClick={() => onMarkerClick(station.statId)}\r\n                            />\r\n                        </React.Fragment>\r\n                    ))}\r\n                    {state.selectedStation && (\r\n                        <ElecStationPopup station={state.selectedStation} onClose={closeInfoWindow} />\r\n                    )}\r\n                </Map>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Elec_station;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}