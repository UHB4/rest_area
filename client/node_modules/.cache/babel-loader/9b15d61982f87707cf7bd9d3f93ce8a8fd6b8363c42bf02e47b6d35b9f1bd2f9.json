{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link,useNavigate}from'react-router-dom';// React Router가 필요합니다.\nimport axios from\"axios\";import styles from'./Board.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Board(_ref){let{userRealName,posts,startPage,currentPage,endPage,totalPages,MAX_PAGE_LIMIT}=_ref;const[sortByViews,setSortByViews]=useState(false);const navigate=useNavigate();// let respones;\n// let posts;\n// let[respones,setRespones] =useState([])\nconst[responseData,setResponseData]=useState({currentPage:0,posts:[],endPage:0,maxPageNumber:0,startPage:0,totalPages:0// other properties 초기값 설정\n});///////////////////////////////\n///////////////////////////////////\nconst{page}=useParams();///////////////////////////////////////////\n//////////////////////////////////////\nconst maxPageNumber=5;////////\nuseEffect(()=>{// const urlParams  = new URLSearchParams(window.location.search);\n// const reqData ={\n//     params: {\n//         searchType : urlParams.get(\"searchType\"),\n//         searchInput : urlParams.get(\"searchInput\")\n//     }\n// }\n// console.log(reqData)\n// axios.get('http://localhost:3001/boardMain', reqData)\naxios.get('http://13.125.136.48:3000/boardMain').then(res=>{console.log('데이터확인 : '+res.data.currentPage);console.log(res);console.log(res.data);setResponseData(res.data);// respones = res.data.posts\n// console.log(respones)\n});},[]);////////\n///////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////\nuseEffect(()=>{axios.get(\"http://localhost:3001/boardMain?page=\".concat(page)).then(response=>{setResponseData({...responseData,posts:response.data.posts,currentPage:parseInt(page),totalPages:response.data.totalPages,startPage:response.data.startPage,endPage:response.data.endPage});}).catch(error=>{console.log('Error fetching data:',error);});},[page]);/////////////////////////////////////////////\n//////////////  검색내용 보내는코드 gpt한테 받은거///////////////////////////////\nuseEffect(()=>{axios.get('http://localhost:3001/boardMain',{params:{param1:'searchType',param2:'searchInput'// 필요한 만큼 쿼리 파라미터를 추가할 수 있습니다.\n}}).then(res=>{console.log('데이터확인 : '+res.data.currentPage);console.log(res);console.log(res.data);setResponseData(res.data);}).catch(error=>{console.error('에러 발생: ',error);});},[]);/////////////////////////////////////////////\n/////////////////////////////////////////////\n// useEffect(() => {\n//     const queryParams = new URLSearchParams(window.location.search);\n//     const sortParam = queryParams.get('sort');\n//\n//     if (sortParam === 'views_desc') {\n//         setSortByViews(true);\n//     }\n// }, []);\n// const toggleSort = () => {\n//     setSortByViews(!sortByViews);\n//     const sortParam = sortByViews ? 'views_desc' : '';\n//     window.location.href = `/boardMain?sort=${sortParam}`;\n// };\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uB9AC\\uBDF0 \\uAC8C\\uC2DC\\uD310\"}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:'10px',right:'10px',color:\"white\"},children:userRealName?/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/\",className:\"button\",style:{color:\"white\"},children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})}):''// <a href=\"/\" className=\"button\">로그인</a>\n}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC791\\uC131\\uC790\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC791\\uC131\\uC77C\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC870\\uD68C\\uC218 \\u25BC\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:responseData.posts.map((post,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(Link,{to:\"/detailPost/\".concat(post[0]),className:styles.postLink,children:[post[1],\" [\",post[6],\"]\"]})}),/*#__PURE__*/_jsx(\"td\",{children:post[2]}),/*#__PURE__*/_jsx(\"td\",{children:post[3]}),/*#__PURE__*/_jsx(\"td\",{children:post[4]})]},index))})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.buttonContainer,children:userRealName&&/*#__PURE__*/_jsx(Link,{to:\"/create\",className:\"button\",children:\"\\uAE00\\uC4F0\\uAE30\"})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.pagingContainer,children:[responseData.currentPage>1&&/*#__PURE__*/_jsx(Link,{to:\"/boardMain/\".concat(responseData.currentPage-1),children:\"\\uC774\\uC804\"})// 이전 페이지 링크 수정\n,Array.from({length:responseData.endPage-responseData.startPage+1},(_,i)=>responseData.startPage+i).map(page=>page===responseData.currentPage?/*#__PURE__*/_jsx(\"span\",{className:\"current-page\",children:page},page)// 현재 페이지는 링크 없음\n:/*#__PURE__*/_jsx(Link,{to:\"/boardMain/\".concat(page),children:page},page)// 페이지 번호를 경로의 일부로 사용\n),responseData.totalPages-responseData.currentPage+1>responseData.maxPageNumber&&/*#__PURE__*/_jsx(Link,{to:\"/boardMain/\".concat(responseData.currentPage+1),children:\"\\uB2E4\\uC74C\"})// 다음 페이지 링크 수정\n]})]});}export default Board;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","axios","styles","jsx","_jsx","jsxs","_jsxs","Board","_ref","userRealName","posts","startPage","currentPage","endPage","totalPages","MAX_PAGE_LIMIT","sortByViews","setSortByViews","navigate","responseData","setResponseData","maxPageNumber","page","get","then","res","console","log","data","concat","response","parseInt","catch","error","params","param1","param2","children","style","position","top","right","color","href","className","map","post","index","to","postLink","buttonContainer","pagingContainer","Array","from","length","_","i"],"sources":["C:/UHB/rest_area/src/board/BoardMain.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useParams, Link, useNavigate} from 'react-router-dom'; // React Router가 필요합니다.\r\nimport axios from \"axios\";\r\nimport styles from './Board.module.css'\r\nfunction Board({ userRealName, posts, startPage, currentPage, endPage, totalPages, MAX_PAGE_LIMIT }) {\r\n    const [sortByViews, setSortByViews] = useState(false);\r\n    const navigate = useNavigate()\r\n    // let respones;\r\n    // let posts;\r\n    // let[respones,setRespones] =useState([])\r\n    const [responseData, setResponseData] = useState({\r\n        currentPage: 0,\r\n        posts: [],\r\n        endPage: 0,\r\n        maxPageNumber: 0,\r\n        startPage: 0,\r\n        totalPages:0\r\n\r\n        // other properties 초기값 설정\r\n    });\r\n\r\n    ///////////////////////////////\r\n    ///////////////////////////////////\r\n    const { page } = useParams();\r\n///////////////////////////////////////////\r\n    //////////////////////////////////////\r\n\r\n    const maxPageNumber = 5;\r\n\r\n    ////////\r\n    useEffect(()=>{\r\n        // const urlParams  = new URLSearchParams(window.location.search);\r\n        // const reqData ={\r\n        //     params: {\r\n        //         searchType : urlParams.get(\"searchType\"),\r\n        //         searchInput : urlParams.get(\"searchInput\")\r\n        //     }\r\n        // }\r\n\r\n        // console.log(reqData)\r\n        // axios.get('http://localhost:3001/boardMain', reqData)\r\n        axios.get('http://13.125.136.48:3000/boardMain')\r\n            .then(res=>{\r\n                console.log('데이터확인 : '+ res.data.currentPage)\r\n                console.log(res)\r\n                console.log(res.data)\r\n                setResponseData(res.data)\r\n                // respones = res.data.posts\r\n                // console.log(respones)\r\n            })\r\n    },[])\r\n    ////////\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/boardMain?page=${page}` )\r\n            .then(response => {\r\n                setResponseData({\r\n                    ...responseData,\r\n                    posts: response.data.posts,\r\n                    currentPage: parseInt(page),\r\n                    totalPages: response.data.totalPages,\r\n                    startPage: response.data.startPage,\r\n                    endPage: response.data.endPage\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching data:', error);\r\n            });\r\n    }, [page]);\r\n\r\n\r\n/////////////////////////////////////////////\r\n//////////////  검색내용 보내는코드 gpt한테 받은거///////////////////////////////\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/boardMain', {\r\n            params: {\r\n                param1: 'searchType',\r\n                param2: 'searchInput',\r\n                // 필요한 만큼 쿼리 파라미터를 추가할 수 있습니다.\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log('데이터확인 : ' + res.data.currentPage);\r\n                console.log(res);\r\n                console.log(res.data);\r\n                setResponseData(res.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('에러 발생: ', error);\r\n            });\r\n    },[])\r\n\r\n\r\n\r\n/////////////////////////////////////////////\r\n/////////////////////////////////////////////\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const queryParams = new URLSearchParams(window.location.search);\r\n    //     const sortParam = queryParams.get('sort');\r\n    //\r\n    //     if (sortParam === 'views_desc') {\r\n    //         setSortByViews(true);\r\n    //     }\r\n    // }, []);\r\n\r\n    // const toggleSort = () => {\r\n    //     setSortByViews(!sortByViews);\r\n    //     const sortParam = sortByViews ? 'views_desc' : '';\r\n    //     window.location.href = `/boardMain?sort=${sortParam}`;\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h1>리뷰 게시판</h1>\r\n            <div style={{position: 'absolute', top: '10px', right: '10px',color:\"white\"}}>\r\n                {userRealName ? (\r\n                    <p>\r\n                        {/*{userRealName}님 환영합니다. &nbsp;&nbsp;*/}\r\n                        <a href=\"/\" className=\"button\"  style={{color:\"white\"}}>로그아웃</a>\r\n                        {/*a 태그로 이동하면 seasion끊기는거 이용*/}\r\n                    </p>\r\n                ) : (''\r\n                    // <a href=\"/\" className=\"button\">로그인</a>\r\n                )}\r\n            </div>\r\n\r\n\r\n            {/*///////////////////////////////*/}\r\n\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>제목</th>\r\n                    <th>작성자</th>\r\n                    <th>작성일</th>\r\n                    {/*<th onClick={toggleSort} onMouseOver={(e) => e.target.style.textDecoration = 'underline'}*/}\r\n                    {/*    onMouseOut={(e) => e.target.style.textDecoration = 'none'}>조회수 ▼*/}\r\n                    {/*</th>*/}\r\n                    <th>조회수 ▼</th>\r\n                    {/*위에꺼를  단순하게 한거 정렬 안되게*/}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {responseData.posts.map((post, index) => (\r\n                    <tr key={index}>\r\n                        <td><Link to={`/detailPost/${post[0]}`} className={styles.postLink}>{post[1]} [{post[6]}]</Link></td>\r\n                        {/*/////////////////////////////////////////////*/}\r\n                        {/*<td className={styles.postLink}>{post[1]} [{post[6]}]</td>*/}\r\n                        {/*////////////////////////////*/}\r\n                        {/*<td><a onClick={()=>{*/}\r\n                        {/*    navigate(`/detailPost/${post[0]}`)*/}\r\n                        {/*}}>이동</a> </td>*/}\r\n                        <td>{post[2]}</td>\r\n                        <td>{post[3]}</td>\r\n                        <td>{post[4]}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/*////////////////////////////////*/}\r\n\r\n\r\n            <div className={styles.buttonContainer}>\r\n                {userRealName && <Link to=\"/create\" className=\"button\">글쓰기</Link>}\r\n            </div>\r\n\r\n            {/*//////////////////////////////////////*/}\r\n            {/*<div className={styles.pagingContainer}>*/}\r\n            {/*    {responseData.currentPage > 1 && <Link to={`/boardMain?page=${responseData.currentPage - 1}`}>이전</Link>}*/}\r\n            {/*    {Array.from({ length: responseData.endPage - responseData.startPage + 1 }, (_, i) => responseData.startPage + i).map((page, index) => (*/}\r\n            {/*        <React.Fragment key={index}>*/}\r\n            {/*            {page === responseData.currentPage ? (*/}\r\n            {/*                <span className=\"current-page\">{page}</span>*/}\r\n            {/*            ) : (*/}\r\n            {/*                <Link to={`/boardMain?page=${page}`}>{page}</Link>*/}\r\n            {/*            )}*/}\r\n            {/*        </React.Fragment>*/}\r\n            {/*    ))}*/}\r\n            {/*    {(responseData.totalPages - responseData.currentPage + 1) > MAX_PAGE_LIMIT && <Link to={`/boardMain?page=${responseData.currentPage + 1}`}>다음</Link>}*/}\r\n            {/*</div>*/}\r\n\r\n\r\n            {/*//////////////// /boardMain/?page=  ////////////////////////////////////*/}\r\n            {/*<div className={styles.pagingContainer}>*/}\r\n            {/*    {responseData.currentPage > 1 && (*/}\r\n            {/*        <Link to={`/boardMain/?page=${responseData.currentPage - 1}`}>이전</Link>*/}\r\n            {/*    )}*/}\r\n\r\n            {/*    {Array.from({length: responseData.endPage - responseData.startPage + 1}, (_, i) => responseData.startPage + i).map((page) => (*/}\r\n            {/*        page === responseData.currentPage ? (*/}\r\n            {/*            <span className=\"current-page\" key={page}>{page}</span> //페이지 번호가 현재 페이지면 링크안달고*/}\r\n            {/*        ) : (*/}\r\n            {/*            <Link to={`/boardMain/?page=${page}`} key={page}>{page}</Link>  //페이지 번호가 현재 페이지가 아니면 링크담*/}\r\n            {/*        )*/}\r\n            {/*    ))}*/}\r\n\r\n            {/*    {responseData.totalPages - responseData.currentPage + 1 > responseData.maxPageNumber && (*/}\r\n            {/*        <Link to={`/boardMain/?page=${responseData.currentPage + 1}`}>다음</Link>*/}\r\n            {/*    )}*/}\r\n            {/*</div>*/}\r\n\r\n            {/*////////////////  Link to={`/boardMain/${page}  ////////////////////////////////////////////////////////////*/}\r\n\r\n            <div className={styles.pagingContainer}>\r\n                {responseData.currentPage > 1 && (\r\n                    <Link to={`/boardMain/${responseData.currentPage - 1}`}>이전</Link> // 이전 페이지 링크 수정\r\n                )}\r\n\r\n                {Array.from({length: responseData.endPage - responseData.startPage + 1}, (_, i) => responseData.startPage + i).map((page) => (\r\n                    page === responseData.currentPage ? (\r\n                        <span className=\"current-page\" key={page}>{page}</span> // 현재 페이지는 링크 없음\r\n                    ) : (\r\n                        <Link to={`/boardMain/${page}`} key={page}>{page}</Link> // 페이지 번호를 경로의 일부로 사용\r\n                    )\r\n                ))}\r\n\r\n                {responseData.totalPages - responseData.currentPage + 1 > responseData.maxPageNumber && (\r\n                    <Link to={`/boardMain/${responseData.currentPage + 1}`}>다음</Link> // 다음 페이지 링크 수정\r\n                )}\r\n            </div>\r\n\r\n\r\n            {/*///////////////////////////////////////////////////////*/}\r\n\r\n\r\n            {/*<div id={styles.searchContainer}>*/}\r\n            {/*    <form action=\"/boardMain\" method=\"GET\">*/}\r\n            {/*    /!*    <form action=\"http://localhost:3001/boardMain\" method=\"post\">*!/*/}\r\n            {/*            <label htmlFor=\"searchType\">검색 조건:</label>*/}\r\n            {/*            <select id=\"searchType\" name=\"searchType\">*/}\r\n            {/*                <option value=\"title\" selected>제목</option>*/}\r\n            {/*                <option value=\"content\">게시글 내용</option>*/}\r\n            {/*                <option value=\"author\">글 작성자</option>*/}\r\n            {/*            </select>*/}\r\n            {/*            <input type=\"text\" id=\"searchInput\" name=\"searchInput\"/>*/}\r\n            {/*            <button type=\"submit\">검색</button>*/}\r\n            {/*        </form>*/}\r\n            {/*</div>*/}\r\n            {/*/////////////////////////////////////*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}