{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./chat.css';import{FaMicrophone}from'react-icons/fa';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Chatbot(){const[messages,setMessages]=useState([]);const[fuelStations,setFuelStations]=useState([]);const[chargingStations,setChargingStations]=useState([]);const[isListening,setIsListening]=useState(false);useEffect(()=>{const initialMessage={id:Date.now(),text:'안녕하세요! 어떻게 도와드릴까요?',sender:'bot'};setMessages([initialMessage]);speak(initialMessage.text);const chatContainer=document.querySelector('.chat-container');chatContainer.scrollTop=chatContainer.scrollHeight;},[]);useEffect(()=>{const chatContainer=document.querySelector('.chat-container');chatContainer.scrollTop=chatContainer.scrollHeight;},[messages]);const speak=text=>{const synth=window.speechSynthesis;const utterance=new SpeechSynthesisUtterance(text);utterance.lang='ko-KR';synth.speak(utterance);};const handleSpeech=()=>{const recognition=new window.webkitSpeechRecognition();recognition.lang='ko-KR';recognition.start();recognition.onresult=event=>{const speechResult=event.results[0][0].transcript;console.log(\"Recognized: \".concat(speechResult));handleMessage(speechResult);setIsListening(false);};recognition.onend=()=>{setIsListening(false);};recognition.onerror=event=>{console.error(\"Speech recognition error\",event.error);setIsListening(false);};};const fetchChargingStations=async(latitude,longitude)=>{try{const response=await axios.post('http://localhost:5000/location',{latitude:latitude,longitude:longitude});const formattedStations=response.data.stations.map(station=>\"\".concat(station['Station Name'],\" - \\uD604 \\uC704\\uCE58\\uB85C\\uBD80\\uD130 \").concat(formatChargingStationDistance(station.Distance),\" \\uB5A8\\uC5B4\\uC9D0\")).join('\\n');const resultsMessage={id:Date.now(),text:\"\\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C \\uC815\\uBCF4:\\n\".concat(formattedStations),sender:'bot'};setMessages(messages=>[...messages,resultsMessage]);speak(resultsMessage.text);}catch(error){console.error(\"Error fetching stations:\",error);}};const fetchFuelPrices=async(latitude,longitude,type)=>{try{const response=await axios({method:'post',url:'http://localhost:5000/get_gas_stations22',data:{latitude,longitude,type}});const parser=new DOMParser();const xmlDoc=parser.parseFromString(response.data.data,\"application/xml\");const oilNodes=xmlDoc.getElementsByTagName(\"OIL\");const stations=Array.from(oilNodes).map(node=>({id:node.getElementsByTagName(\"UNI_ID\")[0].textContent,name:node.getElementsByTagName(\"OS_NM\")[0].textContent,price:node.getElementsByTagName(\"PRICE\")[0].textContent,distance:node.getElementsByTagName(\"DISTANCE\")[0].textContent})).sort((a,b)=>parseFloat(a.price)-parseFloat(b.price)).slice(0,10);const formattedStations=stations.map(station=>\"\".concat(station.name,\" - \").concat(station.price,\"\\uC6D0 - \\uD604 \\uC704\\uCE58\\uB85C\\uBD80\\uD130 \").concat(formatFuelStationDistance(station.distance),\" \\uB5A8\\uC5B4\\uC9D0\")).join('\\n');const resultsMessage={id:Date.now(),text:\"\\uC8FC\\uC720\\uC18C \\uC815\\uBCF4:\\n\".concat(formattedStations),sender:'bot'};setMessages(messages=>[...messages,resultsMessage]);speak(resultsMessage.text);}catch(error){console.error(\"Error fetching stations:\",error);}};const formatFuelStationDistance=distance=>{const distanceInMeters=parseFloat(distance);return\"\".concat((distanceInMeters/1000).toFixed(2),\"km\");};const formatChargingStationDistance=distance=>{const distanceInMeters=parseFloat(distance);return\"\".concat(distanceInMeters.toFixed(2),\"km\");};const handleMessage=message=>{setMessages(messages=>[...messages,{id:Date.now(),text:message,sender:'user'}]);speak(message);if(message.includes('주유소')){if(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;fetchFuelPrices(latitude,longitude,'fuel');},handleGeolocationError);}else{const botResponse={id:Date.now(),text:\"Geolocation이 지원되지 않는 브라우저입니다.\",sender:'bot'};setMessages(messages=>[...messages,botResponse]);speak(botResponse.text);}}else if(message.includes('전기차')){if(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;fetchChargingStations(latitude,longitude);},handleGeolocationError);}else{const botResponse={id:Date.now(),text:\"Geolocation이 지원되지 않는 브라우저입니다.\",sender:'bot'};setMessages(messages=>[...messages,botResponse]);speak(botResponse.text);}}if(message.includes('로그인 페이지로 이동하기')){const loginUrl=\"http://localhost:3000/login\";const botResponse={id:Date.now(),text:\"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uB824\\uBA74 \\uC5EC\\uAE30\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694.\",sender:'bot',url:loginUrl// URL을 메시지 객체에 추가\n};setMessages(messages=>[...messages,botResponse]);speak(\"로그인 페이지 링크를 보냈습니다.\");}if(message.includes('통계 차트 보러가기')){const statsUrl=\"http://localhost:3000/sub\";const botResponse={id:Date.now(),text:\"\\uD1B5\\uACC4 \\uCC28\\uD2B8 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uB824\\uBA74 \\uC5EC\\uAE30\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694.\",sender:'bot',url:statsUrl};setMessages(messages=>[...messages,botResponse]);speak(\"통계 차트 페이지 링크를 보냈습니다.\");}};const handleGeolocationError=error=>{let errorMessage='';switch(error.code){case error.PERMISSION_DENIED:errorMessage=\"위치 정보 접근이 거부되었습니다.\";break;case error.POSITION_UNAVAILABLE:errorMessage=\"위치 정보를 사용할 수 없습니다.\";break;case error.TIMEOUT:errorMessage=\"위치 정보를 가져오는 요청이 시간 초과되었습니다.\";break;default:errorMessage=\"알 수 없는 오류가 발생했습니다.\";break;}const botResponse={id:Date.now(),text:errorMessage,sender:'bot'};setMessages(messages=>[...messages,botResponse]);speak(botResponse.text);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat_app\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-container\",children:messages.map(msg=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(msg.sender),children:msg.url?/*#__PURE__*/_jsx(Link,{to:msg.url,children:msg.text}):msg.text},msg.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"stations-list\",children:/*#__PURE__*/_jsx(\"ul\",{children:fuelStations.map(station=>/*#__PURE__*/_jsxs(\"li\",{children:[station.name,\" - \",station.price,\"\\uC6D0 - \\uD604 \\uC704\\uCE58\\uB85C\\uBD80\\uD130 \",formatFuelStationDistance(station.distance),\" \\uB5A8\\uC5B4\\uC9D0\"]},station.id))})}),/*#__PURE__*/_jsx(\"div\",{className:\"stations-list\",children:/*#__PURE__*/_jsx(\"ul\",{children:chargingStations.map((station,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[station['Station Name'],\" - \\uD604 \\uC704\\uCE58\\uB85C\\uBD80\\uD130 \",formatChargingStationDistance(station.Distance),\" \\uB5A8\\uC5B4\\uC9D0\"]},index))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-input\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMessage('내 주변 최저가 주유소 찾기'),children:\"\\uB0B4 \\uC8FC\\uBCC0 \\uCD5C\\uC800\\uAC00 \\uC8FC\\uC720\\uC18C \\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMessage('내 주변 전기차 충전소 찾기'),children:\"\\uB0B4 \\uC8FC\\uBCC0 \\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C \\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMessage('로그인 페이지로 이동하기'),children:\"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMessage('통계 차트 보러가기'),children:\"\\uD1B5\\uACC4 \\uCC28\\uD2B8 \\uBCF4\\uB7EC\\uAC00\\uAE30\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"voice-button\",onClick:handleSpeech,disabled:isListening,children:[/*#__PURE__*/_jsx(FaMicrophone,{}),isListening?\"듣는 중...\":\"음성인식\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"tooltiptext\",children:[\"\\uC74C\\uC131\\uC778\\uC2DD \\uBC84\\uD2BC\\uC744 \\uB204\\uB974\\uACE0 \\uC8FC\\uC720\\uC18C or \\uC804\\uAE30\\uCC28 \\uB77C\\uACE0 \\uB9C8\\uC774\\uD06C\\uC5D0 \\uB9D0\\uD558\\uC2DC\\uBA74\",/*#__PURE__*/_jsx(\"br\",{}),\" \\uADF8\\uC5D0 \\uB9DE\\uB294 \\uC815\\uBCF4\\uAC00 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\",/*#__PURE__*/_jsx(\"br\",{}),\"(\\uC8FC\\uC720\\uC18C\\uB294 \\uBC18\\uACBD 5KM \\uB0B4\\uC5D0 \\uC788\\uB294\",/*#__PURE__*/_jsx(\"br\",{}),\" \\uCD5C\\uC800\\uAC00 \\uC8FC\\uC720\\uC18C\\uAC00,\",/*#__PURE__*/_jsx(\"br\",{}),\" \\uC804\\uAE30\\uCC28\\uB294 \\uBC18\\uACBD 5KM \\uB0B4\\uC5D0 \\uC788\\uB294\",/*#__PURE__*/_jsx(\"br\",{}),\" \\uCDA9\\uC804\\uC18C\\uAC00 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.)\"]})]})]})]});}export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","axios","FaMicrophone","Link","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","fuelStations","setFuelStations","chargingStations","setChargingStations","isListening","setIsListening","initialMessage","id","Date","now","text","sender","speak","chatContainer","document","querySelector","scrollTop","scrollHeight","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","handleSpeech","recognition","webkitSpeechRecognition","start","onresult","event","speechResult","results","transcript","console","log","concat","handleMessage","onend","onerror","error","fetchChargingStations","latitude","longitude","response","post","formattedStations","data","stations","map","station","formatChargingStationDistance","Distance","join","resultsMessage","fetchFuelPrices","type","method","url","parser","DOMParser","xmlDoc","parseFromString","oilNodes","getElementsByTagName","Array","from","node","textContent","name","price","distance","sort","a","b","parseFloat","slice","formatFuelStationDistance","distanceInMeters","toFixed","message","includes","navigator","geolocation","getCurrentPosition","position","coords","handleGeolocationError","botResponse","loginUrl","statsUrl","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","className","children","msg","to","index","onClick","disabled"],"sources":["C:/UHB/rest_area/src/chatbot/chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './chat.css';\r\nimport { FaMicrophone } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Chatbot() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [fuelStations, setFuelStations] = useState([]);\r\n    const [chargingStations, setChargingStations] = useState([]);\r\n    const [isListening, setIsListening] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const initialMessage = {\r\n            id: Date.now(),\r\n            text: '안녕하세요! 어떻게 도와드릴까요?',\r\n            sender: 'bot'\r\n        };\r\n        setMessages([initialMessage]);\r\n        speak(initialMessage.text);\r\n\r\n        const chatContainer = document.querySelector('.chat-container');\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const chatContainer = document.querySelector('.chat-container');\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }, [messages]);\r\n\r\n    const speak = (text) => {\r\n        const synth = window.speechSynthesis;\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        utterance.lang = 'ko-KR';\r\n        synth.speak(utterance);\r\n    };\r\n\r\n    const handleSpeech = () => {\r\n        const recognition = new window.webkitSpeechRecognition();\r\n        recognition.lang = 'ko-KR';\r\n        recognition.start();\r\n\r\n        recognition.onresult = (event) => {\r\n            const speechResult = event.results[0][0].transcript;\r\n            console.log(`Recognized: ${speechResult}`);\r\n            handleMessage(speechResult);\r\n            setIsListening(false);\r\n        };\r\n\r\n        recognition.onend = () => {\r\n            setIsListening(false);\r\n        };\r\n\r\n        recognition.onerror = (event) => {\r\n            console.error(\"Speech recognition error\", event.error);\r\n            setIsListening(false);\r\n        };\r\n    };\r\n\r\n    const fetchChargingStations = async (latitude, longitude) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/location', {\r\n                latitude: latitude,\r\n                longitude: longitude\r\n            });\r\n            const formattedStations = response.data.stations.map(station => `${station['Station Name']} - 현 위치로부터 ${formatChargingStationDistance(station.Distance)} 떨어짐`).join('\\n');\r\n            const resultsMessage = {\r\n                id: Date.now(),\r\n                text: `전기차 충전소 정보:\\n${formattedStations}`,\r\n                sender: 'bot'\r\n            };\r\n            setMessages(messages => [...messages, resultsMessage]);\r\n            speak(resultsMessage.text);\r\n        } catch (error) {\r\n            console.error(\"Error fetching stations:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchFuelPrices = async (latitude, longitude, type) => {\r\n        try {\r\n            const response = await axios({\r\n                method: 'post',\r\n                url: 'http://localhost:5000/get_gas_stations22',\r\n                data: { latitude, longitude, type }\r\n            });\r\n\r\n            const parser = new DOMParser();\r\n            const xmlDoc = parser.parseFromString(response.data.data, \"application/xml\");\r\n            const oilNodes = xmlDoc.getElementsByTagName(\"OIL\");\r\n\r\n            const stations = Array.from(oilNodes).map(node => ({\r\n                id: node.getElementsByTagName(\"UNI_ID\")[0].textContent,\r\n                name: node.getElementsByTagName(\"OS_NM\")[0].textContent,\r\n                price: node.getElementsByTagName(\"PRICE\")[0].textContent,\r\n                distance: node.getElementsByTagName(\"DISTANCE\")[0].textContent\r\n            })).sort((a, b) => parseFloat(a.price) - parseFloat(b.price)).slice(0, 10);\r\n\r\n            const formattedStations = stations.map(station => `${station.name} - ${station.price}원 - 현 위치로부터 ${formatFuelStationDistance(station.distance)} 떨어짐`).join('\\n');\r\n            const resultsMessage = {\r\n                id: Date.now(),\r\n                text: `주유소 정보:\\n${formattedStations}`,\r\n                sender: 'bot'\r\n            };\r\n            setMessages(messages => [...messages, resultsMessage]);\r\n            speak(resultsMessage.text);\r\n        } catch (error) {\r\n            console.error(\"Error fetching stations:\", error);\r\n        }\r\n    };\r\n\r\n    const formatFuelStationDistance = (distance) => {\r\n        const distanceInMeters = parseFloat(distance);\r\n        return `${(distanceInMeters / 1000).toFixed(2)}km`;\r\n    };\r\n\r\n    const formatChargingStationDistance = (distance) => {\r\n        const distanceInMeters = parseFloat(distance);\r\n        return `${distanceInMeters.toFixed(2)}km`;\r\n    };\r\n\r\n    const handleMessage = (message) => {\r\n        setMessages(messages => [...messages, {id: Date.now(), text: message, sender: 'user'}]);\r\n        speak(message);\r\n\r\n        if (message.includes('주유소')) {\r\n            if (\"geolocation\" in navigator) {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    const {latitude, longitude} = position.coords;\r\n                    fetchFuelPrices(latitude, longitude, 'fuel');\r\n                }, handleGeolocationError);\r\n            } else {\r\n                const botResponse = {id: Date.now(), text: \"Geolocation이 지원되지 않는 브라우저입니다.\", sender: 'bot'};\r\n                setMessages(messages => [...messages, botResponse]);\r\n                speak(botResponse.text);\r\n            }\r\n        } else if (message.includes('전기차')) {\r\n            if (\"geolocation\" in navigator) {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    const {latitude, longitude} = position.coords;\r\n                    fetchChargingStations(latitude, longitude);\r\n                }, handleGeolocationError);\r\n            } else {\r\n                const botResponse = {id: Date.now(), text: \"Geolocation이 지원되지 않는 브라우저입니다.\", sender: 'bot'};\r\n                setMessages(messages => [...messages, botResponse]);\r\n                speak(botResponse.text);\r\n            }\r\n        }\r\n        if (message.includes('로그인 페이지로 이동하기')) {\r\n            const loginUrl = \"http://localhost:3000/login\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `로그인 페이지로 이동하려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: loginUrl // URL을 메시지 객체에 추가\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"로그인 페이지 링크를 보냈습니다.\");\r\n        }\r\n        if (message.includes('통계 차트 보러가기')) {\r\n            const statsUrl = \"http://localhost:3000/sub\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `통계 차트 페이지로 이동하려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: statsUrl\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"통계 차트 페이지 링크를 보냈습니다.\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleGeolocationError = (error) => {\r\n        let errorMessage = '';\r\n        switch(error.code) {\r\n            case error.PERMISSION_DENIED:\r\n                errorMessage = \"위치 정보 접근이 거부되었습니다.\";\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n                errorMessage = \"위치 정보를 사용할 수 없습니다.\";\r\n                break;\r\n            case error.TIMEOUT:\r\n                errorMessage = \"위치 정보를 가져오는 요청이 시간 초과되었습니다.\";\r\n                break;\r\n            default:\r\n                errorMessage = \"알 수 없는 오류가 발생했습니다.\";\r\n                break;\r\n        }\r\n        const botResponse = {\r\n            id: Date.now(),\r\n            text: errorMessage,\r\n            sender: 'bot'\r\n        };\r\n        setMessages(messages => [...messages, botResponse]);\r\n        speak(botResponse.text);\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat_app\">\r\n            <div className=\"chat-container\">\r\n                {messages.map(msg => (\r\n                    <div key={msg.id} className={`message ${msg.sender}`}>\r\n                        {msg.url ? (\r\n                            <Link to={msg.url}>{msg.text}</Link>\r\n                        ) : (\r\n                            msg.text\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"stations-list\">\r\n                <ul>\r\n                    {fuelStations.map(station => (\r\n                        <li key={station.id}>\r\n                            {station.name} - {station.price}원 - 현 위치로부터 {formatFuelStationDistance(station.distance)} 떨어짐\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"stations-list\">\r\n                <ul>\r\n                    {chargingStations.map((station, index) => (\r\n                        <li key={index}>\r\n                            {station['Station Name']} - 현 위치로부터 {formatChargingStationDistance(station.Distance)} 떨어짐\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"user-input\">\r\n                <button onClick={() => handleMessage('내 주변 최저가 주유소 찾기')}>내 주변 최저가 주유소 찾기</button>\r\n                <button onClick={() => handleMessage('내 주변 전기차 충전소 찾기')}>내 주변 전기차 충전소 찾기</button>\r\n                <button onClick={() => handleMessage('로그인 페이지로 이동하기')}>로그인 페이지로 이동하기</button>\r\n                <button onClick={() => handleMessage('통계 차트 보러가기')}>통계 차트 보러가기</button>\r\n                <div className=\"tooltip\">\r\n                    <button className=\"voice-button\" onClick={handleSpeech} disabled={isListening}>\r\n                        <FaMicrophone/>\r\n                        {isListening ? \"듣는 중...\" : \"음성인식\"}\r\n                    </button>\r\n                    <span className=\"tooltiptext\">\r\n                        음성인식 버튼을 누르고 주유소 or 전기차 라고 마이크에 말하시면<br/> 그에 맞는 정보가 표시됩니다.<br/>\r\n                        (주유소는 반경 5KM 내에 있는<br/> 최저가 주유소가,<br/> 전기차는 반경 5KM 내에 있는<br/> 충전소가 표시됩니다.)\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}