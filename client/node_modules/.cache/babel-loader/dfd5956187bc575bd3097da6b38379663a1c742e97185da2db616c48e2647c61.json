{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\chatbot\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './chat.css';\nimport { FaMicrophone } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [fuelStations, setFuelStations] = useState([]);\n  const [chargingStations, setChargingStations] = useState([]);\n  const [isListening, setIsListening] = useState(false);\n  useEffect(() => {\n    const initialMessage = {\n      id: Date.now(),\n      text: '안녕하세요! 어떻게 도와드릴까요?',\n      sender: 'bot'\n    };\n    setMessages([initialMessage]);\n    speak(initialMessage.text);\n    const chatContainer = document.querySelector('.chat-container');\n    chatContainer.scrollTop = chatContainer.scrollHeight;\n  }, []);\n  useEffect(() => {\n    const chatContainer = document.querySelector('.chat-container');\n    chatContainer.scrollTop = chatContainer.scrollHeight;\n  }, [messages]);\n  const speak = text => {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'ko-KR';\n    synth.speak(utterance);\n  };\n  const handleSpeech = () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = 'ko-KR';\n    recognition.start();\n    recognition.onresult = event => {\n      const speechResult = event.results[0][0].transcript;\n      console.log(`Recognized: ${speechResult}`);\n      handleMessage(speechResult);\n      setIsListening(false);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error\", event.error);\n      setIsListening(false);\n    };\n  };\n  const fetchChargingStations = async (latitude, longitude) => {\n    try {\n      const response = await axios.post('http://localhost:5000/location', {\n        latitude: latitude,\n        longitude: longitude\n      });\n      console.log('Charging stations data:', response.data.stations);\n      setChargingStations(response.data.stations);\n      const resultsMessage = response.data.stations.length > 0 ? {\n        id: Date.now(),\n        text: `아래 전기차 충전소 정보는 반경 5KM 이내에 있는 전기차 충전소입니다.`,\n        sender: 'bot'\n      } : {\n        id: Date.now(),\n        text: `반경 5KM 이내에 전기차 충전소가 없습니다.`,\n        sender: 'bot'\n      };\n      setMessages(messages => [...messages, resultsMessage]);\n      speak(resultsMessage.text);\n    } catch (error) {\n      console.error(\"Error fetching stations:\", error);\n    }\n  };\n  const fetchFuelPrices = async (latitude, longitude, type) => {\n    try {\n      const response = await axios({\n        method: 'post',\n        url: 'http://localhost:5000/get_gas_stations22',\n        data: {\n          latitude,\n          longitude,\n          type\n        }\n      });\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(response.data.data, \"application/xml\");\n      const oilNodes = xmlDoc.getElementsByTagName(\"OIL\");\n      const stations = Array.from(oilNodes).map(node => ({\n        id: node.getElementsByTagName(\"UNI_ID\")[0].textContent,\n        name: node.getElementsByTagName(\"OS_NM\")[0].textContent,\n        price: node.getElementsByTagName(\"PRICE\")[0].textContent,\n        distance: node.getElementsByTagName(\"DISTANCE\")[0].textContent\n      })).sort((a, b) => parseFloat(a.price) - parseFloat(b.price)).slice(0, 10);\n      setFuelStations(stations);\n      const resultsMessage = stations.length > 0 ? {\n        id: Date.now(),\n        text: `아래 주유소 정보는 반경 5KM 이내에 있는 주유소입니다.`,\n        sender: 'bot'\n      } : {\n        id: Date.now(),\n        text: `반경 5KM 이내에 주유소가 없습니다.`,\n        sender: 'bot'\n      };\n      setMessages(messages => [...messages, resultsMessage]);\n      speak(resultsMessage.text);\n    } catch (error) {\n      console.error(\"Error fetching stations:\", error);\n    }\n  };\n  const formatFuelStationDistance = distance => {\n    const distanceInMeters = parseFloat(distance);\n    return `${(distanceInMeters / 1000).toFixed(2)}km`;\n  };\n  const formatChargingStationDistance = distance => {\n    const distanceInMeters = parseFloat(distance);\n    return `${distanceInMeters.toFixed(2)}km`;\n  };\n  const handleMessage = message => {\n    setMessages(messages => [...messages, {\n      id: Date.now(),\n      text: message,\n      sender: 'user'\n    }]);\n    speak(message);\n    if (message.includes('주유소')) {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          fetchFuelPrices(latitude, longitude, 'fuel');\n        }, handleGeolocationError);\n      } else {\n        const botResponse = {\n          id: Date.now(),\n          text: \"Geolocation이 지원되지 않는 브라우저입니다.\",\n          sender: 'bot'\n        };\n        setMessages(messages => [...messages, botResponse]);\n        speak(botResponse.text);\n      }\n    } else if (message.includes('전기차')) {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          fetchChargingStations(latitude, longitude);\n        }, handleGeolocationError);\n      } else {\n        const botResponse = {\n          id: Date.now(),\n          text: \"Geolocation이 지원되지 않는 브라우저입니다.\",\n          sender: 'bot'\n        };\n        setMessages(messages => [...messages, botResponse]);\n        speak(botResponse.text);\n      }\n    }\n    if (message.includes('로그인 페이지로 이동하기')) {\n      const loginUrl = \"http://localhost:3000/login\";\n      const botResponse = {\n        id: Date.now(),\n        text: `로그인 페이지로 이동하려면 여기를 클릭하세요.`,\n        sender: 'bot',\n        url: loginUrl // URL을 메시지 객체에 추가\n      };\n      setMessages(messages => [...messages, botResponse]);\n      speak(\"로그인 페이지 링크를 보냈습니다.\");\n    }\n    if (message.includes('통계 차트 보러가기')) {\n      const statsUrl = \"http://localhost:3000/sub\";\n      const botResponse = {\n        id: Date.now(),\n        text: `통계 차트 페이지로 이동하려면 여기를 클릭하세요.`,\n        sender: 'bot',\n        url: statsUrl\n      };\n      setMessages(messages => [...messages, botResponse]);\n      speak(\"통계 차트 페이지 링크를 보냈습니다.\");\n    }\n  };\n  const handleGeolocationError = error => {\n    let errorMessage = '';\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        errorMessage = \"위치 정보 접근이 거부되었습니다.\";\n        break;\n      case error.POSITION_UNAVAILABLE:\n        errorMessage = \"위치 정보를 사용할 수 없습니다.\";\n        break;\n      case error.TIMEOUT:\n        errorMessage = \"위치 정보를 가져오는 요청이 시간 초과되었습니다.\";\n        break;\n      default:\n        errorMessage = \"알 수 없는 오류가 발생했습니다.\";\n        break;\n    }\n    const botResponse = {\n      id: Date.now(),\n      text: errorMessage,\n      sender: 'bot'\n    };\n    setMessages(messages => [...messages, botResponse]);\n    speak(botResponse.text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"APP\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uCC44\\uD305\\uB85C\\uBCF4\\uD2B8 \\uC784\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.url ? /*#__PURE__*/_jsxDEV(Link, {\n          to: msg.url,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }, this) : msg.text\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stations-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC8FC\\uC720\\uC18C \\uC815\\uBCF4:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fuelStations.map(station => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [station.name, \" - \", station.price, \"\\uC6D0 - \\uD604 \\uC704\\uCE58\\uB85C\\uBD80\\uD130 \", formatFuelStationDistance(station.distance), \" \\uB5A8\\uC5B4\\uC9D0\"]\n        }, station.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stations-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C \\uC815\\uBCF4:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chargingStations.map((station, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [station['Station Name'], \" - \\uD604 \\uC704\\uCE58\\uB85C\\uBD80\\uD130 \", formatChargingStationDistance(station.Distance), \" \\uB5A8\\uC5B4\\uC9D0\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMessage('내 주변 최저가 주유소 찾기'),\n        children: \"\\uB0B4 \\uC8FC\\uBCC0 \\uCD5C\\uC800\\uAC00 \\uC8FC\\uC720\\uC18C \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMessage('내 주변 전기차 충전소 찾기'),\n        children: \"\\uB0B4 \\uC8FC\\uBCC0 \\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMessage('로그인 페이지로 이동하기'),\n        children: \"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMessage('통계 차트 보러가기'),\n        children: \"\\uD1B5\\uACC4 \\uCC28\\uD2B8 \\uBCF4\\uB7EC\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"voice-button\",\n          onClick: handleSpeech,\n          disabled: isListening,\n          children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), isListening ? \"듣는 중...\" : \"음성인식\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tooltiptext\",\n          children: [\"\\uC74C\\uC131\\uC778\\uC2DD \\uBC84\\uD2BC\\uC744 \\uB204\\uB974\\uACE0 \\uC8FC\\uC720\\uC18C or \\uC804\\uAE30\\uCC28 \\uB77C\\uACE0 \\uB9C8\\uC774\\uD06C\\uC5D0 \\uB9D0\\uD558\\uC2DC\\uBA74\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 61\n          }, this), \" \\uADF8\\uC5D0 \\uB9DE\\uB294 \\uC815\\uBCF4\\uAC00 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 83\n          }, this), \"(\\uC8FC\\uC720\\uC18C\\uB294 \\uBC18\\uACBD 5KM \\uB0B4\\uC5D0 \\uC788\\uB294\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 43\n          }, this), \" \\uCD5C\\uC800\\uAC00 \\uC8FC\\uC720\\uC18C\\uAC00,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 58\n          }, this), \" \\uC804\\uAE30\\uCC28\\uB294 \\uBC18\\uACBD 5KM \\uB0B4\\uC5D0 \\uC788\\uB294\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 81\n          }, this), \" \\uCDA9\\uC804\\uC18C\\uAC00 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"7VH1FD0HSv2zo0HIBLSRK4Ykulw=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","FaMicrophone","Link","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","fuelStations","setFuelStations","chargingStations","setChargingStations","isListening","setIsListening","initialMessage","id","Date","now","text","sender","speak","chatContainer","document","querySelector","scrollTop","scrollHeight","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","handleSpeech","recognition","webkitSpeechRecognition","start","onresult","event","speechResult","results","transcript","console","log","handleMessage","onend","onerror","error","fetchChargingStations","latitude","longitude","response","post","data","stations","resultsMessage","length","fetchFuelPrices","type","method","url","parser","DOMParser","xmlDoc","parseFromString","oilNodes","getElementsByTagName","Array","from","map","node","textContent","name","price","distance","sort","a","b","parseFloat","slice","formatFuelStationDistance","distanceInMeters","toFixed","formatChargingStationDistance","message","includes","navigator","geolocation","getCurrentPosition","position","coords","handleGeolocationError","botResponse","loginUrl","statsUrl","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","to","station","index","Distance","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/chatbot/chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './chat.css';\r\nimport { FaMicrophone } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Chatbot() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [fuelStations, setFuelStations] = useState([]);\r\n    const [chargingStations, setChargingStations] = useState([]);\r\n    const [isListening, setIsListening] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const initialMessage = {\r\n            id: Date.now(),\r\n            text: '안녕하세요! 어떻게 도와드릴까요?',\r\n            sender: 'bot'\r\n        };\r\n        setMessages([initialMessage]);\r\n        speak(initialMessage.text);\r\n\r\n        const chatContainer = document.querySelector('.chat-container');\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const chatContainer = document.querySelector('.chat-container');\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }, [messages]);\r\n\r\n    const speak = (text) => {\r\n        const synth = window.speechSynthesis;\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        utterance.lang = 'ko-KR';\r\n        synth.speak(utterance);\r\n    };\r\n\r\n    const handleSpeech = () => {\r\n        const recognition = new window.webkitSpeechRecognition();\r\n        recognition.lang = 'ko-KR';\r\n        recognition.start();\r\n\r\n        recognition.onresult = (event) => {\r\n            const speechResult = event.results[0][0].transcript;\r\n            console.log(`Recognized: ${speechResult}`);\r\n            handleMessage(speechResult);\r\n            setIsListening(false);\r\n        };\r\n\r\n        recognition.onend = () => {\r\n            setIsListening(false);\r\n        };\r\n\r\n        recognition.onerror = (event) => {\r\n            console.error(\"Speech recognition error\", event.error);\r\n            setIsListening(false);\r\n        };\r\n    };\r\n\r\n    const fetchChargingStations = async (latitude, longitude) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/location', {\r\n                latitude: latitude,\r\n                longitude: longitude\r\n            });\r\n            console.log('Charging stations data:', response.data.stations);\r\n            setChargingStations(response.data.stations);\r\n            const resultsMessage = response.data.stations.length > 0 ? {\r\n                id: Date.now(),\r\n                text: `아래 전기차 충전소 정보는 반경 5KM 이내에 있는 전기차 충전소입니다.`,\r\n                sender: 'bot'\r\n            } : {\r\n                id: Date.now(),\r\n                text: `반경 5KM 이내에 전기차 충전소가 없습니다.`,\r\n                sender: 'bot'\r\n            };\r\n            setMessages(messages => [...messages, resultsMessage]);\r\n            speak(resultsMessage.text);\r\n        } catch (error) {\r\n            console.error(\"Error fetching stations:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchFuelPrices = async (latitude, longitude, type) => {\r\n        try {\r\n            const response = await axios({\r\n                method: 'post',\r\n                url: 'http://localhost:5000/get_gas_stations22',\r\n                data: { latitude, longitude, type }\r\n            });\r\n\r\n            const parser = new DOMParser();\r\n            const xmlDoc = parser.parseFromString(response.data.data, \"application/xml\");\r\n            const oilNodes = xmlDoc.getElementsByTagName(\"OIL\");\r\n\r\n            const stations = Array.from(oilNodes).map(node => ({\r\n                id: node.getElementsByTagName(\"UNI_ID\")[0].textContent,\r\n                name: node.getElementsByTagName(\"OS_NM\")[0].textContent,\r\n                price: node.getElementsByTagName(\"PRICE\")[0].textContent,\r\n                distance: node.getElementsByTagName(\"DISTANCE\")[0].textContent\r\n            })).sort((a, b) => parseFloat(a.price) - parseFloat(b.price)).slice(0, 10);\r\n\r\n            setFuelStations(stations);\r\n\r\n            const resultsMessage = stations.length > 0 ? {\r\n                id: Date.now(),\r\n                text: `아래 주유소 정보는 반경 5KM 이내에 있는 주유소입니다.`,\r\n                sender: 'bot'\r\n            } : {\r\n                id: Date.now(),\r\n                text: `반경 5KM 이내에 주유소가 없습니다.`,\r\n                sender: 'bot'\r\n            };\r\n            setMessages(messages => [...messages, resultsMessage]);\r\n            speak(resultsMessage.text);\r\n        } catch (error) {\r\n            console.error(\"Error fetching stations:\", error);\r\n        }\r\n    };\r\n\r\n    const formatFuelStationDistance = (distance) => {\r\n        const distanceInMeters = parseFloat(distance);\r\n        return `${(distanceInMeters / 1000).toFixed(2)}km`;\r\n    };\r\n\r\n    const formatChargingStationDistance = (distance) => {\r\n        const distanceInMeters = parseFloat(distance);\r\n        return `${distanceInMeters.toFixed(2)}km`;\r\n    };\r\n\r\n    const handleMessage = (message) => {\r\n        setMessages(messages => [...messages, {id: Date.now(), text: message, sender: 'user'}]);\r\n        speak(message);\r\n\r\n        if (message.includes('주유소')) {\r\n            if (\"geolocation\" in navigator) {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    const {latitude, longitude} = position.coords;\r\n                    fetchFuelPrices(latitude, longitude, 'fuel');\r\n                }, handleGeolocationError);\r\n            } else {\r\n                const botResponse = {id: Date.now(), text: \"Geolocation이 지원되지 않는 브라우저입니다.\", sender: 'bot'};\r\n                setMessages(messages => [...messages, botResponse]);\r\n                speak(botResponse.text);\r\n            }\r\n        } else if (message.includes('전기차')) {\r\n            if (\"geolocation\" in navigator) {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    const {latitude, longitude} = position.coords;\r\n                    fetchChargingStations(latitude, longitude);\r\n                }, handleGeolocationError);\r\n            } else {\r\n                const botResponse = {id: Date.now(), text: \"Geolocation이 지원되지 않는 브라우저입니다.\", sender: 'bot'};\r\n                setMessages(messages => [...messages, botResponse]);\r\n                speak(botResponse.text);\r\n            }\r\n        }\r\n        if (message.includes('로그인 페이지로 이동하기')) {\r\n            const loginUrl = \"http://localhost:3000/login\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `로그인 페이지로 이동하려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: loginUrl // URL을 메시지 객체에 추가\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"로그인 페이지 링크를 보냈습니다.\");\r\n        }\r\n        if (message.includes('통계 차트 보러가기')) {\r\n            const statsUrl = \"http://localhost:3000/sub\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `통계 차트 페이지로 이동하려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: statsUrl\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"통계 차트 페이지 링크를 보냈습니다.\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleGeolocationError = (error) => {\r\n        let errorMessage = '';\r\n        switch(error.code) {\r\n            case error.PERMISSION_DENIED:\r\n                errorMessage = \"위치 정보 접근이 거부되었습니다.\";\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n                errorMessage = \"위치 정보를 사용할 수 없습니다.\";\r\n                break;\r\n            case error.TIMEOUT:\r\n                errorMessage = \"위치 정보를 가져오는 요청이 시간 초과되었습니다.\";\r\n                break;\r\n            default:\r\n                errorMessage = \"알 수 없는 오류가 발생했습니다.\";\r\n                break;\r\n        }\r\n        const botResponse = {\r\n            id: Date.now(),\r\n            text: errorMessage,\r\n            sender: 'bot'\r\n        };\r\n        setMessages(messages => [...messages, botResponse]);\r\n        speak(botResponse.text);\r\n    };\r\n\r\n    return (\r\n        <div className={\"APP\"}>\r\n            <header>\r\n                <h1>채팅로보트 임니다</h1>\r\n            </header>\r\n            <div className=\"chat-container\">\r\n                {messages.map(msg => (\r\n                    <div key={msg.id} className={`message ${msg.sender}`}>\r\n                        {msg.url ? (\r\n                            <Link to={msg.url}>{msg.text}</Link>\r\n                        ) : (\r\n                            msg.text\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"stations-list\">\r\n                <h2>주유소 정보:</h2>\r\n                <ul>\r\n                    {fuelStations.map(station => (\r\n                        <li key={station.id}>\r\n                            {station.name} - {station.price}원 - 현 위치로부터 {formatFuelStationDistance(station.distance)} 떨어짐\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"stations-list\">\r\n                <h2>전기차 충전소 정보:</h2>\r\n                <ul>\r\n                    {chargingStations.map((station, index) => (\r\n                        <li key={index}>\r\n                            {station['Station Name']} - 현 위치로부터 {formatChargingStationDistance(station.Distance)} 떨어짐\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"user-input\">\r\n                <button onClick={() => handleMessage('내 주변 최저가 주유소 찾기')}>내 주변 최저가 주유소 찾기</button>\r\n                <button onClick={() => handleMessage('내 주변 전기차 충전소 찾기')}>내 주변 전기차 충전소 찾기</button>\r\n                <button onClick={() => handleMessage('로그인 페이지로 이동하기')}>로그인 페이지로 이동하기</button>\r\n                <button onClick={() => handleMessage('통계 차트 보러가기')}>통계 차트 보러가기</button>\r\n                <div className=\"tooltip\">\r\n                    <button className=\"voice-button\" onClick={handleSpeech} disabled={isListening}>\r\n                        <FaMicrophone/>\r\n                        {isListening ? \"듣는 중...\" : \"음성인식\"}\r\n                    </button>\r\n                    <span className=\"tooltiptext\">\r\n                        음성인식 버튼을 누르고 주유소 or 전기차 라고 마이크에 말하시면<br/> 그에 맞는 정보가 표시됩니다.<br/>\r\n                        (주유소는 반경 5KM 내에 있는<br/> 최저가 주유소가,<br/> 전기차는 반경 5KM 내에 있는<br/> 충전소가 표시됩니다.)\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatbot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACZ,MAAMgB,cAAc,GAAG;MACnBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,oBAAoB;MAC1BC,MAAM,EAAE;IACZ,CAAC;IACDZ,WAAW,CAAC,CAACO,cAAc,CAAC,CAAC;IAC7BM,KAAK,CAACN,cAAc,CAACI,IAAI,CAAC;IAE1B,MAAMG,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;IAC/DF,aAAa,CAACG,SAAS,GAAGH,aAAa,CAACI,YAAY;EACxD,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IACZ,MAAMuB,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;IAC/DF,aAAa,CAACG,SAAS,GAAGH,aAAa,CAACI,YAAY;EACxD,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;EAEd,MAAMc,KAAK,GAAIF,IAAI,IAAK;IACpB,MAAMQ,KAAK,GAAGC,MAAM,CAACC,eAAe;IACpC,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACZ,IAAI,CAAC;IACpDW,SAAS,CAACE,IAAI,GAAG,OAAO;IACxBL,KAAK,CAACN,KAAK,CAACS,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,WAAW,GAAG,IAAIN,MAAM,CAACO,uBAAuB,CAAC,CAAC;IACxDD,WAAW,CAACF,IAAI,GAAG,OAAO;IAC1BE,WAAW,CAACE,KAAK,CAAC,CAAC;IAEnBF,WAAW,CAACG,QAAQ,GAAIC,KAAK,IAAK;MAC9B,MAAMC,YAAY,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU;MACnDC,OAAO,CAACC,GAAG,CAAE,eAAcJ,YAAa,EAAC,CAAC;MAC1CK,aAAa,CAACL,YAAY,CAAC;MAC3BzB,cAAc,CAAC,KAAK,CAAC;IACzB,CAAC;IAEDoB,WAAW,CAACW,KAAK,GAAG,MAAM;MACtB/B,cAAc,CAAC,KAAK,CAAC;IACzB,CAAC;IAEDoB,WAAW,CAACY,OAAO,GAAIR,KAAK,IAAK;MAC7BI,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAET,KAAK,CAACS,KAAK,CAAC;MACtDjC,cAAc,CAAC,KAAK,CAAC;IACzB,CAAC;EACL,CAAC;EAED,MAAMkC,qBAAqB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,SAAS,KAAK;IACzD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMnD,KAAK,CAACoD,IAAI,CAAC,gCAAgC,EAAE;QAChEH,QAAQ,EAAEA,QAAQ;QAClBC,SAAS,EAAEA;MACf,CAAC,CAAC;MACFR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEQ,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAC;MAC9D1C,mBAAmB,CAACuC,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAC;MAC3C,MAAMC,cAAc,GAAGJ,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAACE,MAAM,GAAG,CAAC,GAAG;QACvDxC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAG,0CAAyC;QAChDC,MAAM,EAAE;MACZ,CAAC,GAAG;QACAJ,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAG,2BAA0B;QACjCC,MAAM,EAAE;MACZ,CAAC;MACDZ,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEgD,cAAc,CAAC,CAAC;MACtDlC,KAAK,CAACkC,cAAc,CAACpC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAO4B,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,MAAMU,eAAe,GAAG,MAAAA,CAAOR,QAAQ,EAAEC,SAAS,EAAEQ,IAAI,KAAK;IACzD,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMnD,KAAK,CAAC;QACzB2D,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,0CAA0C;QAC/CP,IAAI,EAAE;UAAEJ,QAAQ;UAAEC,SAAS;UAAEQ;QAAK;MACtC,CAAC,CAAC;MAEF,MAAMG,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,MAAM,GAAGF,MAAM,CAACG,eAAe,CAACb,QAAQ,CAACE,IAAI,CAACA,IAAI,EAAE,iBAAiB,CAAC;MAC5E,MAAMY,QAAQ,GAAGF,MAAM,CAACG,oBAAoB,CAAC,KAAK,CAAC;MAEnD,MAAMZ,QAAQ,GAAGa,KAAK,CAACC,IAAI,CAACH,QAAQ,CAAC,CAACI,GAAG,CAACC,IAAI,KAAK;QAC/CtD,EAAE,EAAEsD,IAAI,CAACJ,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACK,WAAW;QACtDC,IAAI,EAAEF,IAAI,CAACJ,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACK,WAAW;QACvDE,KAAK,EAAEH,IAAI,CAACJ,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACK,WAAW;QACxDG,QAAQ,EAAEJ,IAAI,CAACJ,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACK;MACvD,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,UAAU,CAACF,CAAC,CAACH,KAAK,CAAC,GAAGK,UAAU,CAACD,CAAC,CAACJ,KAAK,CAAC,CAAC,CAACM,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MAE1ErE,eAAe,CAAC4C,QAAQ,CAAC;MAEzB,MAAMC,cAAc,GAAGD,QAAQ,CAACE,MAAM,GAAG,CAAC,GAAG;QACzCxC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAG,kCAAiC;QACxCC,MAAM,EAAE;MACZ,CAAC,GAAG;QACAJ,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAG,uBAAsB;QAC7BC,MAAM,EAAE;MACZ,CAAC;MACDZ,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEgD,cAAc,CAAC,CAAC;MACtDlC,KAAK,CAACkC,cAAc,CAACpC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAO4B,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,MAAMiC,yBAAyB,GAAIN,QAAQ,IAAK;IAC5C,MAAMO,gBAAgB,GAAGH,UAAU,CAACJ,QAAQ,CAAC;IAC7C,OAAQ,GAAE,CAACO,gBAAgB,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAE,IAAG;EACtD,CAAC;EAED,MAAMC,6BAA6B,GAAIT,QAAQ,IAAK;IAChD,MAAMO,gBAAgB,GAAGH,UAAU,CAACJ,QAAQ,CAAC;IAC7C,OAAQ,GAAEO,gBAAgB,CAACC,OAAO,CAAC,CAAC,CAAE,IAAG;EAC7C,CAAC;EAED,MAAMtC,aAAa,GAAIwC,OAAO,IAAK;IAC/B5E,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE;MAACS,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEC,IAAI,EAAEiE,OAAO;MAAEhE,MAAM,EAAE;IAAM,CAAC,CAAC,CAAC;IACvFC,KAAK,CAAC+D,OAAO,CAAC;IAEd,IAAIA,OAAO,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;MACzB,IAAI,aAAa,IAAIC,SAAS,EAAE;QAC5BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAQ,IAAI;UACjD,MAAM;YAACxC,QAAQ;YAAEC;UAAS,CAAC,GAAGuC,QAAQ,CAACC,MAAM;UAC7CjC,eAAe,CAACR,QAAQ,EAAEC,SAAS,EAAE,MAAM,CAAC;QAChD,CAAC,EAAEyC,sBAAsB,CAAC;MAC9B,CAAC,MAAM;QACH,MAAMC,WAAW,GAAG;UAAC5E,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEC,IAAI,EAAE,+BAA+B;UAAEC,MAAM,EAAE;QAAK,CAAC;QAC1FZ,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEqF,WAAW,CAAC,CAAC;QACnDvE,KAAK,CAACuE,WAAW,CAACzE,IAAI,CAAC;MAC3B;IACJ,CAAC,MAAM,IAAIiE,OAAO,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;MAChC,IAAI,aAAa,IAAIC,SAAS,EAAE;QAC5BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAQ,IAAI;UACjD,MAAM;YAACxC,QAAQ;YAAEC;UAAS,CAAC,GAAGuC,QAAQ,CAACC,MAAM;UAC7C1C,qBAAqB,CAACC,QAAQ,EAAEC,SAAS,CAAC;QAC9C,CAAC,EAAEyC,sBAAsB,CAAC;MAC9B,CAAC,MAAM;QACH,MAAMC,WAAW,GAAG;UAAC5E,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEC,IAAI,EAAE,+BAA+B;UAAEC,MAAM,EAAE;QAAK,CAAC;QAC1FZ,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEqF,WAAW,CAAC,CAAC;QACnDvE,KAAK,CAACuE,WAAW,CAACzE,IAAI,CAAC;MAC3B;IACJ;IACA,IAAIiE,OAAO,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;MACnC,MAAMQ,QAAQ,GAAG,6BAA6B;MAC9C,MAAMD,WAAW,GAAG;QAChB5E,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAG,2BAA0B;QACjCC,MAAM,EAAE,KAAK;QACbwC,GAAG,EAAEiC,QAAQ,CAAC;MAClB,CAAC;MACDrF,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEqF,WAAW,CAAC,CAAC;MACnDvE,KAAK,CAAC,oBAAoB,CAAC;IAC/B;IACA,IAAI+D,OAAO,CAACC,QAAQ,CAAC,YAAY,CAAC,EAAE;MAChC,MAAMS,QAAQ,GAAG,2BAA2B;MAC5C,MAAMF,WAAW,GAAG;QAChB5E,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAG,6BAA4B;QACnCC,MAAM,EAAE,KAAK;QACbwC,GAAG,EAAEkC;MACT,CAAC;MACDtF,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEqF,WAAW,CAAC,CAAC;MACnDvE,KAAK,CAAC,sBAAsB,CAAC;IACjC;EACJ,CAAC;EAGD,MAAMsE,sBAAsB,GAAI5C,KAAK,IAAK;IACtC,IAAIgD,YAAY,GAAG,EAAE;IACrB,QAAOhD,KAAK,CAACiD,IAAI;MACb,KAAKjD,KAAK,CAACkD,iBAAiB;QACxBF,YAAY,GAAG,oBAAoB;QACnC;MACJ,KAAKhD,KAAK,CAACmD,oBAAoB;QAC3BH,YAAY,GAAG,oBAAoB;QACnC;MACJ,KAAKhD,KAAK,CAACoD,OAAO;QACdJ,YAAY,GAAG,6BAA6B;QAC5C;MACJ;QACIA,YAAY,GAAG,oBAAoB;QACnC;IACR;IACA,MAAMH,WAAW,GAAG;MAChB5E,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE4E,YAAY;MAClB3E,MAAM,EAAE;IACZ,CAAC;IACDZ,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEqF,WAAW,CAAC,CAAC;IACnDvE,KAAK,CAACuE,WAAW,CAACzE,IAAI,CAAC;EAC3B,CAAC;EAED,oBACIf,OAAA;IAAKgG,SAAS,EAAE,KAAM;IAAAC,QAAA,gBAClBjG,OAAA;MAAAiG,QAAA,eACIjG,OAAA;QAAAiG,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACTrG,OAAA;MAAKgG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC1B9F,QAAQ,CAAC8D,GAAG,CAACqC,GAAG,iBACbtG,OAAA;QAAkBgG,SAAS,EAAG,WAAUM,GAAG,CAACtF,MAAO,EAAE;QAAAiF,QAAA,EAChDK,GAAG,CAAC9C,GAAG,gBACJxD,OAAA,CAACF,IAAI;UAACyG,EAAE,EAAED,GAAG,CAAC9C,GAAI;UAAAyC,QAAA,EAAEK,GAAG,CAACvF;QAAI;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,GAEpCC,GAAG,CAACvF;MACP,GALKuF,GAAG,CAAC1F,EAAE;QAAAsF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNrG,OAAA;MAAKgG,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BjG,OAAA;QAAAiG,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBrG,OAAA;QAAAiG,QAAA,EACK5F,YAAY,CAAC4D,GAAG,CAACuC,OAAO,iBACrBxG,OAAA;UAAAiG,QAAA,GACKO,OAAO,CAACpC,IAAI,EAAC,KAAG,EAACoC,OAAO,CAACnC,KAAK,EAAC,iDAAY,EAACO,yBAAyB,CAAC4B,OAAO,CAAClC,QAAQ,CAAC,EAAC,qBAC7F;QAAA,GAFSkC,OAAO,CAAC5F,EAAE;UAAAsF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNrG,OAAA;MAAKgG,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BjG,OAAA;QAAAiG,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBrG,OAAA;QAAAiG,QAAA,EACK1F,gBAAgB,CAAC0D,GAAG,CAAC,CAACuC,OAAO,EAAEC,KAAK,kBACjCzG,OAAA;UAAAiG,QAAA,GACKO,OAAO,CAAC,cAAc,CAAC,EAAC,2CAAW,EAACzB,6BAA6B,CAACyB,OAAO,CAACE,QAAQ,CAAC,EAAC,qBACzF;QAAA,GAFSD,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNrG,OAAA;MAAKgG,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBjG,OAAA;QAAQ2G,OAAO,EAAEA,CAAA,KAAMnE,aAAa,CAAC,iBAAiB,CAAE;QAAAyD,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjFrG,OAAA;QAAQ2G,OAAO,EAAEA,CAAA,KAAMnE,aAAa,CAAC,iBAAiB,CAAE;QAAAyD,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjFrG,OAAA;QAAQ2G,OAAO,EAAEA,CAAA,KAAMnE,aAAa,CAAC,eAAe,CAAE;QAAAyD,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7ErG,OAAA;QAAQ2G,OAAO,EAAEA,CAAA,KAAMnE,aAAa,CAAC,YAAY,CAAE;QAAAyD,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvErG,OAAA;QAAKgG,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpBjG,OAAA;UAAQgG,SAAS,EAAC,cAAc;UAACW,OAAO,EAAE9E,YAAa;UAAC+E,QAAQ,EAAEnG,WAAY;UAAAwF,QAAA,gBAC1EjG,OAAA,CAACH,YAAY;YAAAqG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,EACd5F,WAAW,GAAG,SAAS,GAAG,MAAM;QAAA;UAAAyF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACTrG,OAAA;UAAMgG,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAC,wKACU,eAAAjG,OAAA;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,iFAAiB,eAAArG,OAAA;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,wEAC7C,eAAArG,OAAA;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,iDAAU,eAAArG,OAAA;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,wEAAkB,eAAArG,OAAA;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,8DACjE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACnG,EAAA,CA/PQD,OAAO;AAAA4G,EAAA,GAAP5G,OAAO;AAiQhB,eAAeA,OAAO;AAAC,IAAA4G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}