{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Map,MapMarker,CustomOverlayMap,Circle}from\"react-kakao-maps-sdk\";import{isVisible}from\"@testing-library/user-event/dist/utils\";import styles from'../kako_map/gas_staion.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Popup(_ref){let{station,onClose}=_ref;if(!station)return null;// 선택된 주유소가 없다면 팝업을 렌더링하지 않음\n// 팝업창 위치와 크기 설정\nconst popupStyle={position:'absolute',bottom:'150px',// 마커 위치에 따라 조절 필요\nleft:'50%',transform:'translateX(-50%)',width:'300px',height:'200px',padding:'15px',border:'1px solid #ccc',borderRadius:'5px',backgroundColor:'#fff',fontSize:'12px',textAlign:'center',zIndex:100};// 팝업 내용 반환\nreturn/*#__PURE__*/_jsxs(\"div\",{style:popupStyle,children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'bold',marginTop:'15px',fontSize:'20px',marginLeft:'50px'},children:station.name}),/*#__PURE__*/_jsx(\"img\",{src:\"img/brand-icons/\".concat(station.brand,\".png\"),alt:station.brand,style:{width:'50px',height:'50px'}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'10px 0'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uAC00\\uACA9:\"}),\" \",station.price,\"\\uC6D0\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uAC70\\uB9AC:\"}),\" \",station.distance,\"m\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,style:{width:'100px',cursor:'pointer',backgroundColor:'#f00',color:'#fff',border:'none',borderRadius:'5px',padding:'5px 10px',margin:'5px 0'},children:\"\\uB2EB\\uAE30\"})]});}// 사용자 위치 팝업창 컴포넌트\nfunction UserLocationPopup(_ref2){let{center}=_ref2;const popupStyle={padding:'5px',borderRadius:'1px',height:'20px'};// 사용자 위치에 팝업창 표시\nreturn/*#__PURE__*/_jsx(CustomOverlayMap,{position:center,yAnchor:2.5// 팝업창을 마커 하단에 위치시킴\n,children:/*#__PURE__*/_jsx(\"div\",{style:popupStyle,children:/*#__PURE__*/_jsx(\"h4\",{children:\"\\uB0B4 \\uC704\\uCE58\"})})});}// 줌 레벨 설정 함수\nfunction getZoomLevel(radius){switch(parseInt(radius,10)){case 1:return 5;case 3:return 6;case 5:return 7;default:return 6;}}// 모바일 줌 레벨 설정 함수\nfunction getZoomLevelForMobile(radius){switch(parseInt(radius,10)){case 1:return 4;case 3:return 7;case 5:return 8;default:return 5;}}// 주유소 정보를 지도에 표시하는 컴포넌트\nfunction GasStation(_ref3){let{radius,stations}=_ref3;const[state,setState]=useState({center:{lat:33.450701,lng:126.570667},zoomLevel:getZoomLevel(radius),errMsg:null,isLoading:true,selectedStation:null,isVisible:true// isVisible 상태 추가\n});// 위치 정보 업데이트 함수\nconst updateLocation=()=>{setState(prev=>({...prev,isLoading:true}));// 로딩 상태 활성화\nnavigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;setState(prev=>({...prev,center:{lat:latitude,lng:longitude},isLoading:false}));},err=>{setState(prev=>({...prev,errMsg:err.message,isLoading:false}));},{enableHighAccuracy:true});};// 뷰포트 크기 변경에 따라 줌 레벨 조정\nuseEffect(()=>{const handleResize=()=>{const isMobile=window.matchMedia(\"(max-width: 480px)\").matches;const zoomLevel=isMobile?getZoomLevelForMobile(radius):getZoomLevel(radius);setState(prev=>({...prev,zoomLevel}));};window.addEventListener(\"resize\",handleResize);handleResize();// 초기 실행\nreturn()=>window.removeEventListener(\"resize\",handleResize);},[radius]);useEffect(()=>{updateLocation();},[]);useEffect(()=>{const newZoomLevel=getZoomLevel(radius);console.log('변경되는 줌 레벨:',newZoomLevel);setState(prev=>({...prev,zoomLevel:newZoomLevel}));},[radius]);// 정보창 닫기 함수\nconst closeInfoWindow=()=>{setState(prev=>({...prev,selectedStation:null}));};// 마커 클릭 이벤트 핸들러\nconst onMarkerClick=station=>{setState(prev=>({...prev,selectedStation:station}));};// 반경 내의 주유소만 필터링\nconst filteredStations=stations.filter(station=>station.distance<=radius*1000);return/*#__PURE__*/_jsxs(\"div\",{className:styles.mapContainer,children:[/*#__PURE__*/_jsxs(Map,{center:state.center,style:{width:\"100%\",height:\"100%\"},level:state.zoomLevel,children:[/*#__PURE__*/_jsx(Circle,{center:state.center,radius:parseInt(radius)*1000// km to meters\n,strokeWeight:2// 선의 두께\n,strokeColor:'#75B8FA'// 선의 색깔\n,strokeOpacity:state.isVisible?0.7:0// 선의 불투명도\n,fillColor:'#e5effc'// 채우기 색깔\n,fillOpacity:state.isVisible?0.5:0// 채우기 불투명도\n}),/*#__PURE__*/_jsx(MapMarker,{position:state.center,image:{src:\"img/my_location.png\",// 사용자 위치를 나타내는 아이콘\nsize:{width:24,height:35},options:{className:'marker-animation'}// 애니메이션 클래스 적용\n}}),/*#__PURE__*/_jsx(UserLocationPopup,{center:state.center}),!state.isLoading&&filteredStations.map(station=>{console.log(\"마커 위치:\",station.latitude,station.longitude);// 로그 추가\nreturn/*#__PURE__*/_jsx(MapMarker,{position:{lat:station.latitude,lng:station.longitude},image:{src:\"img/fuel.png\",// 실제 마커 이미지 경로로 대체\nsize:{width:24,height:35}},onClick:()=>onMarkerClick(station)},station.name);})]},state.zoomLevel),state.selectedStation&&/*#__PURE__*/_jsx(Popup,{station:state.selectedStation,onClose:closeInfoWindow})]});}export default GasStation;","map":{"version":3,"names":["React","useState","useEffect","axios","Map","MapMarker","CustomOverlayMap","Circle","isVisible","styles","jsx","_jsx","jsxs","_jsxs","Popup","_ref","station","onClose","popupStyle","position","bottom","left","transform","width","height","padding","border","borderRadius","backgroundColor","fontSize","textAlign","zIndex","style","children","display","justifyContent","marginBottom","fontWeight","marginTop","marginLeft","name","src","concat","brand","alt","margin","price","distance","onClick","cursor","color","UserLocationPopup","_ref2","center","yAnchor","getZoomLevel","radius","parseInt","getZoomLevelForMobile","GasStation","_ref3","stations","state","setState","lat","lng","zoomLevel","errMsg","isLoading","selectedStation","updateLocation","prev","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","err","message","enableHighAccuracy","handleResize","isMobile","window","matchMedia","matches","addEventListener","removeEventListener","newZoomLevel","console","log","closeInfoWindow","onMarkerClick","filteredStations","filter","className","mapContainer","level","strokeWeight","strokeColor","strokeOpacity","fillColor","fillOpacity","image","size","options","map"],"sources":["C:/UHB/rest_area/src/kako_map/gas_station.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Map, MapMarker, CustomOverlayMap,Circle  } from \"react-kakao-maps-sdk\";\r\nimport {isVisible} from \"@testing-library/user-event/dist/utils\";\r\nimport styles from '../kako_map/gas_staion.module.css'\r\n\r\n\r\nfunction Popup({ station, onClose }) {\r\n    if (!station) return null; // 선택된 주유소가 없다면 팝업을 렌더링하지 않음\r\n\r\n    // 팝업창 위치와 크기 설정\r\n    const popupStyle = {\r\n        position: 'absolute',\r\n        bottom: '150px', // 마커 위치에 따라 조절 필요\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        width: '300px',\r\n        height:'200px',\r\n        padding: '15px',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '5px',\r\n        backgroundColor: '#fff',\r\n        fontSize: '12px',\r\n        textAlign: 'center',\r\n        zIndex: 100,\r\n    };\r\n\r\n    // 팝업 내용 반환\r\n    return (\r\n        <div style={popupStyle}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\r\n                <span style={{ fontWeight: 'bold', marginTop: '15px', fontSize: '20px', marginLeft: '50px' }}>{station.name}</span>\r\n                <img\r\n                    src={`img/brand-icons/${station.brand}.png`}\r\n                    alt={station.brand}\r\n                    style={{ width: '50px', height: '50px' }}\r\n                />\r\n            </div>\r\n            <div style={{ margin: '10px 0' }}>\r\n                <p><strong>가격:</strong> {station.price}원</p>\r\n                <p><strong>거리:</strong> {station.distance}m</p>\r\n            </div>\r\n            <button onClick={onClose} style={{\r\n                width: '100px',\r\n                cursor: 'pointer',\r\n                backgroundColor: '#f00',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '5px',\r\n                padding: '5px 10px',\r\n                margin: '5px 0'\r\n            }}>\r\n                닫기\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n// 사용자 위치 팝업창 컴포넌트\r\nfunction UserLocationPopup({ center }) {\r\n    const popupStyle = {\r\n        padding: '5px',\r\n        borderRadius: '1px',\r\n        height: '20px',\r\n    };\r\n\r\n    // 사용자 위치에 팝업창 표시\r\n    return (\r\n        <CustomOverlayMap\r\n            position={center}\r\n            yAnchor={2.5} // 팝업창을 마커 하단에 위치시킴\r\n        >\r\n            <div style={popupStyle}>\r\n                <h4>내 위치</h4>\r\n            </div>\r\n        </CustomOverlayMap>\r\n    );\r\n}\r\n\r\n// 줌 레벨 설정 함수\r\nfunction getZoomLevel(radius) {\r\n    switch (parseInt(radius, 10)) {\r\n        case 1: return 5;\r\n        case 3: return 6;\r\n        case 5: return 7;\r\n        default: return 6;\r\n    }\r\n}\r\n\r\n\r\n// 모바일 줌 레벨 설정 함수\r\nfunction getZoomLevelForMobile(radius) {\r\n    switch (parseInt(radius, 10)) {\r\n        case 1: return 4;\r\n        case 3: return 7;\r\n        case 5: return 8;\r\n        default: return 5;\r\n    }\r\n}\r\n\r\n// 주유소 정보를 지도에 표시하는 컴포넌트\r\nfunction GasStation({ radius, stations }) {\r\n    const [state, setState] = useState({\r\n        center: { lat: 33.450701, lng: 126.570667 },\r\n        zoomLevel: getZoomLevel(radius),\r\n        errMsg: null,\r\n        isLoading: true,\r\n        selectedStation: null,\r\n        isVisible: true  // isVisible 상태 추가\r\n    });\r\n\r\n    // 위치 정보 업데이트 함수\r\n    const updateLocation = () => {\r\n        setState(prev => ({ ...prev, isLoading: true })); // 로딩 상태 활성화\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const { latitude, longitude } = position.coords;\r\n            setState(prev => ({\r\n                ...prev,\r\n                center: { lat: latitude, lng: longitude },\r\n                isLoading: false\r\n            }));\r\n        }, err => {\r\n            setState(prev => ({ ...prev, errMsg: err.message, isLoading: false }));\r\n        }, {\r\n            enableHighAccuracy: true\r\n        });\r\n    };\r\n\r\n    // 뷰포트 크기 변경에 따라 줌 레벨 조정\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const isMobile = window.matchMedia(\"(max-width: 480px)\").matches;\r\n            const zoomLevel = isMobile ? getZoomLevelForMobile(radius) : getZoomLevel(radius);\r\n            setState(prev => ({ ...prev, zoomLevel }));\r\n        };\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        handleResize(); // 초기 실행\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, [radius]);\r\n\r\n\r\n    useEffect(() => {\r\n        updateLocation();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const newZoomLevel = getZoomLevel(radius);\r\n        console.log('변경되는 줌 레벨:', newZoomLevel);\r\n        setState(prev => ({\r\n            ...prev,\r\n            zoomLevel: newZoomLevel\r\n        }));\r\n    }, [radius]);\r\n\r\n    // 정보창 닫기 함수\r\n    const closeInfoWindow = () => {\r\n        setState(prev => ({ ...prev, selectedStation: null }));\r\n    };\r\n\r\n    // 마커 클릭 이벤트 핸들러\r\n    const onMarkerClick = (station) => {\r\n        setState(prev => ({ ...prev, selectedStation: station }));\r\n    };\r\n\r\n    // 반경 내의 주유소만 필터링\r\n    const filteredStations = stations.filter(station => station.distance <= radius * 1000);\r\n\r\n\r\n    return (\r\n        <div className={styles.mapContainer}>\r\n            <Map center={state.center} style={{ width: \"100%\", height: \"100%\" }}\r\n                 level={state.zoomLevel}\r\n                 key={state.zoomLevel}>\r\n                <Circle\r\n                    center={state.center}\r\n                    radius={parseInt(radius) * 1000} // km to meters\r\n                    strokeWeight={2} // 선의 두께\r\n                    strokeColor={'#75B8FA'} // 선의 색깔\r\n                    strokeOpacity={state.isVisible ? 0.7 : 0} // 선의 불투명도\r\n                    fillColor={'#e5effc'} // 채우기 색깔\r\n                    fillOpacity={state.isVisible ? 0.5 : 0} // 채우기 불투명도\r\n                />\r\n                <MapMarker position={state.center}\r\n                           image={{\r\n                               src:\"img/my_location.png\", // 사용자 위치를 나타내는 아이콘\r\n                               size: {width: 24, height: 35},\r\n                               options: { className: 'marker-animation' } // 애니메이션 클래스 적용\r\n                           }}\r\n                />\r\n                <UserLocationPopup center={state.center} />\r\n                {!state.isLoading && filteredStations.map(station => {\r\n                    console.log(\"마커 위치:\", station.latitude, station.longitude); // 로그 추가\r\n                    return (\r\n                        <MapMarker\r\n                            key={station.name}\r\n                            position={{ lat: station.latitude, lng: station.longitude }}\r\n                            image={{\r\n                                src: \"img/fuel.png\", // 실제 마커 이미지 경로로 대체\r\n                                size: { width: 24, height: 35 },\r\n                            }}\r\n                            onClick={() => onMarkerClick(station)}\r\n                        />\r\n                    );\r\n                })}\r\n\r\n            </Map>\r\n            {state.selectedStation && (\r\n                <Popup station={state.selectedStation} onClose={closeInfoWindow} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GasStation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}