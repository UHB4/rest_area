{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\board\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport './login.css'; // CSS 파일을 import 합니다.\nimport axios from 'axios';\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n// function Login() {\n//     const handleSubmit = (event) => {\n//         event.preventDefault(); // 폼 기본 동작 방지\n//         // 로그인 처리 로직 작성\n//     };\n//     return (\n//         <div>\n//             <header>\n//                 {/*<img src=\"images/header.png\" alt=\"Header Image\" />*/}\n//             </header>\n//             <form id=\"loginForm\" onSubmit={handleSubmit}>\n//                 <label htmlFor=\"username\">Username:</label>\n//                 <input type=\"text\" id=\"username\" name=\"username\" required />\n//                 <label htmlFor=\"password\">Password:</label>\n//                 <input type=\"password\" id=\"password\" name=\"password\" required />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//         </div>\n//     );\n// }\n// export default Login;\n////////////////////////////////////////////////////////////////////////////////////////////////////\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault(); // 폼 기본 동작 방지\n\n    try {\n      // Axios를 사용하여 POST 요청을 보냅니다.\n      const response = await axios.post('http://localhost:3001/login1111', {\n        username: username,\n        password: password\n      }).then(res => {\n        //post 요청을 보낸후에 then 을 통해서 서버에서 res로 보낸 데이터를 받아올수있습니다.\n        console.log(res);\n        // console.log('로그인 결과 : '+res.data.isLoginSucceed)\n        //원빈님 방식으로\n        console.log('로그인 성공결과 : ' + res.data.loggedIn);\n        console.log('로그인 결과 : ' + res.data.loginId);\n        if (res.data.loggedIn) {\n          //현재 컴퍼넌트 안보이게 state 조정\n          props.setIsLoggedIn(true);\n          props.setLoginId(res.data.loginId);\n          props.setUserName(res.data.userName);\n          props.setUserRealName(res.data.userRealName);\n        } else {\n          // 로그인 실패사유 보이겠금\n        }\n      });\n\n      // 서버로부터의 응답 처리\n\n      console.log('console위치 catch 전 : ' + username);\n    } catch (error) {\n      // 오류 처리\n      console.error('오류 발생:', error);\n      console.log('console위치  catch 후 : ' + username);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.isLoggedIn == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.\", props.userRealName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","props","_s","username","setUsername","password","setPassword","handleSubmit","event","preventDefault","response","post","then","res","console","log","data","loggedIn","loginId","setIsLoggedIn","setLoginId","setUserName","userName","setUserRealName","userRealName","error","children","isLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","type","name","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/board/Login.js"],"sourcesContent":["import {React,useState} from 'react';\r\nimport './login.css'; // CSS 파일을 import 합니다.\r\nimport axios from 'axios'\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// function Login() {\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault(); // 폼 기본 동작 방지\r\n//         // 로그인 처리 로직 작성\r\n//     };\r\n//     return (\r\n//         <div>\r\n//             <header>\r\n//                 {/*<img src=\"images/header.png\" alt=\"Header Image\" />*/}\r\n//             </header>\r\n//             <form id=\"loginForm\" onSubmit={handleSubmit}>\r\n//                 <label htmlFor=\"username\">Username:</label>\r\n//                 <input type=\"text\" id=\"username\" name=\"username\" required />\r\n//                 <label htmlFor=\"password\">Password:</label>\r\n//                 <input type=\"password\" id=\"password\" name=\"password\" required />\r\n//                 <button type=\"submit\">Login</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n// export default Login;\r\n////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction Login(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault(); // 폼 기본 동작 방지\r\n\r\n        try {\r\n            // Axios를 사용하여 POST 요청을 보냅니다.\r\n            const response = await axios.post('http://localhost:3001/login1111', {\r\n                username: username,\r\n                password: password\r\n            }).then(res=>{\r\n                //post 요청을 보낸후에 then 을 통해서 서버에서 res로 보낸 데이터를 받아올수있습니다.\r\n                console.log(res)\r\n                // console.log('로그인 결과 : '+res.data.isLoginSucceed)\r\n                //원빈님 방식으로\r\n                console.log('로그인 성공결과 : '+res.data.loggedIn)\r\n                console.log('로그인 결과 : '+res.data.loginId)\r\n\r\n                if (res.data.loggedIn){\r\n                    //현재 컴퍼넌트 안보이게 state 조정\r\n                    props.setIsLoggedIn(true);\r\n                    props.setLoginId(res.data.loginId);\r\n                    props.setUserName(res.data.userName);\r\n                    props.setUserRealName(res.data.userRealName);\r\n\r\n                }else {\r\n                    // 로그인 실패사유 보이겠금\r\n                }\r\n            });\r\n\r\n            // 서버로부터의 응답 처리\r\n\r\n            console.log('console위치 catch 전 : '+ username)\r\n\r\n        } catch (error) {\r\n            // 오류 처리\r\n            console.error('오류 발생:', error);\r\n            console.log('console위치  catch 후 : '+ username)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/*<hr/>*/}\r\n            {props.isLoggedIn == true ? <div>반갑습니다.{props.userRealName}</div> :\r\n\r\n                <form id=\"loginForm\">\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button type=\"button\" onClick={handleSubmit}>Login</button>\r\n                </form>\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}