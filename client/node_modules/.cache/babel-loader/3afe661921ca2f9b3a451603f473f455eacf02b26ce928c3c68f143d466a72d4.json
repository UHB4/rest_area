{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\board\\\\BoardMain.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom'; // React Router가 필요합니다.\nimport axios from \"axios\";\nimport styles from './Board.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  userRealName,\n  posts,\n  startPage,\n  currentPage,\n  endPage,\n  totalPages,\n  MAX_PAGE_LIMIT\n}) {\n  _s();\n  const [sortByViews, setSortByViews] = useState(false);\n  const navigate = useNavigate();\n  // let respones;\n  // let posts;\n  // let[respones,setRespones] =useState([])\n  const [responseData, setResponseData] = useState({\n    currentPage: 0,\n    posts: [],\n    endPage: 0,\n    maxPageNumber: 0,\n    startPage: 0,\n    totalPages: 0\n\n    // other properties 초기값 설정\n  });\n\n  ///////////////////////////////\n  ///////////////////////////////////\n  const {\n    page\n  } = useParams();\n  ///////////////////////////////////////////\n  //////////////////////////////////////\n\n  const maxPageNumber = 5;\n\n  ////////\n  useEffect(() => {\n    // const urlParams  = new URLSearchParams(window.location.search);\n    // const reqData ={\n    //     params: {\n    //         searchType : urlParams.get(\"searchType\"),\n    //         searchInput : urlParams.get(\"searchInput\")\n    //     }\n    // }\n\n    // console.log(reqData)\n    // axios.get('http://localhost:3001/boardMain', reqData)\n    axios.get('http://localhost:3001/boardMain').then(res => {\n      console.log('데이터확인 : ' + res.data.currentPage);\n      console.log(res);\n      console.log(res.data);\n      setResponseData(res.data);\n      // respones = res.data.posts\n      // console.log(respones)\n    });\n  }, []);\n  ////////\n\n  ///////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/boardMain?page=${page}`).then(response => {\n      setResponseData({\n        ...responseData,\n        posts: response.data.posts,\n        currentPage: parseInt(page),\n        totalPages: response.data.totalPages,\n        startPage: response.data.startPage,\n        endPage: response.data.endPage\n      });\n    }).catch(error => {\n      console.log('Error fetching data:', error);\n    });\n  }, [page]);\n\n  /////////////////////////////////////////////\n  //////////////  검색내용 보내는코드 gpt한테 받은거///////////////////////////////\n  useEffect(() => {\n    axios.get('http://localhost:3001/boardMain', {\n      params: {\n        param1: 'searchType',\n        param2: 'searchInput'\n        // 필요한 만큼 쿼리 파라미터를 추가할 수 있습니다.\n      }\n    }).then(res => {\n      console.log('데이터확인 : ' + res.data.currentPage);\n      console.log(res);\n      console.log(res.data);\n      setResponseData(res.data);\n    }).catch(error => {\n      console.error('에러 발생: ', error);\n    });\n  }, []);\n\n  /////////////////////////////////////////////\n  /////////////////////////////////////////////\n\n  // useEffect(() => {\n  //     const queryParams = new URLSearchParams(window.location.search);\n  //     const sortParam = queryParams.get('sort');\n  //\n  //     if (sortParam === 'views_desc') {\n  //         setSortByViews(true);\n  //     }\n  // }, []);\n\n  // const toggleSort = () => {\n  //     setSortByViews(!sortByViews);\n  //     const sortParam = sortByViews ? 'views_desc' : '';\n  //     window.location.href = `/boardMain?sort=${sortParam}`;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9AC\\uBDF0 \\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '10px',\n        right: '10px',\n        color: \"white\"\n      },\n      children: userRealName ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"button\",\n          style: {\n            color: \"white\"\n          },\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this) : ''\n      // <a href=\"/\" className=\"button\">로그인</a>\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC791\\uC131\\uC790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC791\\uC131\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC870\\uD68C\\uC218 \\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: responseData.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/detailPost/${post[0]}`,\n              className: styles.postLink,\n              children: [post[1], \" [\", post[6], \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: userRealName && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create\",\n        className: \"button\",\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagingContainer,\n      children: [responseData.currentPage > 1 && /*#__PURE__*/_jsxDEV(Link, {\n        to: `/boardMain/${responseData.currentPage - 1}`,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this) // 이전 페이지 링크 수정\n      , Array.from({\n        length: responseData.endPage - responseData.startPage + 1\n      }, (_, i) => responseData.startPage + i).map(page => page === responseData.currentPage ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"current-page\",\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }, this) // 현재 페이지는 링크 없음\n      : /*#__PURE__*/_jsxDEV(Link, {\n        to: `/boardMain/${page}`,\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }, this) // 페이지 번호를 경로의 일부로 사용\n      ), responseData.totalPages - responseData.currentPage + 1 > responseData.maxPageNumber && /*#__PURE__*/_jsxDEV(Link, {\n        to: `/boardMain/${responseData.currentPage + 1}`,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this) // 다음 페이지 링크 수정\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n_s(Board, \"RmCw6c0AUFgZkfMDLkDAqwZh8U0=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","axios","styles","jsxDEV","_jsxDEV","Board","userRealName","posts","startPage","currentPage","endPage","totalPages","MAX_PAGE_LIMIT","_s","sortByViews","setSortByViews","navigate","responseData","setResponseData","maxPageNumber","page","get","then","res","console","log","data","response","parseInt","catch","error","params","param1","param2","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","right","color","href","className","map","post","index","to","postLink","buttonContainer","pagingContainer","Array","from","length","_","i","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/board/BoardMain.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useParams, Link, useNavigate} from 'react-router-dom'; // React Router가 필요합니다.\r\nimport axios from \"axios\";\r\nimport styles from './Board.module.css'\r\nfunction Board({ userRealName, posts, startPage, currentPage, endPage, totalPages, MAX_PAGE_LIMIT }) {\r\n    const [sortByViews, setSortByViews] = useState(false);\r\n    const navigate = useNavigate()\r\n    // let respones;\r\n    // let posts;\r\n    // let[respones,setRespones] =useState([])\r\n    const [responseData, setResponseData] = useState({\r\n        currentPage: 0,\r\n        posts: [],\r\n        endPage: 0,\r\n        maxPageNumber: 0,\r\n        startPage: 0,\r\n        totalPages:0\r\n\r\n        // other properties 초기값 설정\r\n    });\r\n\r\n    ///////////////////////////////\r\n    ///////////////////////////////////\r\n    const { page } = useParams();\r\n///////////////////////////////////////////\r\n    //////////////////////////////////////\r\n\r\n    const maxPageNumber = 5;\r\n\r\n    ////////\r\n    useEffect(()=>{\r\n        // const urlParams  = new URLSearchParams(window.location.search);\r\n        // const reqData ={\r\n        //     params: {\r\n        //         searchType : urlParams.get(\"searchType\"),\r\n        //         searchInput : urlParams.get(\"searchInput\")\r\n        //     }\r\n        // }\r\n\r\n        // console.log(reqData)\r\n        // axios.get('http://localhost:3001/boardMain', reqData)\r\n        axios.get('http://localhost:3001/boardMain')\r\n            .then(res=>{\r\n                console.log('데이터확인 : '+ res.data.currentPage)\r\n                console.log(res)\r\n                console.log(res.data)\r\n                setResponseData(res.data)\r\n                // respones = res.data.posts\r\n                // console.log(respones)\r\n            })\r\n    },[])\r\n    ////////\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/boardMain?page=${page}` )\r\n            .then(response => {\r\n                setResponseData({\r\n                    ...responseData,\r\n                    posts: response.data.posts,\r\n                    currentPage: parseInt(page),\r\n                    totalPages: response.data.totalPages,\r\n                    startPage: response.data.startPage,\r\n                    endPage: response.data.endPage\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching data:', error);\r\n            });\r\n    }, [page]);\r\n\r\n\r\n/////////////////////////////////////////////\r\n//////////////  검색내용 보내는코드 gpt한테 받은거///////////////////////////////\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/boardMain', {\r\n            params: {\r\n                param1: 'searchType',\r\n                param2: 'searchInput',\r\n                // 필요한 만큼 쿼리 파라미터를 추가할 수 있습니다.\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log('데이터확인 : ' + res.data.currentPage);\r\n                console.log(res);\r\n                console.log(res.data);\r\n                setResponseData(res.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('에러 발생: ', error);\r\n            });\r\n    },[])\r\n\r\n\r\n\r\n/////////////////////////////////////////////\r\n/////////////////////////////////////////////\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const queryParams = new URLSearchParams(window.location.search);\r\n    //     const sortParam = queryParams.get('sort');\r\n    //\r\n    //     if (sortParam === 'views_desc') {\r\n    //         setSortByViews(true);\r\n    //     }\r\n    // }, []);\r\n\r\n    // const toggleSort = () => {\r\n    //     setSortByViews(!sortByViews);\r\n    //     const sortParam = sortByViews ? 'views_desc' : '';\r\n    //     window.location.href = `/boardMain?sort=${sortParam}`;\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h1>리뷰 게시판</h1>\r\n            <div style={{position: 'absolute', top: '10px', right: '10px',color:\"white\"}}>\r\n                {userRealName ? (\r\n                    <p>\r\n                        {/*{userRealName}님 환영합니다. &nbsp;&nbsp;*/}\r\n                        <a href=\"/\" className=\"button\"  style={{color:\"white\"}}>로그아웃</a>\r\n                        {/*a 태그로 이동하면 seasion끊기는거 이용*/}\r\n                    </p>\r\n                ) : (''\r\n                    // <a href=\"/\" className=\"button\">로그인</a>\r\n                )}\r\n            </div>\r\n\r\n\r\n            {/*///////////////////////////////*/}\r\n\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>제목</th>\r\n                    <th>작성자</th>\r\n                    <th>작성일</th>\r\n                    {/*<th onClick={toggleSort} onMouseOver={(e) => e.target.style.textDecoration = 'underline'}*/}\r\n                    {/*    onMouseOut={(e) => e.target.style.textDecoration = 'none'}>조회수 ▼*/}\r\n                    {/*</th>*/}\r\n                    <th>조회수 ▼</th>\r\n                    {/*위에꺼를  단순하게 한거 정렬 안되게*/}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {responseData.posts.map((post, index) => (\r\n                    <tr key={index}>\r\n                        <td><Link to={`/detailPost/${post[0]}`} className={styles.postLink}>{post[1]} [{post[6]}]</Link></td>\r\n                        {/*/////////////////////////////////////////////*/}\r\n                        {/*<td className={styles.postLink}>{post[1]} [{post[6]}]</td>*/}\r\n                        {/*////////////////////////////*/}\r\n                        {/*<td><a onClick={()=>{*/}\r\n                        {/*    navigate(`/detailPost/${post[0]}`)*/}\r\n                        {/*}}>이동</a> </td>*/}\r\n                        <td>{post[2]}</td>\r\n                        <td>{post[3]}</td>\r\n                        <td>{post[4]}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/*////////////////////////////////*/}\r\n\r\n\r\n            <div className={styles.buttonContainer}>\r\n                {userRealName && <Link to=\"/create\" className=\"button\">글쓰기</Link>}\r\n            </div>\r\n\r\n            {/*//////////////////////////////////////*/}\r\n            {/*<div className={styles.pagingContainer}>*/}\r\n            {/*    {responseData.currentPage > 1 && <Link to={`/boardMain?page=${responseData.currentPage - 1}`}>이전</Link>}*/}\r\n            {/*    {Array.from({ length: responseData.endPage - responseData.startPage + 1 }, (_, i) => responseData.startPage + i).map((page, index) => (*/}\r\n            {/*        <React.Fragment key={index}>*/}\r\n            {/*            {page === responseData.currentPage ? (*/}\r\n            {/*                <span className=\"current-page\">{page}</span>*/}\r\n            {/*            ) : (*/}\r\n            {/*                <Link to={`/boardMain?page=${page}`}>{page}</Link>*/}\r\n            {/*            )}*/}\r\n            {/*        </React.Fragment>*/}\r\n            {/*    ))}*/}\r\n            {/*    {(responseData.totalPages - responseData.currentPage + 1) > MAX_PAGE_LIMIT && <Link to={`/boardMain?page=${responseData.currentPage + 1}`}>다음</Link>}*/}\r\n            {/*</div>*/}\r\n\r\n\r\n            {/*//////////////// /boardMain/?page=  ////////////////////////////////////*/}\r\n            {/*<div className={styles.pagingContainer}>*/}\r\n            {/*    {responseData.currentPage > 1 && (*/}\r\n            {/*        <Link to={`/boardMain/?page=${responseData.currentPage - 1}`}>이전</Link>*/}\r\n            {/*    )}*/}\r\n\r\n            {/*    {Array.from({length: responseData.endPage - responseData.startPage + 1}, (_, i) => responseData.startPage + i).map((page) => (*/}\r\n            {/*        page === responseData.currentPage ? (*/}\r\n            {/*            <span className=\"current-page\" key={page}>{page}</span> //페이지 번호가 현재 페이지면 링크안달고*/}\r\n            {/*        ) : (*/}\r\n            {/*            <Link to={`/boardMain/?page=${page}`} key={page}>{page}</Link>  //페이지 번호가 현재 페이지가 아니면 링크담*/}\r\n            {/*        )*/}\r\n            {/*    ))}*/}\r\n\r\n            {/*    {responseData.totalPages - responseData.currentPage + 1 > responseData.maxPageNumber && (*/}\r\n            {/*        <Link to={`/boardMain/?page=${responseData.currentPage + 1}`}>다음</Link>*/}\r\n            {/*    )}*/}\r\n            {/*</div>*/}\r\n\r\n            {/*////////////////  Link to={`/boardMain/${page}  ////////////////////////////////////////////////////////////*/}\r\n\r\n            <div className={styles.pagingContainer}>\r\n                {responseData.currentPage > 1 && (\r\n                    <Link to={`/boardMain/${responseData.currentPage - 1}`}>이전</Link> // 이전 페이지 링크 수정\r\n                )}\r\n\r\n                {Array.from({length: responseData.endPage - responseData.startPage + 1}, (_, i) => responseData.startPage + i).map((page) => (\r\n                    page === responseData.currentPage ? (\r\n                        <span className=\"current-page\" key={page}>{page}</span> // 현재 페이지는 링크 없음\r\n                    ) : (\r\n                        <Link to={`/boardMain/${page}`} key={page}>{page}</Link> // 페이지 번호를 경로의 일부로 사용\r\n                    )\r\n                ))}\r\n\r\n                {responseData.totalPages - responseData.currentPage + 1 > responseData.maxPageNumber && (\r\n                    <Link to={`/boardMain/${responseData.currentPage + 1}`}>다음</Link> // 다음 페이지 링크 수정\r\n                )}\r\n            </div>\r\n\r\n\r\n            {/*///////////////////////////////////////////////////////*/}\r\n\r\n\r\n            {/*<div id={styles.searchContainer}>*/}\r\n            {/*    <form action=\"/boardMain\" method=\"GET\">*/}\r\n            {/*    /!*    <form action=\"http://localhost:3001/boardMain\" method=\"post\">*!/*/}\r\n            {/*            <label htmlFor=\"searchType\">검색 조건:</label>*/}\r\n            {/*            <select id=\"searchType\" name=\"searchType\">*/}\r\n            {/*                <option value=\"title\" selected>제목</option>*/}\r\n            {/*                <option value=\"content\">게시글 내용</option>*/}\r\n            {/*                <option value=\"author\">글 작성자</option>*/}\r\n            {/*            </select>*/}\r\n            {/*            <input type=\"text\" id=\"searchInput\" name=\"searchInput\"/>*/}\r\n            {/*            <button type=\"submit\">검색</button>*/}\r\n            {/*        </form>*/}\r\n            {/*</div>*/}\r\n            {/*/////////////////////////////////////*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}