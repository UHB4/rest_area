{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./chat.css';import{FaMicrophone}from'react-icons/fa';import{Link}from'react-router-dom';import Stationinfo from'./Stationinfo';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Chatbot(){const[messages,setMessages]=useState([]);const[fuelStations]=useState([]);const[chargingStations]=useState([]);const[isListening,setIsListening]=useState(false);const Chat=_ref=>{let{stations}=_ref;return/*#__PURE__*/_jsx(\"div\",{children:stations.map(station=>/*#__PURE__*/_jsx(Stationinfo,{name:station.name,address:station.address,distance:station.distance},station.id))});};useEffect(()=>{const initialMessage={id:Date.now(),text:'안녕하세요! 여러분 주변에 최저가 주유소, 전기차 충전소 위치 등을 알려주고, 고속도로의 휴게소 정보를 알려드립니다:)',sender:'bot'};setMessages([initialMessage]);speak(initialMessage.text);const chatContainer=document.querySelector('.chat-container');chatContainer.scrollTop=chatContainer.scrollHeight;},[]);useEffect(()=>{const chatContainer=document.querySelector('.chat-container');chatContainer.scrollTop=chatContainer.scrollHeight;},[messages]);const speak=text=>{const synth=window.speechSynthesis;const utterance=new SpeechSynthesisUtterance(text);utterance.lang='ko-KR';synth.speak(utterance);};const handleSpeech=()=>{const recognition=new window.webkitSpeechRecognition();recognition.lang='ko-KR';recognition.start();recognition.onresult=event=>{const speechResult=event.results[0][0].transcript;console.log(\"Recognized: \".concat(speechResult));handleMessage(speechResult);setIsListening(false);};recognition.onend=()=>{setIsListening(false);};recognition.onerror=event=>{console.error(\"Speech recognition error\",event.error);setIsListening(false);};};const fetchChargingStations=async(latitude,longitude)=>{try{const response=await axios.post('http://localhost:5000/location',{latitude:latitude,longitude:longitude});const formattedStations=response.data.stations.map(station=>\"\".concat(station['Station Name'],\" - \\uD604 \\uC704\\uCE58\\uB85C\\uBD80\\uD130 \").concat(formatChargingStationDistance(station.Distance),\" \\uB5A8\\uC5B4\\uC9D0\")).join('\\n');const resultsMessage={id:Date.now(),text:\"\\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C \\uC815\\uBCF4:\\n\".concat(formattedStations),sender:'bot'};setMessages(messages=>[...messages,resultsMessage]);speak(resultsMessage.text);}catch(error){console.error(\"Error fetching stations:\",error);}};const fetchFuelPrices=async(latitude,longitude,type)=>{try{const response=await axios({method:'post',url:'http://localhost:5000/get_gas_stations22',data:{latitude,longitude,type}});const parser=new DOMParser();const xmlDoc=parser.parseFromString(response.data.data,\"application/xml\");const oilNodes=xmlDoc.getElementsByTagName(\"OIL\");const stations=Array.from(oilNodes).map(node=>({id:node.getElementsByTagName(\"UNI_ID\")[0].textContent,name:node.getElementsByTagName(\"OS_NM\")[0].textContent,price:node.getElementsByTagName(\"PRICE\")[0].textContent,distance:node.getElementsByTagName(\"DISTANCE\")[0].textContent})).sort((a,b)=>parseFloat(a.price)-parseFloat(b.price)).slice(0,10);const formattedStations=stations.map(station=>\"\".concat(station.name,\" - \").concat(station.price,\"\\uC6D0 - \\uD604 \\uC704\\uCE58\\uB85C\\uBD80\\uD130 \").concat(formatFuelStationDistance(station.distance),\" \\uB5A8\\uC5B4\\uC9D0\")).join('\\n');const resultsMessage={id:Date.now(),text:\"\\uC8FC\\uC720\\uC18C \\uC815\\uBCF4:\\n\".concat(formattedStations),sender:'bot'};setMessages(messages=>[...messages,resultsMessage]);speak(resultsMessage.text);}catch(error){console.error(\"Error fetching stations:\",error);}};const formatFuelStationDistance=distance=>{const distanceInMeters=parseFloat(distance);return\"\".concat((distanceInMeters/1000).toFixed(2),\"km\");};const formatChargingStationDistance=distance=>{const distanceInMeters=parseFloat(distance);return\"\".concat(distanceInMeters.toFixed(2),\"km\");};const handleMessage=message=>{setMessages(messages=>[...messages,{id:Date.now(),text:message,sender:'user'}]);speak(message);if(message.includes('주유소')){if(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;fetchFuelPrices(latitude,longitude,'fuel');},handleGeolocationError);}else{const botResponse={id:Date.now(),text:\"Geolocation이 지원되지 않는 브라우저입니다.\",sender:'bot'};setMessages(messages=>[...messages,botResponse]);speak(botResponse.text);}}else if(message.includes('전기차')){if(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;fetchChargingStations(latitude,longitude);},handleGeolocationError);}else{const botResponse={id:Date.now(),text:\"Geolocation이 지원되지 않는 브라우저입니다.\",sender:'bot'};setMessages(messages=>[...messages,botResponse]);speak(botResponse.text);}}if(message.includes('고속도로 휴게소 정보 보러가기')){const RestareaUrl=\"http://localhost:3000/restArea\";const botResponse={id:Date.now(),text:\"\\uACE0\\uC18D\\uB3C4\\uB85C \\uD734\\uAC8C\\uC18C \\uC815\\uBCF4\\uB97C \\uD655\\uC778\\uD558\\uB7EC \\uAC00\\uB824\\uBA74 \\uC5EC\\uAE30\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694.\",sender:'bot',url:RestareaUrl// URL을 메시지 객체에 추가\n};setMessages(messages=>[...messages,botResponse]);speak(\"고속도로 휴게소 정보 페이지 링크를 보냈습니다.\");}if(message.includes('로그인 페이지로 이동하기')){const loginUrl=\"http://localhost:3000/login\";const botResponse={id:Date.now(),text:\"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uB824\\uBA74 \\uC5EC\\uAE30\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694.\",sender:'bot',url:loginUrl};setMessages(messages=>[...messages,botResponse]);speak(\"로그인 페이지 링크를 보냈습니다.\");}if(message.includes('통계 차트 보러가기')){const statsUrl=\"http://localhost:3000/sub\";const botResponse={id:Date.now(),text:\"\\uD1B5\\uACC4 \\uCC28\\uD2B8 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uB824\\uBA74 \\uC5EC\\uAE30\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694.\",sender:'bot',url:statsUrl};setMessages(messages=>[...messages,botResponse]);speak(\"통계 차트 페이지 링크를 보냈습니다.\");}};const handleGeolocationError=error=>{let errorMessage='';switch(error.code){case error.PERMISSION_DENIED:errorMessage=\"위치 정보 접근이 거부되었습니다.\";break;case error.POSITION_UNAVAILABLE:errorMessage=\"위치 정보를 사용할 수 없습니다.\";break;case error.TIMEOUT:errorMessage=\"위치 정보를 가져오는 요청이 시간 초과되었습니다.\";break;default:errorMessage=\"알 수 없는 오류가 발생했습니다.\";break;}const botResponse={id:Date.now(),text:errorMessage,sender:'bot'};setMessages(messages=>[...messages,botResponse]);speak(botResponse.text);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat_app\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-container\",children:messages.map(msg=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(msg.sender),children:msg.url?/*#__PURE__*/_jsx(Link,{to:msg.url,children:msg.text}):msg.text},msg.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"stations-list\",children:/*#__PURE__*/_jsx(Chat,{stations:fuelStations,type:\"fuel\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"stations-list\",children:/*#__PURE__*/_jsx(Chat,{stations:chargingStations,type:\"charge\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-input\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMessage('내 주변 최저가 주유소 찾기'),children:\"\\uB0B4 \\uC8FC\\uBCC0 \\uCD5C\\uC800\\uAC00 \\uC8FC\\uC720\\uC18C \\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMessage('내 주변 전기차 충전소 찾기'),children:\"\\uB0B4 \\uC8FC\\uBCC0 \\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C \\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMessage('고속도로 휴게소 정보 확인하러 가기'),children:\"\\uACE0\\uC18D\\uB3C4\\uB85C \\uD734\\uAC8C\\uC18C \\uC815\\uBCF4 \\uD655\\uC778\\uD558\\uB7EC \\uAC00\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMessage('로그인 페이지로 이동하기'),children:\"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMessage('통계 차트 보러가기'),children:\"\\uD1B5\\uACC4 \\uCC28\\uD2B8 \\uBCF4\\uB7EC\\uAC00\\uAE30\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"voice-button\",onClick:handleSpeech,disabled:isListening,children:[/*#__PURE__*/_jsx(FaMicrophone,{}),isListening?\"듣는 중...\":\"음성인식\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"tooltiptext\",children:[\"\\uC74C\\uC131\\uC778\\uC2DD \\uBC84\\uD2BC\\uC744 \\uB204\\uB974\\uACE0\",/*#__PURE__*/_jsx(\"br\",{}),\" \\uC8FC\\uC720\\uC18C! or \\uC804\\uAE30\\uCC28! \\uB77C\\uACE0\",/*#__PURE__*/_jsx(\"br\",{}),\" \\uC74C\\uC131\\uC73C\\uB85C \\uB9D0\\uC500\\uD558\\uC2DC\\uBA74 \",/*#__PURE__*/_jsx(\"br\",{}),\"\\uADF8\\uC5D0 \\uB9DE\\uB294 \\uC815\\uBCF4\\uAC00 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\",/*#__PURE__*/_jsx(\"br\",{}),\"(\\uC8FC\\uC720\\uC18C\\uB294 \\uBC18\\uACBD 5KM \\uB0B4\\uC5D0 \\uC788\\uB294 \\uCD5C\\uC800\\uAC00 \\uC8FC\\uC720\\uC18C\\uAC00,\",/*#__PURE__*/_jsx(\"br\",{}),\" \\uC804\\uAE30\\uCC28\\uB294 \\uBC18\\uACBD 5KM \\uB0B4\\uC5D0 \\uC788\\uB294 \\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C\\uAC00 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.)\"]})]})]})]});}export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","axios","FaMicrophone","Link","Stationinfo","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","fuelStations","chargingStations","isListening","setIsListening","Chat","_ref","stations","children","map","station","name","address","distance","id","initialMessage","Date","now","text","sender","speak","chatContainer","document","querySelector","scrollTop","scrollHeight","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","handleSpeech","recognition","webkitSpeechRecognition","start","onresult","event","speechResult","results","transcript","console","log","concat","handleMessage","onend","onerror","error","fetchChargingStations","latitude","longitude","response","post","formattedStations","data","formatChargingStationDistance","Distance","join","resultsMessage","fetchFuelPrices","type","method","url","parser","DOMParser","xmlDoc","parseFromString","oilNodes","getElementsByTagName","Array","from","node","textContent","price","sort","a","b","parseFloat","slice","formatFuelStationDistance","distanceInMeters","toFixed","message","includes","navigator","geolocation","getCurrentPosition","position","coords","handleGeolocationError","botResponse","RestareaUrl","loginUrl","statsUrl","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","className","msg","to","onClick","disabled"],"sources":["C:/UHB/rest_area/src/chatbot/chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './chat.css';\r\nimport { FaMicrophone } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport Stationinfo from './Stationinfo';\r\n\r\n\r\nfunction Chatbot() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [fuelStations] = useState([]);\r\n    const [chargingStations] = useState([]);\r\n    const [isListening, setIsListening] = useState(false);\r\n\r\n    const Chat = ({ stations }) => {\r\n        return (\r\n            <div>\r\n                {stations.map(station => (\r\n                    <Stationinfo\r\n                        key={station.id}\r\n                        name={station.name}\r\n                        address={station.address}\r\n                        distance={station.distance}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        const initialMessage = {\r\n            id: Date.now(),\r\n            text: '안녕하세요! 여러분 주변에 최저가 주유소, 전기차 충전소 위치 등을 알려주고, 고속도로의 휴게소 정보를 알려드립니다:)',\r\n            sender: 'bot'\r\n        };\r\n        setMessages([initialMessage]);\r\n        speak(initialMessage.text);\r\n\r\n        const chatContainer = document.querySelector('.chat-container');\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const chatContainer = document.querySelector('.chat-container');\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }, [messages]);\r\n\r\n    const speak = (text) => {\r\n        const synth = window.speechSynthesis;\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        utterance.lang = 'ko-KR';\r\n        synth.speak(utterance);\r\n    };\r\n\r\n    const handleSpeech = () => {\r\n        const recognition = new window.webkitSpeechRecognition();\r\n        recognition.lang = 'ko-KR';\r\n        recognition.start();\r\n\r\n        recognition.onresult = (event) => {\r\n            const speechResult = event.results[0][0].transcript;\r\n            console.log(`Recognized: ${speechResult}`);\r\n            handleMessage(speechResult);\r\n            setIsListening(false);\r\n        };\r\n\r\n        recognition.onend = () => {\r\n            setIsListening(false);\r\n        };\r\n\r\n        recognition.onerror = (event) => {\r\n            console.error(\"Speech recognition error\", event.error);\r\n            setIsListening(false);\r\n        };\r\n    };\r\n\r\n    const fetchChargingStations = async (latitude, longitude) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/location', {\r\n                latitude: latitude,\r\n                longitude: longitude\r\n            });\r\n            const formattedStations = response.data.stations.map(station => `${station['Station Name']} - 현 위치로부터 ${formatChargingStationDistance(station.Distance)} 떨어짐`).join('\\n');\r\n            const resultsMessage = {\r\n                id: Date.now(),\r\n                text: `전기차 충전소 정보:\\n${formattedStations}`,\r\n                sender: 'bot'\r\n            };\r\n            setMessages(messages => [...messages, resultsMessage]);\r\n            speak(resultsMessage.text);\r\n        } catch (error) {\r\n            console.error(\"Error fetching stations:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchFuelPrices = async (latitude, longitude, type) => {\r\n        try {\r\n            const response = await axios({\r\n                method: 'post',\r\n                url: 'http://localhost:5000/get_gas_stations22',\r\n                data: { latitude, longitude, type }\r\n            });\r\n\r\n            const parser = new DOMParser();\r\n            const xmlDoc = parser.parseFromString(response.data.data, \"application/xml\");\r\n            const oilNodes = xmlDoc.getElementsByTagName(\"OIL\");\r\n\r\n            const stations = Array.from(oilNodes).map(node => ({\r\n                id: node.getElementsByTagName(\"UNI_ID\")[0].textContent,\r\n                name: node.getElementsByTagName(\"OS_NM\")[0].textContent,\r\n                price: node.getElementsByTagName(\"PRICE\")[0].textContent,\r\n                distance: node.getElementsByTagName(\"DISTANCE\")[0].textContent\r\n            })).sort((a, b) => parseFloat(a.price) - parseFloat(b.price)).slice(0, 10);\r\n\r\n            const formattedStations = stations.map(station => `${station.name} - ${station.price}원 - 현 위치로부터 ${formatFuelStationDistance(station.distance)} 떨어짐`).join('\\n');\r\n            const resultsMessage = {\r\n                id: Date.now(),\r\n                text: `주유소 정보:\\n${formattedStations}`,\r\n                sender: 'bot'\r\n            };\r\n            setMessages(messages => [...messages, resultsMessage]);\r\n            speak(resultsMessage.text);\r\n        } catch (error) {\r\n            console.error(\"Error fetching stations:\", error);\r\n        }\r\n    };\r\n\r\n    const formatFuelStationDistance = (distance) => {\r\n        const distanceInMeters = parseFloat(distance);\r\n        return `${(distanceInMeters / 1000).toFixed(2)}km`;\r\n    };\r\n\r\n    const formatChargingStationDistance = (distance) => {\r\n        const distanceInMeters = parseFloat(distance);\r\n        return `${distanceInMeters.toFixed(2)}km`;\r\n    };\r\n\r\n    const handleMessage = (message) => {\r\n        setMessages(messages => [...messages, {id: Date.now(), text: message, sender: 'user'}]);\r\n        speak(message);\r\n\r\n        if (message.includes('주유소')) {\r\n            if (\"geolocation\" in navigator) {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    const {latitude, longitude} = position.coords;\r\n                    fetchFuelPrices(latitude, longitude, 'fuel');\r\n                }, handleGeolocationError);\r\n            } else {\r\n                const botResponse = {id: Date.now(), text: \"Geolocation이 지원되지 않는 브라우저입니다.\", sender: 'bot'};\r\n                setMessages(messages => [...messages, botResponse]);\r\n                speak(botResponse.text);\r\n            }\r\n        } else if (message.includes('전기차')) {\r\n            if (\"geolocation\" in navigator) {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    const {latitude, longitude} = position.coords;\r\n                    fetchChargingStations(latitude, longitude);\r\n                }, handleGeolocationError);\r\n            } else {\r\n                const botResponse = {id: Date.now(), text: \"Geolocation이 지원되지 않는 브라우저입니다.\", sender: 'bot'};\r\n                setMessages(messages => [...messages, botResponse]);\r\n                speak(botResponse.text);\r\n            }\r\n        }\r\n        if (message.includes('고속도로 휴게소 정보 보러가기')) {\r\n            const RestareaUrl = \"http://localhost:3000/restArea\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `고속도로 휴게소 정보를 확인하러 가려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: RestareaUrl // URL을 메시지 객체에 추가\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"고속도로 휴게소 정보 페이지 링크를 보냈습니다.\");\r\n        }\r\n        if (message.includes('로그인 페이지로 이동하기')) {\r\n            const loginUrl = \"http://localhost:3000/login\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `로그인 페이지로 이동하려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: loginUrl\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"로그인 페이지 링크를 보냈습니다.\");\r\n        }\r\n        if (message.includes('통계 차트 보러가기')) {\r\n            const statsUrl = \"http://localhost:3000/sub\";\r\n            const botResponse = {\r\n                id: Date.now(),\r\n                text: `통계 차트 페이지로 이동하려면 여기를 클릭하세요.`,\r\n                sender: 'bot',\r\n                url: statsUrl\r\n            };\r\n            setMessages(messages => [...messages, botResponse]);\r\n            speak(\"통계 차트 페이지 링크를 보냈습니다.\");\r\n        }\r\n    };\r\n\r\n\r\n    const handleGeolocationError = (error) => {\r\n        let errorMessage = '';\r\n        switch(error.code) {\r\n            case error.PERMISSION_DENIED:\r\n                errorMessage = \"위치 정보 접근이 거부되었습니다.\";\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n                errorMessage = \"위치 정보를 사용할 수 없습니다.\";\r\n                break;\r\n            case error.TIMEOUT:\r\n                errorMessage = \"위치 정보를 가져오는 요청이 시간 초과되었습니다.\";\r\n                break;\r\n            default:\r\n                errorMessage = \"알 수 없는 오류가 발생했습니다.\";\r\n                break;\r\n        }\r\n        const botResponse = {\r\n            id: Date.now(),\r\n            text: errorMessage,\r\n            sender: 'bot'\r\n        };\r\n        setMessages(messages => [...messages, botResponse]);\r\n        speak(botResponse.text);\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat_app\">\r\n            <div className=\"chat-container\">\r\n                {messages.map(msg => (\r\n                    <div key={msg.id} className={`message ${msg.sender}`}>\r\n                        {msg.url ? (\r\n                            <Link to={msg.url}>{msg.text}</Link>\r\n                        ) : (\r\n                            msg.text\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"stations-list\">\r\n                <Chat stations={fuelStations} type=\"fuel\"/>\r\n            </div>\r\n            <div className=\"stations-list\">\r\n                <Chat stations={chargingStations} type=\"charge\"/>\r\n            </div>\r\n\r\n            <div className=\"user-input\">\r\n                <button onClick={() => handleMessage('내 주변 최저가 주유소 찾기')}>내 주변 최저가 주유소 찾기</button>\r\n                <button onClick={() => handleMessage('내 주변 전기차 충전소 찾기')}>내 주변 전기차 충전소 찾기</button>\r\n                <button onClick={() => handleMessage('고속도로 휴게소 정보 확인하러 가기')}>고속도로 휴게소 정보 확인하러 가기</button>\r\n                <button onClick={() => handleMessage('로그인 페이지로 이동하기')}>로그인 페이지로 이동하기</button>\r\n                <button onClick={() => handleMessage('통계 차트 보러가기')}>통계 차트 보러가기</button>\r\n                <div className=\"tooltip\">\r\n                    <button className=\"voice-button\" onClick={handleSpeech} disabled={isListening}>\r\n                        <FaMicrophone/>\r\n                        {isListening ? \"듣는 중...\" : \"음성인식\"}\r\n                    </button>\r\n                    <span className=\"tooltiptext\">\r\n                        음성인식 버튼을 누르고<br/> 주유소! or 전기차! 라고<br/> 음성으로 말씀하시면 <br/>그에 맞는 정보가 표시됩니다.<br/>\r\n                        (주유소는 반경 5KM 내에 있는 최저가 주유소가,<br/> 전기차는 반경 5KM 내에 있는 전기차 충전소가 표시됩니다.)\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}