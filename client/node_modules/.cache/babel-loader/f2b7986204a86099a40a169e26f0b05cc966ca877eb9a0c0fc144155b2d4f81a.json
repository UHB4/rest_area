{"ast":null,"code":"var _jsxFileName = \"C:\\\\UHB\\\\rest_area\\\\src\\\\kako_map\\\\my_location.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction My_Location() {\n  _s();\n  const [state, setState] = useState({\n    center: {\n      lat: 33.450701,\n      lng: 126.570667\n    },\n    locations: [],\n    errMsg: null,\n    isLoading: true,\n    showOverlay: null\n  });\n  useEffect(() => {\n    // 위치 정보 권한 확인 및 초기 지도 중심 설정\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setState(prev => ({\n          ...prev,\n          center: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          isLoading: false\n        }));\n      }, error => {\n        setState(prev => ({\n          ...prev,\n          errMsg: error.message,\n          isLoading: false\n        }));\n      });\n    } else {\n      setState(prev => ({\n        ...prev,\n        errMsg: \"Geolocation을 사용할 수 없습니다.\",\n        isLoading: false\n      }));\n    }\n  }, []);\n  const fetchStations = () => {\n    console.log('Sending request to server:', state.center);\n    axios.post('http://localhost:5000/find-stations', state.center).then(response => {\n      console.log('Received data from server:', response.data);\n      setState(prev => ({\n        ...prev,\n        locations: response.data.dbData,\n        isLoading: false\n      }));\n    }).catch(error => {\n      console.error('Error fetching stations:', error);\n      setState(prev => ({\n        ...prev,\n        errMsg: '충전소 정보를 가져오는데 실패했습니다.',\n        isLoading: false\n      }));\n    });\n  };\n  const handleOverlay = id => {\n    setState(prev => ({\n      ...prev,\n      showOverlay: prev.showOverlay === id ? null : id\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      center: state.center,\n      style: {\n        width: \"100%\",\n        height: \"400px\"\n      },\n      level: 3,\n      children: [!state.isLoading && /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: state.center,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"5px\",\n            color: \"#000\"\n          },\n          children: state.errMsg ? state.errMsg : \"현재 위치\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), state.locations.map(loc => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(MapMarker, {\n          position: {\n            lat: loc.lat,\n            lng: loc.lng\n          },\n          onClick: () => handleOverlay(loc.statId),\n          image: {\n            src: loc.stat === '2' ? \"/images/green_marker.png\" : \"/images/orange_marker.png\",\n            size: {\n              width: 50,\n              height: 50\n            }\n          },\n          children: state.showOverlay === loc.statId && /*#__PURE__*/_jsxDEV(CustomOverlayMap, {\n            position: {\n              lat: loc.lat,\n              lng: loc.lng\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px\",\n                background: \"#fff\",\n                border: \"1px solid black\",\n                borderRadius: \"4px\",\n                fontSize: \"12px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  float: \"right\"\n                },\n                onClick: () => handleOverlay(null),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: loc.statNm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 70\n              }, this), loc.addr, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 51\n              }, this), \"Distance: \", loc.distance.toFixed(2), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, loc.statId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchStations,\n      style: {\n        position: \"absolute\",\n        top: \"10px\",\n        left: \"10px\"\n      },\n      children: \"\\uB0B4 \\uC8FC\\uBCC0 \\uC804\\uAE30\\uCC28 \\uCDA9\\uC804\\uC18C \\uC815\\uBCF4\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(My_Location, \"q+IlOwzoXiWyCnGGaoeSCU+PXY4=\");\n_c = My_Location;\nexport default My_Location;\nvar _c;\n$RefreshReg$(_c, \"My_Location\");","map":{"version":3,"names":["React","useState","useEffect","axios","Map","MapMarker","CustomOverlayMap","jsxDEV","_jsxDEV","Fragment","_Fragment","My_Location","_s","state","setState","center","lat","lng","locations","errMsg","isLoading","showOverlay","navigator","geolocation","getCurrentPosition","position","prev","coords","latitude","longitude","error","message","fetchStations","console","log","post","then","response","data","dbData","catch","handleOverlay","id","children","style","width","height","level","padding","color","fileName","_jsxFileName","lineNumber","columnNumber","map","loc","onClick","statId","image","src","stat","size","background","border","borderRadius","fontSize","float","statNm","addr","distance","toFixed","top","left","_c","$RefreshReg$"],"sources":["C:/UHB/rest_area/src/kako_map/my_location.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Map, MapMarker, CustomOverlayMap } from \"react-kakao-maps-sdk\";\r\n\r\nfunction My_Location() {\r\n    const [state, setState] = useState({\r\n        center: { lat: 33.450701, lng: 126.570667 },\r\n        locations: [],\r\n        errMsg: null,\r\n        isLoading: true,\r\n        showOverlay: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        // 위치 정보 권한 확인 및 초기 지도 중심 설정\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    setState(prev => ({\r\n                        ...prev,\r\n                        center: {\r\n                            lat: position.coords.latitude,\r\n                            lng: position.coords.longitude\r\n                        },\r\n                        isLoading: false\r\n                    }));\r\n                },\r\n                (error) => {\r\n                    setState(prev => ({\r\n                        ...prev,\r\n                        errMsg: error.message,\r\n                        isLoading: false\r\n                    }));\r\n                }\r\n            );\r\n        } else {\r\n            setState(prev => ({\r\n                ...prev,\r\n                errMsg: \"Geolocation을 사용할 수 없습니다.\",\r\n                isLoading: false\r\n            }));\r\n        }\r\n    }, []);\r\n\r\n    const fetchStations = () => {\r\n        console.log('Sending request to server:', state.center);\r\n        axios.post('http://localhost:5000/find-stations', state.center)\r\n            .then(response => {\r\n                console.log('Received data from server:', response.data);\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    locations: response.data.dbData,\r\n                    isLoading: false\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching stations:', error);\r\n                setState(prev => ({\r\n                    ...prev,\r\n                    errMsg: '충전소 정보를 가져오는데 실패했습니다.',\r\n                    isLoading: false\r\n                }));\r\n            });\r\n    };\r\n\r\n    const handleOverlay = (id) => {\r\n        setState(prev => ({\r\n            ...prev,\r\n            showOverlay: prev.showOverlay === id ? null : id\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Map center={state.center} style={{ width: \"100%\", height: \"400px\" }} level={3}>\r\n                {!state.isLoading && (\r\n                    <MapMarker position={state.center}>\r\n                        <div style={{ padding: \"5px\", color: \"#000\" }}>\r\n                            {state.errMsg ? state.errMsg : \"현재 위치\"}\r\n                        </div>\r\n                    </MapMarker>\r\n                )}\r\n                {state.locations.map(loc => (\r\n                    <React.Fragment key={loc.statId}>\r\n                        <MapMarker\r\n                            position={{ lat: loc.lat, lng: loc.lng }}\r\n                            onClick={() => handleOverlay(loc.statId)}\r\n                            image={{\r\n                                src: loc.stat === '2' ? \"/images/green_marker.png\" : \"/images/orange_marker.png\",\r\n                                size: { width: 50, height: 50 }\r\n                            }}\r\n                        >\r\n                            {state.showOverlay === loc.statId && (\r\n                                <CustomOverlayMap position={{ lat: loc.lat, lng: loc.lng }}>\r\n                                    <div style={{ padding: \"5px\", background: \"#fff\", border: \"1px solid black\", borderRadius: \"4px\", fontSize: \"12px\" }}>\r\n                                        <button style={{ float: \"right\" }} onClick={() => handleOverlay(null)}>X</button>\r\n                                        <strong>{loc.statNm}</strong><br />\r\n                                        {loc.addr}<br />\r\n                                        Distance: {loc.distance.toFixed(2)} km\r\n                                    </div>\r\n                                </CustomOverlayMap>\r\n                            )}\r\n                        </MapMarker>\r\n                    </React.Fragment>\r\n                ))}\r\n            </Map>\r\n            <button onClick={fetchStations} style={{ position: \"absolute\", top: \"10px\", left: \"10px\" }}>\r\n                내 주변 전기차 충전소 정보보기\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default My_Location;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}